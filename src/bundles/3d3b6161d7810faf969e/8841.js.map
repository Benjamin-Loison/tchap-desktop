{"version":3,"file":"bundles/3d3b6161d7810faf969e/8841.js","mappings":"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","sources":["webpack://element-web/./node_modules/@vector-im/compound-design-tokens/icons/overflow-horizontal.svg","webpack://element-web/./res/img/e2e/verified-deprecated.svg","webpack://element-web/./res/img/element-icons/settings/inactive.svg","webpack://element-web/./src/DecryptionFailureTracker.ts","webpack://element-web/./src/Presence.ts","webpack://element-web/./src/utils/device/snoozeBulkUnverifiedDeviceReminder.ts","webpack://element-web/./src/toasts/BulkUnverifiedSessionsToast.ts","webpack://element-web/./src/toasts/SetupEncryptionToast.ts","webpack://element-web/./src/toasts/UnverifiedSessionToast.tsx","webpack://element-web/./src/DeviceListener.ts","webpack://element-web/./src/utils/login.ts","webpack://element-web/./src/customisations/Lifecycle.ts","webpack://element-web/./src/components/views/dialogs/SessionRestoreErrorDialog.tsx","webpack://element-web/./src/components/views/dialogs/StorageEvictedDialog.tsx","webpack://element-web/./src/components/views/dialogs/ForwardDialog.tsx","webpack://element-web/./src/components/views/dialogs/ReportEventDialog.tsx","webpack://element-web/./src/dispatcher/payloads/OpenSpacePreferencesPayload.ts","webpack://element-web/./src/components/views/dialogs/SpacePreferencesDialog.tsx","webpack://element-web/./src/components/views/spaces/SpaceSettingsGeneralTab.tsx","webpack://element-web/./src/components/views/elements/EditableItemList.tsx","webpack://element-web/./src/customisations/Directory.ts","webpack://element-web/./src/components/views/room_settings/RoomPublishSetting.tsx","webpack://element-web/./src/components/views/room_settings/AliasSettings.tsx","webpack://element-web/./src/components/views/spaces/SpaceSettingsVisibilityTab.tsx","webpack://element-web/./src/components/views/dialogs/SpaceSettingsDialog.tsx","webpack://element-web/./src/utils/DialogOpener.ts","webpack://element-web/./src/utils/tokens/tokens.ts","webpack://element-web/./src/utils/oidc/TokenRefresher.ts","webpack://element-web/./src/Lifecycle.ts","webpack://element-web/./src/Login.ts","webpack://element-web/./src/utils/oidc/isUserRegistrationSupported.ts","webpack://element-web/./src/utils/oidc/registerClient.ts","webpack://element-web/./src/components/structures/auth/SetupEncryptionBody.tsx","webpack://element-web/./src/components/structures/grouper/LateEventGrouper.ts","webpack://element-web/./src/components/views/dialogs/VerificationRequestDialog.tsx","webpack://element-web/./src/components/views/dialogs/security/SetupEncryptionDialog.tsx","webpack://element-web/./src/components/views/elements/LabelledCheckbox.tsx","webpack://element-web/./src/components/views/elements/RoomName.tsx","webpack://element-web/./src/components/views/messages/DisambiguatedProfile.tsx","webpack://element-web/./src/components/views/messages/SenderProfile.tsx","webpack://element-web/./src/components/views/rooms/EntityTile.tsx","webpack://element-web/./src/components/views/rooms/EventPreview.tsx","webpack://element-web/./src/components/views/elements/ReplyChain.tsx","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/reply.js","webpack://element-web/./res/img/element-icons/room/message-bar/edit.svg","webpack://element-web/./res/img/element-icons/room/message-bar/emoji.svg","webpack://element-web/./res/img/element-icons/expand-message.svg","webpack://element-web/./res/img/element-icons/collapse-message.svg","webpack://element-web/./src/tchap/customisations/components/views/messages/ContentScanningDownloadActionButton.tsx","webpack://element-web/./src/components/views/messages/MessageActionBar.tsx","webpack://element-web/./src/components/views/messages/ReactionsRowButtonTooltip.tsx","webpack://element-web/./src/components/views/messages/ReactionsRowButton.tsx","webpack://element-web/./src/components/views/messages/ReactionsRow.tsx","webpack://element-web/./src/components/views/messages/TileErrorBoundary.tsx","webpack://element-web/./src/components/views/rooms/ThreadSummary.tsx","webpack://element-web/./src/NodeAnimator.tsx","webpack://element-web/./src/components/views/rooms/ReadReceiptMarker.tsx","webpack://element-web/./src/components/views/rooms/ReadReceiptGroup.tsx","webpack://element-web/./src/components/views/rooms/NotificationBadge/UnreadNotificationBadge.tsx","webpack://element-web/./res/img/element-icons/view-in-room.svg","webpack://element-web/./src/components/views/rooms/EventTile/EventTileThreadToolbar.tsx","webpack://element-web/./src/components/views/messages/PinnedMessageBadge.tsx","webpack://element-web/./src/components/views/rooms/EventTile.tsx","webpack://element-web/./src/components/views/messages/MImageReplyBody.tsx","webpack://element-web/./src/tchap/customisations/components/views/messages/ContentScanningImageReplyBody.tsx","webpack://element-web/./src/components/views/rooms/ReplyTile.tsx","webpack://element-web/./src/components/views/rooms/RoomContextDetails.tsx","webpack://element-web/./src/utils/i18n-helpers.ts","webpack://element-web/./src/components/views/settings/devices/DeviceMetaData.tsx","webpack://element-web/./src/components/views/settings/devices/filter.ts","webpack://element-web/./src/components/views/settings/devices/types.ts","webpack://element-web/./src/hooks/room/useTopic.ts","webpack://element-web/./src/indexing/EventIndex.ts","webpack://element-web/./src/indexing/EventIndexPeg.ts","webpack://element-web/./src/stores/SetupEncryptionStore.ts","webpack://element-web/./src/stores/ThreepidInviteStore.ts","webpack://element-web/./src/utils/EventRenderingUtils.ts","webpack://element-web/./src/utils/device/clientInformation.ts","webpack://element-web/./src/utils/device/dehydration.ts","webpack://element-web/./src/utils/device/isDeviceVerified.ts","webpack://element-web/./src/utils/oidc/authorize.ts","webpack://element-web/./src/utils/oidc/error.ts","webpack://element-web/./node_modules/src/index.ts","webpack://element-web/./node_modules/cuint/index.js","webpack://element-web/./node_modules/cuint/lib/uint32.js","webpack://element-web/./node_modules/cuint/lib/uint64.js","webpack://element-web/./node_modules/reflect-metadata/Reflect.js","webpack://element-web/./node_modules/seedrandom/index.js","webpack://element-web/./node_modules/seedrandom/lib/alea.js","webpack://element-web/./node_modules/seedrandom/lib/tychei.js","webpack://element-web/./node_modules/seedrandom/lib/xor128.js","webpack://element-web/./node_modules/seedrandom/lib/xor4096.js","webpack://element-web/./node_modules/seedrandom/lib/xorshift7.js","webpack://element-web/./node_modules/seedrandom/lib/xorwow.js","webpack://element-web/./node_modules/seedrandom/seedrandom.js","webpack://element-web/./node_modules/xxhashjs/lib/index.js","webpack://element-web/./node_modules/xxhashjs/lib/xxhash.js","webpack://element-web/./node_modules/xxhashjs/lib/xxhash64.js","webpack://element-web/./node_modules/bloom-filters/dist/base-filter.js","webpack://element-web/./node_modules/bloom-filters/dist/bloom/bit-set.js","webpack://element-web/./node_modules/bloom-filters/dist/bloom/partitioned-bloom-filter.js","webpack://element-web/./node_modules/bloom-filters/dist/bloom/scalable-bloom-filter.js","webpack://element-web/./node_modules/bloom-filters/dist/exportable.js","webpack://element-web/./node_modules/bloom-filters/dist/hashing/hashing.js","webpack://element-web/./node_modules/bloom-filters/dist/utils.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/overflow-horizontal.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/pin-solid.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/pin.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/restart.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/threads-solid.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/unpin.js"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgOverflowHorizontal = function SvgOverflowHorizontal(props, ref) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    role: \"presentation\",\n    \"aria-hidden\": true,\n    ref: ref\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 14q-.824 0-1.412-.588A1.93 1.93 0 0 1 4 12q0-.825.588-1.412A1.93 1.93 0 0 1 6 10q.824 0 1.412.588Q8 11.175 8 12t-.588 1.412A1.93 1.93 0 0 1 6 14m6 0q-.825 0-1.412-.588A1.93 1.93 0 0 1 10 12q0-.825.588-1.412A1.93 1.93 0 0 1 12 10q.825 0 1.412.588Q14 11.175 14 12t-.588 1.412A1.93 1.93 0 0 1 12 14m6 0q-.824 0-1.413-.588A1.93 1.93 0 0 1 16 12q0-.825.587-1.412A1.93 1.93 0 0 1 18 10q.824 0 1.413.588Q20 11.175 20 12t-.587 1.412A1.93 1.93 0 0 1 18 14\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgOverflowHorizontal);\nexport { ForwardRef as Icon };\nexport default \"icons/overflow-horizontal.103407e.svg\";","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgVerifiedDeprecated = function SvgVerifiedDeprecated(props, ref) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 18 18\",\n    role: \"presentation\",\n    \"aria-hidden\": true,\n    ref: ref\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#010101\",\n    fillRule: \"evenodd\",\n    d: \"M2 3.05v6.22C2 15.63 9 17 9 17s7-1.37 7-7.73V3.05L9 1zm9.94 2.47c.19-.18.49-.17.67.02.16.18.16.45.02.63l-4.22 5.11-.03.04c-.28.34-.79.39-1.13.11a.3.3 0 0 1-.077-.067l-.023-.023-1.81-2.08c-.2-.24-.18-.6.06-.8.2-.18.49-.18.7-.04l1.57 1.1z\",\n    clipRule: \"evenodd\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgVerifiedDeprecated);\nexport { ForwardRef as Icon };\nexport default \"img/e2e/verified-deprecated.9030dfd.svg\";","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgInactive = function SvgInactive(props, ref) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 8 14\",\n    role: \"presentation\",\n    \"aria-hidden\": true,\n    ref: ref\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M1.333.333C.6.333 0 .933 0 1.666l.007 2.12c0 .354.14.687.386.94L2.667 7 .393 9.286a1.33 1.33 0 0 0-.386.94L0 12.333c0 .733.6 1.333 1.333 1.333h5.334c.733 0 1.333-.6 1.333-1.333v-2.107c0-.353-.14-.693-.387-.94L5.333 7l2.274-2.267C7.86 4.48 8 4.14 8 3.786v-2.12C8 .933 7.4.333 6.667.333zm5.334 9.94v1.393c0 .367-.3.667-.667.667H2a.67.67 0 0 1-.667-.667v-1.393c0-.18.074-.347.194-.473L4 7.333l2.473 2.473c.12.12.194.294.194.467\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgInactive);\nexport { ForwardRef as Icon };\nexport default \"img/element-icons/settings/inactive.0c6bfa4.svg\";","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2018-2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport ScalableBloomFilter from \"bloom-filters/dist/bloom/scalable-bloom-filter\";\nimport { HttpApiEvent, MatrixClient, MatrixEventEvent, MatrixEvent } from \"matrix-js-sdk/src/matrix\";\nimport { Error as ErrorEvent } from \"@matrix-org/analytics-events/types/typescript/Error\";\nimport { DecryptionFailureCode, CryptoEvent } from \"matrix-js-sdk/src/crypto-api\";\n\nimport { PosthogAnalytics } from \"./PosthogAnalytics\";\nimport { MEGOLM_ENCRYPTION_ALGORITHM } from \"./utils/crypto\";\n\n/** The key that we use to store the `reportedEvents` bloom filter in localstorage */\nconst DECRYPTION_FAILURE_STORAGE_KEY = \"mx_decryption_failure_event_ids\";\n\nexport class DecryptionFailure {\n    /**\n     * The time between our initial failure to decrypt and our successful\n     * decryption (if we managed to decrypt).\n     */\n    public timeToDecryptMillis?: number;\n\n    public constructor(\n        public readonly failedEventId: string,\n        public readonly errorCode: DecryptionFailureCode,\n        /**\n         * The time that we failed to decrypt the event.  If we failed to decrypt\n         * multiple times, this will be the time of the first failure.\n         */\n        public readonly ts: number,\n        /**\n         * Is the sender on a different server from us?\n         */\n        public readonly isFederated: boolean | undefined,\n        /**\n         * Was the failed event ever visible to the user?\n         */\n        public wasVisibleToUser: boolean,\n        /**\n         * Has the user verified their own cross-signing identity, as of the most\n         * recent decryption attempt for this event?\n         */\n        public userTrustsOwnIdentity: boolean | undefined,\n    ) {}\n}\n\ntype ErrorCode = ErrorEvent[\"name\"];\n/** Properties associated with decryption errors, for classifying the error. */\nexport type ErrorProperties = Omit<ErrorEvent, \"eventName\" | \"domain\" | \"name\" | \"context\">;\ntype TrackingFn = (trackedErrCode: ErrorCode, rawError: string, properties: ErrorProperties) => void;\nexport type ErrCodeMapFn = (errcode: DecryptionFailureCode) => ErrorCode;\n\nexport class DecryptionFailureTracker {\n    private static internalInstance = new DecryptionFailureTracker(\n        (errorCode, rawError, properties) => {\n            const event: ErrorEvent = {\n                eventName: \"Error\",\n                domain: \"E2EE\",\n                name: errorCode,\n                context: `mxc_crypto_error_type_${rawError}`,\n                ...properties,\n            };\n            PosthogAnalytics.instance.trackEvent<ErrorEvent>(event);\n        },\n        (errorCode) => {\n            // Map JS-SDK error codes to tracker codes for aggregation\n            switch (errorCode) {\n                case DecryptionFailureCode.MEGOLM_UNKNOWN_INBOUND_SESSION_ID:\n                case DecryptionFailureCode.MEGOLM_KEY_WITHHELD:\n                    return \"OlmKeysNotSentError\";\n                case DecryptionFailureCode.MEGOLM_KEY_WITHHELD_FOR_UNVERIFIED_DEVICE:\n                    return \"RoomKeysWithheldForUnverifiedDevice\";\n                case DecryptionFailureCode.OLM_UNKNOWN_MESSAGE_INDEX:\n                    return \"OlmIndexError\";\n                case DecryptionFailureCode.HISTORICAL_MESSAGE_NO_KEY_BACKUP:\n                case DecryptionFailureCode.HISTORICAL_MESSAGE_BACKUP_UNCONFIGURED:\n                case DecryptionFailureCode.HISTORICAL_MESSAGE_WORKING_BACKUP:\n                    return \"HistoricalMessage\";\n                case DecryptionFailureCode.HISTORICAL_MESSAGE_USER_NOT_JOINED:\n                    return \"ExpectedDueToMembership\";\n                case DecryptionFailureCode.SENDER_IDENTITY_PREVIOUSLY_VERIFIED:\n                    return \"ExpectedVerificationViolation\";\n                case DecryptionFailureCode.UNSIGNED_SENDER_DEVICE:\n                    return \"ExpectedSentByInsecureDevice\";\n                default:\n                    return \"UnknownError\";\n            }\n        },\n    );\n\n    /** Map of event IDs to `DecryptionFailure` items.\n     *\n     * Every `CHECK_INTERVAL_MS`, this map is checked for failures that happened >\n     * `MAXIMUM_LATE_DECRYPTION_PERIOD` ago (considered undecryptable), or\n     * decryptions that took > `GRACE_PERIOD_MS` (considered late decryptions).\n     *\n     * Any such events are then reported via the `TrackingFn`.\n     */\n    public failures: Map<string, DecryptionFailure> = new Map();\n\n    /** Set of event IDs that have been visible to the user.\n     *\n     * This will only contain events that are not already in `reportedEvents`.\n     */\n    public visibleEvents: Set<string> = new Set();\n\n    /** Bloom filter tracking event IDs of failures that were reported previously */\n    private reportedEvents: ScalableBloomFilter = new ScalableBloomFilter();\n\n    /** Set to an interval ID when `start` is called */\n    public checkInterval: number | null = null;\n    public trackInterval: number | null = null;\n\n    /** Call `checkFailures` every `CHECK_INTERVAL_MS`. */\n    public static CHECK_INTERVAL_MS = 40000;\n\n    /** If the event is successfully decrypted in less than 4s, we don't report. */\n    public static GRACE_PERIOD_MS = 4000;\n\n    /** Maximum time for an event to be decrypted to be considered a late\n     * decryption.  If it takes longer, we consider it undecryptable. */\n    public static MAXIMUM_LATE_DECRYPTION_PERIOD = 60000;\n\n    /** Properties that will be added to all reported events (mainly reporting\n     * information about the Matrix client). */\n    private baseProperties?: ErrorProperties = {};\n\n    /** The user's domain (homeserver name). */\n    private userDomain?: string;\n\n    /** Whether the user has verified their own cross-signing keys. */\n    private userTrustsOwnIdentity: boolean | undefined = undefined;\n\n    /** Whether we are currently checking our own verification status. */\n    private checkingVerificationStatus: boolean = false;\n\n    /** Whether we should retry checking our own verification status after we're\n     * done our current check. i.e. we got notified that our keys changed while\n     * we were already checking, so the result could be out of date. */\n    private retryVerificationStatus: boolean = false;\n\n    /**\n     * Create a new DecryptionFailureTracker.\n     *\n     * Call `start(client)` to start the tracker.  The tracker will listen for\n     * decryption events on the client and track decryption failures, and will\n     * automatically stop tracking when the client logs out.\n     *\n     * @param {function} fn The tracking function, which will be called when failures\n     * are tracked. The function should have a signature `(trackedErrorCode, rawError, properties) => {...}`,\n     * where `errorCode` matches the output of `errorCodeMapFn`, `rawError` is the original\n     * error (that is, the input to `errorCodeMapFn`), and `properties` is a map of the\n     * error properties for classifying the error.\n     *\n     * @param {function} errorCodeMapFn The function used to map decryption failure reason  codes to the\n     * `trackedErrorCode`.\n     *\n     * @param {boolean} checkReportedEvents Check if we have already reported an event.\n     * Defaults to `true`. This is only used for tests, to avoid possible false positives from\n     * the Bloom filter. This should be set to `false` for all tests except for those\n     * that specifically test the `reportedEvents` functionality.\n     */\n    private constructor(\n        private readonly fn: TrackingFn,\n        private readonly errorCodeMapFn: ErrCodeMapFn,\n        private readonly checkReportedEvents: boolean = true,\n    ) {\n        if (!fn || typeof fn !== \"function\") {\n            throw new Error(\"DecryptionFailureTracker requires tracking function\");\n        }\n\n        if (typeof errorCodeMapFn !== \"function\") {\n            throw new Error(\"DecryptionFailureTracker second constructor argument should be a function\");\n        }\n    }\n\n    public static get instance(): DecryptionFailureTracker {\n        return DecryptionFailureTracker.internalInstance;\n    }\n\n    private loadReportedEvents(): void {\n        const storedFailures = localStorage.getItem(DECRYPTION_FAILURE_STORAGE_KEY);\n        if (storedFailures) {\n            this.reportedEvents = ScalableBloomFilter.fromJSON(JSON.parse(storedFailures));\n        } else {\n            this.reportedEvents = new ScalableBloomFilter();\n        }\n    }\n\n    private saveReportedEvents(): void {\n        localStorage.setItem(DECRYPTION_FAILURE_STORAGE_KEY, JSON.stringify(this.reportedEvents.saveAsJSON()));\n    }\n\n    /** Callback for when an event is decrypted.\n     *\n     * This function is called by our `MatrixEventEvent.Decrypted` event\n     * handler after a decryption attempt on an event, whether the decryption\n     * is successful or not.\n     *\n     * @param e the event that was decrypted\n     *\n     * @param nowTs the current timestamp\n     */\n    private eventDecrypted(e: MatrixEvent, nowTs: number): void {\n        // for now we only track megolm decryption failures\n        if (e.getWireContent().algorithm != MEGOLM_ENCRYPTION_ALGORITHM) {\n            return;\n        }\n        const errCode = e.decryptionFailureReason;\n        if (errCode === null) {\n            // Could be an event in the failures, remove it\n            this.removeDecryptionFailuresForEvent(e, nowTs);\n            return;\n        }\n\n        const eventId = e.getId()!;\n\n        // if it's already reported, we don't need to do anything\n        if (this.reportedEvents.has(eventId) && this.checkReportedEvents) {\n            return;\n        }\n\n        // if we already have a record of this event, use the previously-recorded timestamp\n        const failure = this.failures.get(eventId);\n        const ts = failure ? failure.ts : nowTs;\n\n        const sender = e.getSender();\n        const senderDomain = sender?.replace(/^.*?:/, \"\");\n        let isFederated: boolean | undefined;\n        if (this.userDomain !== undefined && senderDomain !== undefined) {\n            isFederated = this.userDomain !== senderDomain;\n        }\n\n        const wasVisibleToUser = this.visibleEvents.has(eventId);\n        this.failures.set(\n            eventId,\n            new DecryptionFailure(eventId, errCode, ts, isFederated, wasVisibleToUser, this.userTrustsOwnIdentity),\n        );\n    }\n\n    public addVisibleEvent(e: MatrixEvent): void {\n        const eventId = e.getId()!;\n\n        // if it's already reported, we don't need to do anything\n        if (this.reportedEvents.has(eventId) && this.checkReportedEvents) {\n            return;\n        }\n\n        // if we've already marked the event as a failure, mark it as visible\n        // in the failure object\n        const failure = this.failures.get(eventId);\n        if (failure) {\n            failure.wasVisibleToUser = true;\n        }\n\n        this.visibleEvents.add(eventId);\n    }\n\n    public removeDecryptionFailuresForEvent(e: MatrixEvent, nowTs: number): void {\n        const eventId = e.getId()!;\n        const failure = this.failures.get(eventId);\n        if (failure) {\n            this.failures.delete(eventId);\n\n            const timeToDecryptMillis = nowTs - failure.ts;\n            if (timeToDecryptMillis < DecryptionFailureTracker.GRACE_PERIOD_MS) {\n                // the event decrypted on time, so we don't need to report it\n                return;\n            } else if (timeToDecryptMillis <= DecryptionFailureTracker.MAXIMUM_LATE_DECRYPTION_PERIOD) {\n                // The event is a late decryption, so store the time it took.\n                // If the time to decrypt is longer than\n                // MAXIMUM_LATE_DECRYPTION_PERIOD, we consider the event as\n                // undecryptable, and leave timeToDecryptMillis undefined\n                failure.timeToDecryptMillis = timeToDecryptMillis;\n            }\n            this.reportFailure(failure);\n        }\n    }\n\n    private async handleKeysChanged(client: MatrixClient): Promise<void> {\n        if (this.checkingVerificationStatus) {\n            // Flag that we'll need to do another check once the current check completes.\n            this.retryVerificationStatus = true;\n            return;\n        }\n\n        this.checkingVerificationStatus = true;\n        try {\n            do {\n                this.retryVerificationStatus = false;\n                this.userTrustsOwnIdentity = (\n                    await client.getCrypto()!.getUserVerificationStatus(client.getUserId()!)\n                ).isCrossSigningVerified();\n            } while (this.retryVerificationStatus);\n        } finally {\n            this.checkingVerificationStatus = false;\n        }\n    }\n\n    /**\n     * Start checking for and tracking failures.\n     */\n    public async start(client: MatrixClient): Promise<void> {\n        this.loadReportedEvents();\n        await this.calculateClientProperties(client);\n        this.registerHandlers(client);\n        this.checkInterval = window.setInterval(\n            () => this.checkFailures(Date.now()),\n            DecryptionFailureTracker.CHECK_INTERVAL_MS,\n        );\n    }\n\n    private async calculateClientProperties(client: MatrixClient): Promise<void> {\n        const baseProperties: ErrorProperties = {};\n        this.baseProperties = baseProperties;\n\n        this.userDomain = client.getDomain() ?? undefined;\n        if (this.userDomain === \"matrix.org\") {\n            baseProperties.isMatrixDotOrg = true;\n        } else if (this.userDomain !== undefined) {\n            baseProperties.isMatrixDotOrg = false;\n        }\n\n        const crypto = client.getCrypto();\n        if (crypto) {\n            const version = crypto.getVersion();\n            if (version.startsWith(\"Rust SDK\")) {\n                baseProperties.cryptoSDK = \"Rust\";\n            } else {\n                baseProperties.cryptoSDK = \"Legacy\";\n            }\n            this.userTrustsOwnIdentity = (\n                await crypto.getUserVerificationStatus(client.getUserId()!)\n            ).isCrossSigningVerified();\n        }\n    }\n\n    private registerHandlers(client: MatrixClient): void {\n        // After the client attempts to decrypt an event, we examine it to see\n        // if it needs to be reported.\n        const decryptedHandler = (e: MatrixEvent): void => this.eventDecrypted(e, Date.now());\n        // When our keys change, we check if the cross-signing keys are now trusted.\n        const keysChangedHandler = (): void => {\n            this.handleKeysChanged(client).catch((e) => {\n                console.log(\"Error handling KeysChanged event\", e);\n            });\n        };\n        // When logging out, remove our handlers and destroy state\n        const loggedOutHandler = (): void => {\n            client.removeListener(MatrixEventEvent.Decrypted, decryptedHandler);\n            client.removeListener(CryptoEvent.KeysChanged, keysChangedHandler);\n            client.removeListener(HttpApiEvent.SessionLoggedOut, loggedOutHandler);\n            this.stop();\n        };\n\n        client.on(MatrixEventEvent.Decrypted, decryptedHandler);\n        client.on(CryptoEvent.KeysChanged, keysChangedHandler);\n        client.on(HttpApiEvent.SessionLoggedOut, loggedOutHandler);\n    }\n\n    /**\n     * Clear state and stop checking for and tracking failures.\n     */\n    private stop(): void {\n        if (this.checkInterval) clearInterval(this.checkInterval);\n        if (this.trackInterval) clearInterval(this.trackInterval);\n\n        this.userTrustsOwnIdentity = undefined;\n        this.failures = new Map();\n        this.visibleEvents = new Set();\n    }\n\n    /**\n     * Mark failures as undecryptable or late. Only mark one failure per event ID.\n     *\n     * @param {number} nowTs the timestamp that represents the time now.\n     */\n    public checkFailures(nowTs: number): void {\n        const failuresNotReady: Map<string, DecryptionFailure> = new Map();\n        for (const [eventId, failure] of this.failures) {\n            if (\n                failure.timeToDecryptMillis !== undefined ||\n                nowTs > failure.ts + DecryptionFailureTracker.MAXIMUM_LATE_DECRYPTION_PERIOD\n            ) {\n                // we report failures under two conditions:\n                // - if `timeToDecryptMillis` is set, we successfully decrypted\n                //   the event, but we got the key late.  We report it so that we\n                //   have the late decrytion stats.\n                // - we haven't decrypted yet and it's past the time for it to be\n                //   considered a \"late\" decryption, so we count it as\n                //   undecryptable.\n                this.reportFailure(failure);\n            } else {\n                // the event isn't old enough, so we still need to keep track of it\n                failuresNotReady.set(eventId, failure);\n            }\n        }\n        this.failures = failuresNotReady;\n\n        this.saveReportedEvents();\n    }\n\n    /**\n     * If there are failures that should be tracked, call the given trackDecryptionFailure\n     * function with the failures that should be tracked.\n     */\n    private reportFailure(failure: DecryptionFailure): void {\n        const errorCode = failure.errorCode;\n        const trackedErrorCode = this.errorCodeMapFn(errorCode);\n        const properties: ErrorProperties = {\n            timeToDecryptMillis: failure.timeToDecryptMillis ?? -1,\n            wasVisibleToUser: failure.wasVisibleToUser,\n        };\n        if (failure.isFederated !== undefined) {\n            properties.isFederated = failure.isFederated;\n        }\n        if (failure.userTrustsOwnIdentity !== undefined) {\n            properties.userTrustsOwnIdentity = failure.userTrustsOwnIdentity;\n        }\n        if (this.baseProperties) {\n            Object.assign(properties, this.baseProperties);\n        }\n        this.fn(trackedErrorCode, errorCode, properties);\n\n        this.reportedEvents.add(failure.failedEventId);\n        // once we've added it to reportedEvents, we won't check\n        // visibleEvents for it any more\n        this.visibleEvents.delete(failure.failedEventId);\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2019 The Matrix.org Foundation C.I.C.\nCopyright 2018 New Vector Ltd\nCopyright 2015, 2016 OpenMarket Ltd\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { logger } from \"matrix-js-sdk/src/logger\";\nimport { SetPresence } from \"matrix-js-sdk/src/matrix\";\n\nimport { MatrixClientPeg } from \"./MatrixClientPeg\";\nimport dis from \"./dispatcher/dispatcher\";\nimport Timer from \"./utils/Timer\";\nimport { ActionPayload } from \"./dispatcher/payloads\";\n\n// Time in ms after that a user is considered as unavailable/away\nconst UNAVAILABLE_TIME_MS = 3 * 60 * 1000; // 3 mins\n\nclass Presence {\n    private unavailableTimer?: Timer;\n    private dispatcherRef?: string;\n    private state?: SetPresence;\n\n    /**\n     * Start listening the user activity to evaluate his presence state.\n     * Any state change will be sent to the homeserver.\n     */\n    public async start(): Promise<void> {\n        this.unavailableTimer = new Timer(UNAVAILABLE_TIME_MS);\n        // the user_activity_start action starts the timer\n        this.dispatcherRef = dis.register(this.onAction);\n        while (this.unavailableTimer) {\n            try {\n                await this.unavailableTimer.finished();\n                this.setState(SetPresence.Unavailable);\n            } catch {\n                /* aborted, stop got called */\n            }\n        }\n    }\n\n    /**\n     * Stop tracking user activity\n     */\n    public stop(): void {\n        dis.unregister(this.dispatcherRef);\n        this.dispatcherRef = undefined;\n        this.unavailableTimer?.abort();\n        this.unavailableTimer = undefined;\n    }\n\n    /**\n     * Get the current presence state.\n     * @returns {string} the presence state (see PRESENCE enum)\n     */\n    public getState(): SetPresence | null {\n        return this.state ?? null;\n    }\n\n    private onAction = (payload: ActionPayload): void => {\n        if (payload.action === \"user_activity\") {\n            this.setState(SetPresence.Online);\n            this.unavailableTimer?.restart();\n        }\n    };\n\n    /**\n     * Set the presence state.\n     * If the state has changed, the homeserver will be notified.\n     * @param {string} newState the new presence state (see PRESENCE enum)\n     */\n    private async setState(newState: SetPresence): Promise<void> {\n        if (newState === this.state) {\n            return;\n        }\n\n        const oldState = this.state;\n        this.state = newState;\n\n        if (MatrixClientPeg.safeGet().isGuest()) {\n            return; // don't try to set presence when a guest; it won't work.\n        }\n\n        try {\n            await MatrixClientPeg.safeGet().setSyncPresence(this.state);\n            logger.debug(\"Presence:\", newState);\n        } catch (err) {\n            logger.error(\"Failed to set presence:\", err);\n            this.state = oldState;\n        }\n    }\n}\n\nexport default new Presence();\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nconst SNOOZE_KEY = \"mx_snooze_bulk_unverified_device_nag\";\n// one week\nconst snoozePeriod = 1000 * 60 * 60 * 24 * 7;\nexport const snoozeBulkUnverifiedDeviceReminder = (): void => {\n    try {\n        localStorage.setItem(SNOOZE_KEY, String(Date.now()));\n    } catch (error) {\n        logger.error(\"Failed to persist bulk unverified device nag snooze\", error);\n    }\n};\n\nexport const isBulkUnverifiedDeviceReminderSnoozed = (): boolean => {\n    try {\n        const snoozedTimestamp = localStorage.getItem(SNOOZE_KEY);\n\n        const parsedTimestamp = Number.parseInt(snoozedTimestamp || \"\", 10);\n\n        return Number.isInteger(parsedTimestamp) && parsedTimestamp + snoozePeriod > Date.now();\n    } catch {\n        return false;\n    }\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { _t } from \"../languageHandler\";\nimport dis from \"../dispatcher/dispatcher\";\nimport DeviceListener from \"../DeviceListener\";\nimport GenericToast from \"../components/views/toasts/GenericToast\";\nimport ToastStore from \"../stores/ToastStore\";\nimport { Action } from \"../dispatcher/actions\";\nimport { snoozeBulkUnverifiedDeviceReminder } from \"../utils/device/snoozeBulkUnverifiedDeviceReminder\";\n\nconst TOAST_KEY = \"reviewsessions\";\n\nexport const showToast = (deviceIds: Set<string>): void => {\n    const onAccept = (): void => {\n        DeviceListener.sharedInstance().dismissUnverifiedSessions(deviceIds);\n\n        dis.dispatch({\n            action: Action.ViewUserDeviceSettings,\n        });\n    };\n\n    const onReject = (): void => {\n        DeviceListener.sharedInstance().dismissUnverifiedSessions(deviceIds);\n        snoozeBulkUnverifiedDeviceReminder();\n    };\n\n    ToastStore.sharedInstance().addOrReplaceToast({\n        key: TOAST_KEY,\n        title: _t(\"encryption|verification|unverified_sessions_toast_title\"),\n        icon: \"verification_warning\",\n        props: {\n            description: _t(\"encryption|verification|unverified_sessions_toast_description\"),\n            primaryLabel: _t(\"action|review\"),\n            onPrimaryClick: onAccept,\n            secondaryLabel: _t(\"encryption|verification|unverified_sessions_toast_reject\"),\n            onSecondaryClick: onReject,\n        },\n        component: GenericToast,\n        priority: 50,\n    });\n};\n\nexport const hideToast = (): void => {\n    ToastStore.sharedInstance().dismissToast(TOAST_KEY);\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport Modal from \"../Modal\";\nimport { _t } from \"../languageHandler\";\nimport DeviceListener from \"../DeviceListener\";\nimport SetupEncryptionDialog from \"../components/views/dialogs/security/SetupEncryptionDialog\";\nimport { accessSecretStorage } from \"../SecurityManager\";\nimport ToastStore from \"../stores/ToastStore\";\nimport GenericToast from \"../components/views/toasts/GenericToast\";\nimport { ModuleRunner } from \"../modules/ModuleRunner\";\nimport { SetupEncryptionStore } from \"../stores/SetupEncryptionStore\";\nimport Spinner from \"../components/views/elements/Spinner\";\n\nconst TOAST_KEY = \"setupencryption\";\n\nconst getTitle = (kind: Kind): string => {\n    switch (kind) {\n        case Kind.SET_UP_ENCRYPTION:\n            return _t(\"encryption|set_up_toast_title\");\n        case Kind.VERIFY_THIS_SESSION:\n            return _t(\"encryption|verify_toast_title\");\n    }\n};\n\nconst getIcon = (kind: Kind): string => {\n    switch (kind) {\n        case Kind.SET_UP_ENCRYPTION:\n            return \"secure_backup\";\n        case Kind.VERIFY_THIS_SESSION:\n            return \"verification_warning\";\n    }\n};\n\nconst getSetupCaption = (kind: Kind): string => {\n    switch (kind) {\n        case Kind.SET_UP_ENCRYPTION:\n            /* :TCHAP: cross-signing-ui\n            return _t(\"action|continue\");\n            */\n            return _t(\"action|enable\");\n            // end :TCHAP:\n        case Kind.VERIFY_THIS_SESSION:\n            return _t(\"action|verify\");\n    }\n};\n\nconst getDescription = (kind: Kind): string => {\n    switch (kind) {\n        case Kind.SET_UP_ENCRYPTION:\n            return _t(\"encryption|set_up_toast_description\");\n        case Kind.VERIFY_THIS_SESSION:\n            return _t(\"encryption|verify_toast_description\");\n    }\n};\n\nexport enum Kind {\n    SET_UP_ENCRYPTION = \"set_up_encryption\",\n    VERIFY_THIS_SESSION = \"verify_this_session\",\n}\n\nconst onReject = (): void => {\n    DeviceListener.sharedInstance().dismissEncryptionSetup();\n};\n\nexport const showToast = (kind: Kind): void => {\n    if (\n        ModuleRunner.instance.extensions.cryptoSetup.setupEncryptionNeeded({\n            kind: kind as any,\n            storeProvider: { getInstance: () => SetupEncryptionStore.sharedInstance() },\n        })\n    ) {\n        return;\n    }\n\n    const onAccept = async (): Promise<void> => {\n        if (kind === Kind.VERIFY_THIS_SESSION) {\n            Modal.createDialog(SetupEncryptionDialog, {}, undefined, /* priority = */ false, /* static = */ true);\n        } else {\n            const modal = Modal.createDialog(\n                Spinner,\n                undefined,\n                \"mx_Dialog_spinner\",\n                /* priority */ false,\n                /* static */ true,\n            );\n            try {\n                await accessSecretStorage();\n            } finally {\n                modal.close();\n            }\n        }\n    };\n\n    ToastStore.sharedInstance().addOrReplaceToast({\n        key: TOAST_KEY,\n        title: getTitle(kind),\n        icon: getIcon(kind),\n        props: {\n            description: getDescription(kind),\n            primaryLabel: getSetupCaption(kind),\n            onPrimaryClick: onAccept,\n            secondaryLabel: _t(\"encryption|verification|unverified_sessions_toast_reject\"),\n            onSecondaryClick: onReject,\n            destructive: \"secondary\",\n        },\n        component: GenericToast,\n        priority: kind === Kind.VERIFY_THIS_SESSION ? 95 : 40,\n    });\n};\n\nexport const hideToast = (): void => {\n    ToastStore.sharedInstance().dismissToast(TOAST_KEY);\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\n\nimport { _t } from \"../languageHandler\";\nimport dis from \"../dispatcher/dispatcher\";\nimport { MatrixClientPeg } from \"../MatrixClientPeg\";\nimport DeviceListener from \"../DeviceListener\";\nimport ToastStore from \"../stores/ToastStore\";\nimport GenericToast from \"../components/views/toasts/GenericToast\";\nimport { Action } from \"../dispatcher/actions\";\nimport { isDeviceVerified } from \"../utils/device/isDeviceVerified\";\nimport { DeviceType } from \"../utils/device/parseUserAgent\";\nimport { DeviceMetaData } from \"../components/views/settings/devices/DeviceMetaData\";\n\nfunction toastKey(deviceId: string): string {\n    return \"unverified_session_\" + deviceId;\n}\n\nexport const showToast = async (deviceId: string): Promise<void> => {\n    const cli = MatrixClientPeg.safeGet();\n\n    const onAccept = (): void => {\n        DeviceListener.sharedInstance().dismissUnverifiedSessions([deviceId]);\n    };\n\n    const onReject = (): void => {\n        DeviceListener.sharedInstance().dismissUnverifiedSessions([deviceId]);\n        dis.dispatch({\n            action: Action.ViewUserDeviceSettings,\n        });\n    };\n\n    const device = await cli.getDevice(deviceId);\n    const extendedDevice = {\n        ...device,\n        isVerified: await isDeviceVerified(cli, deviceId),\n        deviceType: DeviceType.Unknown,\n    };\n\n    ToastStore.sharedInstance().addOrReplaceToast({\n        key: toastKey(deviceId),\n        title: _t(\"encryption|verification|unverified_session_toast_title\"),\n        icon: \"verification_warning\",\n        props: {\n            description: device.display_name,\n            detail: <DeviceMetaData device={extendedDevice} />,\n            primaryLabel: _t(\"encryption|verification|unverified_session_toast_accept\"),\n            onPrimaryClick: onAccept,\n            secondaryLabel: _t(\"action|no\"),\n            onSecondaryClick: onReject,\n            destructive: \"secondary\",\n        },\n        component: GenericToast,\n        priority: 80,\n    });\n};\n\nexport const hideToast = (deviceId: string): void => {\n    ToastStore.sharedInstance().dismissToast(toastKey(deviceId));\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport {\n    MatrixEvent,\n    ClientEvent,\n    EventType,\n    MatrixClient,\n    RoomStateEvent,\n    SyncState,\n    ClientStoppedError,\n} from \"matrix-js-sdk/src/matrix\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\nimport { CryptoEvent, KeyBackupInfo } from \"matrix-js-sdk/src/crypto-api\";\nimport { CryptoSessionStateChange } from \"@matrix-org/analytics-events/types/typescript/CryptoSessionStateChange\";\n\nimport { PosthogAnalytics } from \"./PosthogAnalytics\";\nimport dis from \"./dispatcher/dispatcher\";\nimport {\n    hideToast as hideBulkUnverifiedSessionsToast,\n    showToast as showBulkUnverifiedSessionsToast,\n} from \"./toasts/BulkUnverifiedSessionsToast\";\nimport {\n    hideToast as hideSetupEncryptionToast,\n    Kind as SetupKind,\n    showToast as showSetupEncryptionToast,\n} from \"./toasts/SetupEncryptionToast\";\nimport {\n    hideToast as hideUnverifiedSessionsToast,\n    showToast as showUnverifiedSessionsToast,\n} from \"./toasts/UnverifiedSessionToast\";\nimport { accessSecretStorage, isSecretStorageBeingAccessed } from \"./SecurityManager\";\nimport { isSecureBackupRequired } from \"./utils/WellKnownUtils\";\nimport { ActionPayload } from \"./dispatcher/payloads\";\nimport { Action } from \"./dispatcher/actions\";\nimport { isLoggedIn } from \"./utils/login\";\nimport SdkConfig from \"./SdkConfig\";\nimport PlatformPeg from \"./PlatformPeg\";\nimport { recordClientInformation, removeClientInformation } from \"./utils/device/clientInformation\";\nimport SettingsStore, { CallbackFn } from \"./settings/SettingsStore\";\nimport { UIFeature } from \"./settings/UIFeature\";\nimport { isBulkUnverifiedDeviceReminderSnoozed } from \"./utils/device/snoozeBulkUnverifiedDeviceReminder\";\nimport { getUserDeviceIds } from \"./utils/crypto/deviceInfo\";\nimport { asyncSomeParallel } from \"./utils/arrays.ts\";\n\nconst KEY_BACKUP_POLL_INTERVAL = 5 * 60 * 1000;\n\nexport default class DeviceListener {\n    private dispatcherRef?: string;\n    // device IDs for which the user has dismissed the verify toast ('Later')\n    private dismissed = new Set<string>();\n    // has the user dismissed any of the various nag toasts to setup encryption on this device?\n    private dismissedThisDeviceToast = false;\n    /** Cache of the info about the current key backup on the server. */\n    private keyBackupInfo: KeyBackupInfo | null = null;\n    /** When `keyBackupInfo` was last updated */\n    private keyBackupFetchedAt: number | null = null;\n    // We keep a list of our own device IDs so we can batch ones that were already\n    // there the last time the app launched into a single toast, but display new\n    // ones in their own toasts.\n    private ourDeviceIdsAtStart: Set<string> | null = null;\n    // The set of device IDs we're currently displaying toasts for\n    private displayingToastsForDeviceIds = new Set<string>();\n    private running = false;\n    // The client with which the instance is running. Only set if `running` is true, otherwise undefined.\n    private client?: MatrixClient;\n    private shouldRecordClientInformation = false;\n    private enableBulkUnverifiedSessionsReminder = true;\n    private deviceClientInformationSettingWatcherRef: string | undefined;\n\n    // Remember the current analytics state to avoid sending the same event multiple times.\n    private analyticsVerificationState?: string;\n    private analyticsRecoveryState?: string;\n\n    public static sharedInstance(): DeviceListener {\n        if (!window.mxDeviceListener) window.mxDeviceListener = new DeviceListener();\n        return window.mxDeviceListener;\n    }\n\n    public start(matrixClient: MatrixClient): void {\n        this.running = true;\n        this.client = matrixClient;\n        this.client.on(CryptoEvent.DevicesUpdated, this.onDevicesUpdated);\n        this.client.on(CryptoEvent.UserTrustStatusChanged, this.onUserTrustStatusChanged);\n        this.client.on(CryptoEvent.KeysChanged, this.onCrossSingingKeysChanged);\n        this.client.on(ClientEvent.AccountData, this.onAccountData);\n        this.client.on(ClientEvent.Sync, this.onSync);\n        this.client.on(RoomStateEvent.Events, this.onRoomStateEvents);\n        this.shouldRecordClientInformation = SettingsStore.getValue(\"deviceClientInformationOptIn\");\n        // only configurable in config, so we don't need to watch the value\n        this.enableBulkUnverifiedSessionsReminder = SettingsStore.getValue(UIFeature.BulkUnverifiedSessionsReminder);\n        this.deviceClientInformationSettingWatcherRef = SettingsStore.watchSetting(\n            \"deviceClientInformationOptIn\",\n            null,\n            this.onRecordClientInformationSettingChange,\n        );\n        this.dispatcherRef = dis.register(this.onAction);\n        this.recheck();\n        this.updateClientInformation();\n    }\n\n    public stop(): void {\n        this.running = false;\n        if (this.client) {\n            this.client.removeListener(CryptoEvent.DevicesUpdated, this.onDevicesUpdated);\n            this.client.removeListener(CryptoEvent.UserTrustStatusChanged, this.onUserTrustStatusChanged);\n            this.client.removeListener(CryptoEvent.KeysChanged, this.onCrossSingingKeysChanged);\n            this.client.removeListener(ClientEvent.AccountData, this.onAccountData);\n            this.client.removeListener(ClientEvent.Sync, this.onSync);\n            this.client.removeListener(RoomStateEvent.Events, this.onRoomStateEvents);\n        }\n        SettingsStore.unwatchSetting(this.deviceClientInformationSettingWatcherRef);\n        dis.unregister(this.dispatcherRef);\n        this.dispatcherRef = undefined;\n        this.dismissed.clear();\n        this.dismissedThisDeviceToast = false;\n        this.keyBackupInfo = null;\n        this.keyBackupFetchedAt = null;\n        this.keyBackupStatusChecked = false;\n        this.ourDeviceIdsAtStart = null;\n        this.displayingToastsForDeviceIds = new Set();\n        this.client = undefined;\n    }\n\n    /**\n     * Dismiss notifications about our own unverified devices\n     *\n     * @param {String[]} deviceIds List of device IDs to dismiss notifications for\n     */\n    public async dismissUnverifiedSessions(deviceIds: Iterable<string>): Promise<void> {\n        logger.log(\"Dismissing unverified sessions: \" + Array.from(deviceIds).join(\",\"));\n        for (const d of deviceIds) {\n            this.dismissed.add(d);\n        }\n\n        this.recheck();\n    }\n\n    public dismissEncryptionSetup(): void {\n        this.dismissedThisDeviceToast = true;\n        this.recheck();\n    }\n\n    private async ensureDeviceIdsAtStartPopulated(): Promise<void> {\n        if (this.ourDeviceIdsAtStart === null) {\n            this.ourDeviceIdsAtStart = await this.getDeviceIds();\n        }\n    }\n\n    /** Get the device list for the current user\n     *\n     * @returns the set of device IDs\n     */\n    private async getDeviceIds(): Promise<Set<string>> {\n        const cli = this.client;\n        if (!cli) return new Set();\n        return await getUserDeviceIds(cli, cli.getSafeUserId());\n    }\n\n    private onDevicesUpdated = async (users: string[], initialFetch?: boolean): Promise<void> => {\n        if (!this.client) return;\n        // If we didn't know about *any* devices before (ie. it's fresh login),\n        // then they are all pre-existing devices, so ignore this and set the\n        // devicesAtStart list to the devices that we see after the fetch.\n        if (initialFetch) return;\n\n        const myUserId = this.client.getSafeUserId();\n        if (users.includes(myUserId)) await this.ensureDeviceIdsAtStartPopulated();\n\n        this.recheck();\n    };\n\n    private onUserTrustStatusChanged = (userId: string): void => {\n        if (!this.client) return;\n        if (userId !== this.client.getUserId()) return;\n        this.recheck();\n    };\n\n    private onCrossSingingKeysChanged = (): void => {\n        this.recheck();\n    };\n\n    private onAccountData = (ev: MatrixEvent): void => {\n        // User may have:\n        // * migrated SSSS to symmetric\n        // * uploaded keys to secret storage\n        // * completed secret storage creation\n        // which result in account data changes affecting checks below.\n        if (\n            ev.getType().startsWith(\"m.secret_storage.\") ||\n            ev.getType().startsWith(\"m.cross_signing.\") ||\n            ev.getType() === \"m.megolm_backup.v1\"\n        ) {\n            this.recheck();\n        }\n    };\n\n    private onSync = (state: SyncState, prevState: SyncState | null): void => {\n        if (state === \"PREPARED\" && prevState === null) {\n            this.recheck();\n        }\n    };\n\n    private onRoomStateEvents = (ev: MatrixEvent): void => {\n        if (ev.getType() !== EventType.RoomEncryption) return;\n\n        // If a room changes to encrypted, re-check as it may be our first\n        // encrypted room. This also catches encrypted room creation as well.\n        this.recheck();\n    };\n\n    private onAction = ({ action }: ActionPayload): void => {\n        if (action !== Action.OnLoggedIn) return;\n        this.recheck();\n        this.updateClientInformation();\n    };\n\n    /**\n     * Fetch the key backup information from the server.\n     *\n     * The result is cached for `KEY_BACKUP_POLL_INTERVAL` ms to avoid repeated API calls.\n     *\n     * @returns The key backup info from the server, or `null` if there is no key backup.\n     */\n    private async getKeyBackupInfo(): Promise<KeyBackupInfo | null> {\n        if (!this.client) return null;\n        const now = new Date().getTime();\n        const crypto = this.client.getCrypto();\n        if (!crypto) return null;\n\n        if (\n            !this.keyBackupInfo ||\n            !this.keyBackupFetchedAt ||\n            this.keyBackupFetchedAt < now - KEY_BACKUP_POLL_INTERVAL\n        ) {\n            this.keyBackupInfo = await crypto.getKeyBackupInfo();\n            this.keyBackupFetchedAt = now;\n        }\n        return this.keyBackupInfo;\n    }\n\n    private async shouldShowSetupEncryptionToast(): Promise<boolean> {\n        // If we're in the middle of a secret storage operation, we're likely\n        // modifying the state involved here, so don't add new toasts to setup.\n        if (isSecretStorageBeingAccessed()) return false;\n        // Show setup toasts once the user is in at least one encrypted room.\n        const cli = this.client;\n        const cryptoApi = cli?.getCrypto();\n        if (!cli || !cryptoApi) return false;\n\n        return await asyncSomeParallel(cli.getRooms(), ({ roomId }) => cryptoApi.isEncryptionEnabledInRoom(roomId));\n    }\n\n    private recheck(): void {\n        this.doRecheck().catch((e) => {\n            if (e instanceof ClientStoppedError) {\n                // the client was stopped while recheck() was running. Nothing left to do.\n            } else {\n                logger.error(\"Error during `DeviceListener.recheck`\", e);\n            }\n        });\n    }\n\n    private async doRecheck(): Promise<void> {\n        if (!this.running || !this.client) return; // we have been stopped\n        const cli = this.client;\n\n        // cross-signing support was added to Matrix in MSC1756, which landed in spec v1.1\n        if (!(await cli.isVersionSupported(\"v1.1\"))) return;\n\n        const crypto = cli.getCrypto();\n        if (!crypto) return;\n\n        // don't recheck until the initial sync is complete: lots of account data events will fire\n        // while the initial sync is processing and we don't need to recheck on each one of them\n        // (we add a listener on sync to do once check after the initial sync is done)\n        if (!cli.isInitialSyncComplete()) return;\n\n        const crossSigningReady = await crypto.isCrossSigningReady();\n        const secretStorageReady = await crypto.isSecretStorageReady();\n        const allSystemsReady = crossSigningReady && secretStorageReady;\n        await this.reportCryptoSessionStateToAnalytics(cli);\n\n        if (this.dismissedThisDeviceToast || allSystemsReady) {\n            hideSetupEncryptionToast();\n\n            this.checkKeyBackupStatus();\n        } else if (await this.shouldShowSetupEncryptionToast()) {\n            // make sure our keys are finished downloading\n            await crypto.getUserDeviceInfo([cli.getSafeUserId()]);\n\n            // cross signing isn't enabled - nag to enable it\n            // There are 2 different toasts for:\n            if (!(await crypto.getCrossSigningKeyId()) && (await crypto.userHasCrossSigningKeys())) {\n                // Cross-signing on account but this device doesn't trust the master key (verify this session)\n                showSetupEncryptionToast(SetupKind.VERIFY_THIS_SESSION);\n                this.checkKeyBackupStatus();\n            } else {\n                // No cross-signing or key backup on account (set up encryption)\n                await cli.waitForClientWellKnown();\n                if (isSecureBackupRequired(cli) && isLoggedIn()) {\n                    // If we're meant to set up, and Secure Backup is required,\n                    // trigger the flow directly without a toast once logged in.\n                    hideSetupEncryptionToast();\n                    accessSecretStorage();\n                } else {\n                    showSetupEncryptionToast(SetupKind.SET_UP_ENCRYPTION);\n                }\n            }\n        }\n\n        // This needs to be done after awaiting on getUserDeviceInfo() above, so\n        // we make sure we get the devices after the fetch is done.\n        await this.ensureDeviceIdsAtStartPopulated();\n\n        // Unverified devices that were there last time the app ran\n        // (technically could just be a boolean: we don't actually\n        // need to remember the device IDs, but for the sake of\n        // symmetry...).\n        const oldUnverifiedDeviceIds = new Set<string>();\n        // Unverified devices that have appeared since then\n        const newUnverifiedDeviceIds = new Set<string>();\n\n        const isCurrentDeviceTrusted =\n            crossSigningReady &&\n            Boolean(\n                (await crypto.getDeviceVerificationStatus(cli.getSafeUserId(), cli.deviceId!))?.crossSigningVerified,\n            );\n\n        // as long as cross-signing isn't ready,\n        // you can't see or dismiss any device toasts\n        if (crossSigningReady) {\n            const devices = await this.getDeviceIds();\n            for (const deviceId of devices) {\n                if (deviceId === cli.deviceId) continue;\n\n                const deviceTrust = await crypto.getDeviceVerificationStatus(cli.getSafeUserId(), deviceId);\n                if (!deviceTrust?.crossSigningVerified && !this.dismissed.has(deviceId)) {\n                    if (this.ourDeviceIdsAtStart?.has(deviceId)) {\n                        oldUnverifiedDeviceIds.add(deviceId);\n                    } else {\n                        newUnverifiedDeviceIds.add(deviceId);\n                    }\n                }\n            }\n        }\n\n        logger.debug(\"Old unverified sessions: \" + Array.from(oldUnverifiedDeviceIds).join(\",\"));\n        logger.debug(\"New unverified sessions: \" + Array.from(newUnverifiedDeviceIds).join(\",\"));\n        logger.debug(\"Currently showing toasts for: \" + Array.from(this.displayingToastsForDeviceIds).join(\",\"));\n\n        const isBulkUnverifiedSessionsReminderSnoozed = isBulkUnverifiedDeviceReminderSnoozed();\n\n        // Display or hide the batch toast for old unverified sessions\n        // don't show the toast if the current device is unverified\n        if (\n            oldUnverifiedDeviceIds.size > 0 &&\n            isCurrentDeviceTrusted &&\n            this.enableBulkUnverifiedSessionsReminder &&\n            !isBulkUnverifiedSessionsReminderSnoozed\n        ) {\n            showBulkUnverifiedSessionsToast(oldUnverifiedDeviceIds);\n        } else {\n            hideBulkUnverifiedSessionsToast();\n        }\n\n        // Show toasts for new unverified devices if they aren't already there\n        for (const deviceId of newUnverifiedDeviceIds) {\n            showUnverifiedSessionsToast(deviceId);\n        }\n\n        // ...and hide any we don't need any more\n        for (const deviceId of this.displayingToastsForDeviceIds) {\n            if (!newUnverifiedDeviceIds.has(deviceId)) {\n                logger.debug(\"Hiding unverified session toast for \" + deviceId);\n                hideUnverifiedSessionsToast(deviceId);\n            }\n        }\n\n        this.displayingToastsForDeviceIds = newUnverifiedDeviceIds;\n    }\n\n    /**\n     * Reports current recovery state to analytics.\n     * Checks if the session is verified and if the recovery is correctly set up (i.e all secrets known locally and in 4S).\n     * @param cli - the matrix client\n     * @private\n     */\n    private async reportCryptoSessionStateToAnalytics(cli: MatrixClient): Promise<void> {\n        const crypto = cli.getCrypto()!;\n        const secretStorageReady = await crypto.isSecretStorageReady();\n        const crossSigningStatus = await crypto.getCrossSigningStatus();\n        const backupInfo = await this.getKeyBackupInfo();\n        const is4SEnabled = (await cli.secretStorage.getDefaultKeyId()) != null;\n        const deviceVerificationStatus = await crypto.getDeviceVerificationStatus(cli.getUserId()!, cli.getDeviceId()!);\n\n        const verificationState =\n            deviceVerificationStatus?.signedByOwner && deviceVerificationStatus?.crossSigningVerified\n                ? \"Verified\"\n                : \"NotVerified\";\n\n        let recoveryState: \"Disabled\" | \"Enabled\" | \"Incomplete\";\n        if (!is4SEnabled) {\n            recoveryState = \"Disabled\";\n        } else {\n            const allCrossSigningSecretsCached =\n                crossSigningStatus.privateKeysCachedLocally.masterKey &&\n                crossSigningStatus.privateKeysCachedLocally.selfSigningKey &&\n                crossSigningStatus.privateKeysCachedLocally.userSigningKey;\n            if (backupInfo != null) {\n                // There is a backup. Check that all secrets are stored in 4S and known locally.\n                // If they are not, recovery is incomplete.\n                const backupPrivateKeyIsInCache = (await crypto.getSessionBackupPrivateKey()) != null;\n                if (secretStorageReady && allCrossSigningSecretsCached && backupPrivateKeyIsInCache) {\n                    recoveryState = \"Enabled\";\n                } else {\n                    recoveryState = \"Incomplete\";\n                }\n            } else {\n                // No backup. Just consider cross-signing secrets.\n                if (secretStorageReady && allCrossSigningSecretsCached) {\n                    recoveryState = \"Enabled\";\n                } else {\n                    recoveryState = \"Incomplete\";\n                }\n            }\n        }\n\n        if (this.analyticsVerificationState === verificationState && this.analyticsRecoveryState === recoveryState) {\n            // No changes, no need to send the event nor update the user properties\n            return;\n        }\n        this.analyticsRecoveryState = recoveryState;\n        this.analyticsVerificationState = verificationState;\n\n        // Update user properties\n        PosthogAnalytics.instance.setProperty(\"recoveryState\", recoveryState);\n        PosthogAnalytics.instance.setProperty(\"verificationState\", verificationState);\n\n        PosthogAnalytics.instance.trackEvent<CryptoSessionStateChange>({\n            eventName: \"CryptoSessionState\",\n            verificationState: verificationState,\n            recoveryState: recoveryState,\n        });\n    }\n\n    /**\n     * Check if key backup is enabled, and if not, raise an `Action.ReportKeyBackupNotEnabled` event (which will\n     * trigger an auto-rageshake).\n     */\n    private checkKeyBackupStatus = async (): Promise<void> => {\n        if (this.keyBackupStatusChecked || !this.client) {\n            return;\n        }\n        const activeKeyBackupVersion = await this.client.getCrypto()?.getActiveSessionBackupVersion();\n        // if key backup is enabled, no need to check this ever again (XXX: why only when it is enabled?)\n        this.keyBackupStatusChecked = !!activeKeyBackupVersion;\n\n        if (!activeKeyBackupVersion) {\n            dis.dispatch({ action: Action.ReportKeyBackupNotEnabled });\n        }\n    };\n    private keyBackupStatusChecked = false;\n\n    private onRecordClientInformationSettingChange: CallbackFn = (\n        _originalSettingName,\n        _roomId,\n        _level,\n        _newLevel,\n        newValue,\n    ) => {\n        const prevValue = this.shouldRecordClientInformation;\n\n        this.shouldRecordClientInformation = !!newValue;\n\n        if (this.shouldRecordClientInformation !== prevValue) {\n            this.updateClientInformation();\n        }\n    };\n\n    private updateClientInformation = async (): Promise<void> => {\n        if (!this.client) return;\n        try {\n            if (this.shouldRecordClientInformation) {\n                await recordClientInformation(this.client, SdkConfig.get(), PlatformPeg.get() ?? undefined);\n            } else {\n                await removeClientInformation(this.client);\n            }\n        } catch (error) {\n            // this is a best effort operation\n            // log the error without rethrowing\n            logger.error(\"Failed to update client information\", error);\n        }\n    };\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport Views from \"../Views\";\n\nexport function isLoggedIn(): boolean {\n    // JRS: Maybe we should move the step that writes this to the window out of\n    // `element-web` and into this file? Better yet, we should probably create a\n    // store to hold this state.\n    // See also https://github.com/vector-im/element-web/issues/15034.\n    return window.matrixChat?.state.view === Views.LOGGED_IN;\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction onLoggedOutAndStorageCleared(): void {\n    // E.g. redirect user or call other APIs after logout\n}\n\n// This interface summarises all available customisation points and also marks\n// them all as optional. This allows customisers to only define and export the\n// customisations they need while still maintaining type safety.\nexport interface ILifecycleCustomisations {\n    onLoggedOutAndStorageCleared?: typeof onLoggedOutAndStorageCleared;\n}\n\n// A real customisation module will define and export one or more of the\n// customisation points that make up `ILifecycleCustomisations`.\nexport default {} as ILifecycleCustomisations;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020 The Matrix.org Foundation C.I.C.\nCopyright 2018 New Vector Ltd\nCopyright 2017 Vector Creations Ltd\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\n\nimport SdkConfig from \"../../../SdkConfig\";\nimport Modal from \"../../../Modal\";\nimport { _t } from \"../../../languageHandler\";\nimport QuestionDialog from \"./QuestionDialog\";\nimport BugReportDialog from \"./BugReportDialog\";\nimport BaseDialog from \"./BaseDialog\";\nimport DialogButtons from \"../elements/DialogButtons\";\n\ninterface IProps {\n    error: unknown;\n    onFinished(clear?: boolean): void;\n}\n\nexport default class SessionRestoreErrorDialog extends React.Component<IProps> {\n    private sendBugReport = (): void => {\n        Modal.createDialog(BugReportDialog, {\n            error: this.props.error,\n        });\n    };\n\n    private onClearStorageClick = (): void => {\n        Modal.createDialog(QuestionDialog, {\n            title: _t(\"action|sign_out\"),\n            description: <div>{_t(\"error|session_restore|clear_storage_description\")}</div>,\n            button: _t(\"action|sign_out\"),\n            danger: true,\n            onFinished: this.props.onFinished,\n        });\n    };\n\n    private onRefreshClick = (): void => {\n        // Is this likely to help? Probably not, but giving only one button\n        // that clears your storage seems awful.\n        window.location.reload();\n    };\n\n    public render(): React.ReactNode {\n        const brand = SdkConfig.get().brand;\n\n        const clearStorageButton = (\n            <button onClick={this.onClearStorageClick} className=\"danger\">\n                {_t(\"error|session_restore|clear_storage_button\")}\n            </button>\n        );\n\n        let dialogButtons;\n        if (SdkConfig.get().bug_report_endpoint_url) {\n            dialogButtons = (\n                <DialogButtons\n                    primaryButton={_t(\"bug_reporting|send_logs\")}\n                    onPrimaryButtonClick={this.sendBugReport}\n                    focus={true}\n                    hasCancel={false}\n                >\n                    {clearStorageButton}\n                </DialogButtons>\n            );\n        } else {\n            dialogButtons = (\n                <DialogButtons\n                    primaryButton={_t(\"action|refresh\")}\n                    onPrimaryButtonClick={this.onRefreshClick}\n                    focus={true}\n                    hasCancel={false}\n                >\n                    {clearStorageButton}\n                </DialogButtons>\n            );\n        }\n\n        return (\n            <BaseDialog\n                className=\"mx_ErrorDialog\"\n                onFinished={this.props.onFinished}\n                title={_t(\"error|session_restore|title\")}\n                contentId=\"mx_Dialog_content\"\n                hasCancel={false}\n            >\n                <div className=\"mx_Dialog_content\" id=\"mx_Dialog_content\">\n                    <p>{_t(\"error|session_restore|description_1\")}</p>\n\n                    <p>{_t(\"error|session_restore|description_2\", { brand })}</p>\n\n                    <p>{_t(\"error|session_restore|description_3\")}</p>\n                </div>\n                {dialogButtons}\n            </BaseDialog>\n        );\n    }\n}\n","/*\nCopyright 2019-2024 New Vector Ltd.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\n\nimport SdkConfig from \"../../../SdkConfig\";\nimport Modal from \"../../../Modal\";\nimport { _t } from \"../../../languageHandler\";\nimport BaseDialog from \"./BaseDialog\";\nimport DialogButtons from \"../elements/DialogButtons\";\nimport BugReportDialog from \"./BugReportDialog\";\nimport AccessibleButton, { ButtonEvent } from \"../elements/AccessibleButton\";\n\ninterface IProps {\n    onFinished(signOut?: boolean): void;\n}\n\nexport default class StorageEvictedDialog extends React.Component<IProps> {\n    private sendBugReport = (ev: ButtonEvent): void => {\n        ev.preventDefault();\n        Modal.createDialog(BugReportDialog, {});\n    };\n\n    private onSignOutClick = (): void => {\n        this.props.onFinished(true);\n    };\n\n    public render(): React.ReactNode {\n        let logRequest;\n        if (SdkConfig.get().bug_report_endpoint_url) {\n            logRequest = _t(\n                \"bug_reporting|log_request\",\n                {},\n                {\n                    a: (text) => (\n                        <AccessibleButton kind=\"link_inline\" onClick={this.sendBugReport}>\n                            {text}\n                        </AccessibleButton>\n                    ),\n                },\n            );\n        }\n\n        return (\n            <BaseDialog\n                className=\"mx_ErrorDialog\"\n                onFinished={this.props.onFinished}\n                title={_t(\"error|storage_evicted_title\")}\n                contentId=\"mx_Dialog_content\"\n                hasCancel={false}\n            >\n                <div className=\"mx_Dialog_content\" id=\"mx_Dialog_content\">\n                    <p>{_t(\"error|storage_evicted_description_1\")}</p>\n                    <p>\n                        {_t(\"error|storage_evicted_description_2\")} {logRequest}\n                    </p>\n                </div>\n                <DialogButtons\n                    primaryButton={_t(\"action|sign_out\")}\n                    onPrimaryButtonClick={this.onSignOutClick}\n                    focus={true}\n                    hasCancel={false}\n                />\n            </BaseDialog>\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2021 Robin Townsend <robin@robin.town>\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport classnames from \"classnames\";\nimport {\n    IContent,\n    MatrixEvent,\n    Room,\n    RoomMember,\n    EventType,\n    MatrixClient,\n    ContentHelpers,\n    ILocationContent,\n    LocationAssetType,\n    M_TIMESTAMP,\n    M_BEACON,\n    TimelineEvents,\n} from \"matrix-js-sdk/src/matrix\";\nimport { KnownMembership } from \"matrix-js-sdk/src/types\";\n// eslint-disable-next-line no-restricted-imports\nimport OverflowHorizontalSvg from \"@vector-im/compound-design-tokens/icons/overflow-horizontal.svg\";\n\nimport { _t } from \"../../../languageHandler\";\nimport dis from \"../../../dispatcher/dispatcher\";\nimport { useSettingValue } from \"../../../hooks/useSettings\";\nimport { Layout } from \"../../../settings/enums/Layout\";\nimport BaseDialog from \"./BaseDialog\";\nimport { avatarUrlForUser } from \"../../../Avatar\";\nimport EventTile from \"../rooms/EventTile\";\nimport SearchBox from \"../../structures/SearchBox\";\nimport DecoratedRoomAvatar from \"../avatars/DecoratedRoomAvatar\";\nimport AutoHideScrollbar from \"../../structures/AutoHideScrollbar\";\nimport { StaticNotificationState } from \"../../../stores/notifications/StaticNotificationState\";\nimport NotificationBadge from \"../rooms/NotificationBadge\";\nimport { RoomPermalinkCreator } from \"../../../utils/permalinks/Permalinks\";\nimport { sortRooms } from \"../../../stores/room-list/algorithms/tag-sorting/RecentAlgorithm\";\nimport QueryMatcher from \"../../../autocomplete/QueryMatcher\";\nimport TruncatedList from \"../elements/TruncatedList\";\nimport EntityTile from \"../rooms/EntityTile\";\nimport BaseAvatar from \"../avatars/BaseAvatar\";\nimport { Action } from \"../../../dispatcher/actions\";\nimport { ViewRoomPayload } from \"../../../dispatcher/payloads/ViewRoomPayload\";\nimport AccessibleButton, { ButtonEvent } from \"../elements/AccessibleButton\";\nimport { isLocationEvent } from \"../../../utils/EventUtils\";\nimport { isSelfLocation, locationEventGeoUri } from \"../../../utils/location\";\nimport { RoomContextDetails } from \"../rooms/RoomContextDetails\";\nimport { filterBoolean } from \"../../../utils/arrays\";\nimport {\n    IState,\n    RovingTabIndexContext,\n    RovingTabIndexProvider,\n    Type,\n    useRovingTabIndex,\n} from \"../../../accessibility/RovingTabIndex\";\nimport { getKeyBindingsManager } from \"../../../KeyBindingsManager\";\nimport { KeyBindingAction } from \"../../../accessibility/KeyboardShortcuts\";\n\nconst AVATAR_SIZE = 30;\n\ninterface IProps {\n    matrixClient: MatrixClient;\n    // The event to forward\n    event: MatrixEvent;\n    // We need a permalink creator for the source room to pass through to EventTile\n    // in case the event is a reply (even though the user can't get at the link)\n    permalinkCreator: RoomPermalinkCreator;\n    onFinished(): void;\n}\n\ninterface IEntryProps<K extends keyof TimelineEvents> {\n    room: Room;\n    type: K;\n    content: TimelineEvents[K];\n    matrixClient: MatrixClient;\n    onFinished(success: boolean): void;\n}\n\nenum SendState {\n    CanSend,\n    Sending,\n    Sent,\n    Failed,\n}\n\nconst Entry: React.FC<IEntryProps<any>> = ({ room, type, content, matrixClient: cli, onFinished }) => {\n    const [sendState, setSendState] = useState<SendState>(SendState.CanSend);\n    const [onFocus, isActive, ref] = useRovingTabIndex<HTMLDivElement>();\n\n    const jumpToRoom = (ev: ButtonEvent): void => {\n        dis.dispatch<ViewRoomPayload>({\n            action: Action.ViewRoom,\n            room_id: room.roomId,\n            metricsTrigger: \"WebForwardShortcut\",\n            metricsViaKeyboard: ev.type !== \"click\",\n        });\n        onFinished(true);\n    };\n    const send = async (): Promise<void> => {\n        setSendState(SendState.Sending);\n        try {\n            await cli.sendEvent(room.roomId, type, content);\n            setSendState(SendState.Sent);\n        } catch {\n            setSendState(SendState.Failed);\n        }\n    };\n\n    let className;\n    let disabled = false;\n    let title;\n    let icon;\n    if (sendState === SendState.CanSend) {\n        className = \"mx_ForwardList_canSend\";\n        if (!room.maySendMessage()) {\n            disabled = true;\n            title = _t(\"forward|no_perms_title\");\n        }\n    } else if (sendState === SendState.Sending) {\n        className = \"mx_ForwardList_sending\";\n        disabled = true;\n        title = _t(\"forward|sending\");\n        icon = <div className=\"mx_ForwardList_sendIcon\" aria-label={title} />;\n    } else if (sendState === SendState.Sent) {\n        className = \"mx_ForwardList_sent\";\n        disabled = true;\n        title = _t(\"forward|sent\");\n        icon = <div className=\"mx_ForwardList_sendIcon\" aria-label={title} />;\n    } else {\n        className = \"mx_ForwardList_sendFailed\";\n        disabled = true;\n        title = _t(\"timeline|send_state_failed\");\n        icon = <NotificationBadge notification={StaticNotificationState.RED_EXCLAMATION} />;\n    }\n\n    const id = `mx_ForwardDialog_entry_${room.roomId}`;\n    return (\n        <div\n            className={classnames(\"mx_ForwardList_entry\", {\n                mx_ForwardList_entry_active: isActive,\n            })}\n            aria-labelledby={`${id}_name`}\n            aria-describedby={`${id}_send`}\n            role=\"listitem\"\n            ref={ref}\n            onFocus={onFocus}\n            id={id}\n        >\n            <AccessibleButton\n                className=\"mx_ForwardList_roomButton\"\n                onClick={jumpToRoom}\n                title={_t(\"forward|open_room\")}\n                placement=\"top\"\n                tabIndex={isActive ? 0 : -1}\n            >\n                <DecoratedRoomAvatar room={room} size=\"32px\" tooltipProps={{ tabIndex: isActive ? 0 : -1 }} />\n                <span className=\"mx_ForwardList_entry_name\" id={`${id}_name`}>\n                    {room.name}\n                </span>\n                <RoomContextDetails component=\"span\" className=\"mx_ForwardList_entry_detail\" room={room} />\n            </AccessibleButton>\n            <AccessibleButton\n                kind={sendState === SendState.Failed ? \"danger_outline\" : \"primary_outline\"}\n                className={`mx_ForwardList_sendButton ${className}`}\n                onClick={send}\n                disabled={disabled}\n                title={title}\n                placement=\"top\"\n                tabIndex={isActive ? 0 : -1}\n                id={`${id}_send`}\n            >\n                <div className=\"mx_ForwardList_sendLabel\">{_t(\"forward|send_label\")}</div>\n                {icon}\n            </AccessibleButton>\n        </div>\n    );\n};\n\nconst transformEvent = (event: MatrixEvent): { type: string; content: IContent } => {\n    const {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        \"m.relates_to\": _, // strip relations - in future we will attach a relation pointing at the original event\n        // We're taking a shallow copy here to avoid https://github.com/vector-im/element-web/issues/10924\n        ...content\n    } = event.getContent();\n\n    // beacon pulses get transformed into static locations on forward\n    const type = M_BEACON.matches(event.getType()) ? EventType.RoomMessage : event.getType();\n\n    // self location shares should have their description removed\n    // and become 'pin' share type\n    if (\n        (isLocationEvent(event) && isSelfLocation(content as ILocationContent)) ||\n        // beacon pulses get transformed into static locations on forward\n        M_BEACON.matches(event.getType())\n    ) {\n        const timestamp = M_TIMESTAMP.findIn<number>(content);\n        const geoUri = locationEventGeoUri(event);\n        return {\n            type,\n            content: {\n                ...content,\n                ...ContentHelpers.makeLocationContent(\n                    undefined, // text\n                    geoUri,\n                    timestamp || Date.now(),\n                    undefined, // description\n                    LocationAssetType.Pin,\n                ),\n            },\n        };\n    }\n\n    return { type, content };\n};\n\nconst ForwardDialog: React.FC<IProps> = ({ matrixClient: cli, event, permalinkCreator, onFinished }) => {\n    const userId = cli.getSafeUserId();\n    const [profileInfo, setProfileInfo] = useState<any>({});\n    useEffect(() => {\n        cli.getProfileInfo(userId).then((info) => setProfileInfo(info));\n    }, [cli, userId]);\n\n    const { type, content } = transformEvent(event);\n\n    // For the message preview we fake the sender as ourselves\n    const mockEvent = new MatrixEvent({\n        type: \"m.room.message\",\n        sender: userId,\n        content,\n        unsigned: {\n            age: 97,\n        },\n        event_id: \"$9999999999999999999999999999999999999999999\",\n        room_id: event.getRoomId(),\n        origin_server_ts: event.getTs(),\n    });\n    mockEvent.sender = {\n        name: profileInfo.displayname || userId,\n        rawDisplayName: profileInfo.displayname,\n        userId,\n        getAvatarUrl: (..._) => {\n            return avatarUrlForUser({ avatarUrl: profileInfo.avatar_url }, AVATAR_SIZE, AVATAR_SIZE, \"crop\");\n        },\n        getMxcAvatarUrl: () => profileInfo.avatar_url,\n    } as RoomMember;\n\n    const [query, setQuery] = useState(\"\");\n    const lcQuery = query.toLowerCase();\n\n    const previewLayout = useSettingValue<Layout>(\"layout\");\n    const msc3946DynamicRoomPredecessors = useSettingValue<boolean>(\"feature_dynamic_room_predecessors\");\n\n    let rooms = useMemo(\n        () =>\n            sortRooms(\n                cli\n                    .getVisibleRooms(msc3946DynamicRoomPredecessors)\n                    .filter((room) => room.getMyMembership() === KnownMembership.Join && !room.isSpaceRoom()),\n            ),\n        [cli, msc3946DynamicRoomPredecessors],\n    );\n\n    if (lcQuery) {\n        rooms = new QueryMatcher<Room>(rooms, {\n            keys: [\"name\"],\n            funcs: [(r) => filterBoolean([r.getCanonicalAlias(), ...r.getAltAliases()])],\n            shouldMatchWordsOnly: false,\n        }).match(lcQuery);\n    }\n\n    const [truncateAt, setTruncateAt] = useState(20);\n    function overflowTile(overflowCount: number, totalCount: number): JSX.Element {\n        const text = _t(\"common|and_n_others\", { count: overflowCount });\n        return (\n            <EntityTile\n                className=\"mx_EntityTile_ellipsis\"\n                avatarJsx={<BaseAvatar url={OverflowHorizontalSvg} name=\"...\" size=\"36px\" />}\n                name={text}\n                showPresence={false}\n                onClick={() => setTruncateAt(totalCount)}\n            />\n        );\n    }\n\n    const onKeyDown = (ev: React.KeyboardEvent, state: IState): void => {\n        let handled = true;\n\n        const action = getKeyBindingsManager().getAccessibilityAction(ev);\n        switch (action) {\n            case KeyBindingAction.Enter: {\n                state.activeNode?.querySelector<HTMLButtonElement>(\".mx_ForwardList_sendButton\")?.click();\n                break;\n            }\n\n            default:\n                handled = false;\n        }\n\n        if (handled) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        }\n    };\n\n    return (\n        <BaseDialog\n            title={_t(\"common|forward_message\")}\n            className=\"mx_ForwardDialog\"\n            contentId=\"mx_ForwardList\"\n            onFinished={onFinished}\n            fixedWidth={false}\n        >\n            <h3>{_t(\"forward|message_preview_heading\")}</h3>\n            <div\n                className={classnames(\"mx_ForwardDialog_preview\", {\n                    mx_IRCLayout: previewLayout == Layout.IRC,\n                })}\n            >\n                <EventTile\n                    mxEvent={mockEvent}\n                    layout={previewLayout}\n                    permalinkCreator={permalinkCreator}\n                    as=\"div\"\n                    inhibitInteraction\n                />\n            </div>\n            <hr />\n            <RovingTabIndexProvider\n                handleUpDown\n                handleInputFields\n                onKeyDown={onKeyDown}\n                scrollIntoView={{ block: \"center\" }}\n            >\n                {({ onKeyDownHandler }) => (\n                    <div className=\"mx_ForwardList\" id=\"mx_ForwardList\">\n                        <RovingTabIndexContext.Consumer>\n                            {(context) => (\n                                <SearchBox\n                                    className=\"mx_textinput_icon mx_textinput_search\"\n                                    placeholder={_t(\"forward|filter_placeholder\")}\n                                    onSearch={(query: string): void => {\n                                        setQuery(query);\n                                        setTimeout(() => {\n                                            const node = context.state.nodes[0];\n                                            if (node) {\n                                                context.dispatch({\n                                                    type: Type.SetFocus,\n                                                    payload: { node },\n                                                });\n                                                node?.scrollIntoView?.({\n                                                    block: \"nearest\",\n                                                });\n                                            }\n                                        });\n                                    }}\n                                    autoFocus={true}\n                                    onKeyDown={onKeyDownHandler}\n                                    aria-activedescendant={context.state.activeNode?.id}\n                                    aria-owns=\"mx_ForwardDialog_resultsList\"\n                                />\n                            )}\n                        </RovingTabIndexContext.Consumer>\n                        <AutoHideScrollbar className=\"mx_ForwardList_content\">\n                            {rooms.length > 0 ? (\n                                <div className=\"mx_ForwardList_results\">\n                                    <TruncatedList\n                                        id=\"mx_ForwardDialog_resultsList\"\n                                        className=\"mx_ForwardList_resultsList\"\n                                        truncateAt={truncateAt}\n                                        createOverflowElement={overflowTile}\n                                        getChildren={(start, end) =>\n                                            rooms\n                                                .slice(start, end)\n                                                .map((room) => (\n                                                    <Entry\n                                                        key={room.roomId}\n                                                        room={room}\n                                                        type={type}\n                                                        content={content}\n                                                        matrixClient={cli}\n                                                        onFinished={onFinished}\n                                                    />\n                                                ))\n                                        }\n                                        getChildCount={() => rooms.length}\n                                    />\n                                </div>\n                            ) : (\n                                <span className=\"mx_ForwardList_noResults\">{_t(\"common|no_results\")}</span>\n                            )}\n                        </AutoHideScrollbar>\n                    </div>\n                )}\n            </RovingTabIndexProvider>\n        </BaseDialog>\n    );\n};\n\nexport default ForwardDialog;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\nCopyright 2019 Michael Telatynski <7t3chguy@gmail.com>\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { ChangeEvent } from \"react\";\nimport { MatrixEvent } from \"matrix-js-sdk/src/matrix\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport { _t, UserFriendlyError } from \"../../../languageHandler\";\nimport { ensureDMExists } from \"../../../createRoom\";\nimport { MatrixClientPeg } from \"../../../MatrixClientPeg\";\nimport SdkConfig from \"../../../SdkConfig\";\nimport Markdown from \"../../../Markdown\";\nimport SettingsStore from \"../../../settings/SettingsStore\";\nimport StyledRadioButton from \"../elements/StyledRadioButton\";\nimport BaseDialog from \"./BaseDialog\";\nimport DialogButtons from \"../elements/DialogButtons\";\nimport Field from \"../elements/Field\";\nimport Spinner from \"../elements/Spinner\";\nimport LabelledCheckbox from \"../elements/LabelledCheckbox\";\n\ndeclare module \"matrix-js-sdk/src/types\" {\n    interface TimelineEvents {\n        [ABUSE_EVENT_TYPE]: AbuseEventContent;\n    }\n}\n\ninterface IProps {\n    mxEvent: MatrixEvent;\n    onFinished(report?: boolean): void;\n}\n\ninterface IState {\n    // A free-form text describing the abuse.\n    reason: string;\n    busy: boolean;\n    err?: string;\n    // If we know it, the nature of the abuse, as specified by MSC3215.\n    nature?: ExtendedNature;\n    ignoreUserToo: boolean; // if true, user will be ignored/blocked on submit\n    /*\n     * Whether the room is encrypted.\n     */\n    isRoomEncrypted: boolean;\n}\n\nconst MODERATED_BY_STATE_EVENT_TYPE = [\n    \"org.matrix.msc3215.room.moderation.moderated_by\",\n    /**\n     * Unprefixed state event. Not ready for prime time.\n     *\n     * \"m.room.moderation.moderated_by\"\n     */\n];\n\nexport const ABUSE_EVENT_TYPE = \"org.matrix.msc3215.abuse.report\";\n\ninterface AbuseEventContent {\n    event_id: string;\n    room_id: string;\n    moderated_by_id: string;\n    nature?: ExtendedNature;\n    reporter: string;\n    comment: string;\n}\n\n// Standard abuse natures.\nenum Nature {\n    Disagreement = \"org.matrix.msc3215.abuse.nature.disagreement\",\n    Toxic = \"org.matrix.msc3215.abuse.nature.toxic\",\n    Illegal = \"org.matrix.msc3215.abuse.nature.illegal\",\n    Spam = \"org.matrix.msc3215.abuse.nature.spam\",\n    Other = \"org.matrix.msc3215.abuse.nature.other\",\n}\n\nenum NonStandardValue {\n    // Non-standard abuse nature.\n    // It should never leave the client - we use it to fallback to\n    // server-wide abuse reporting.\n    Admin = \"non-standard.abuse.nature.admin\",\n}\n\ntype ExtendedNature = Nature | NonStandardValue;\n\ntype Moderation = {\n    // The id of the moderation room.\n    moderationRoomId: string;\n    // The id of the bot in charge of forwarding abuse reports to the moderation room.\n    moderationBotUserId: string;\n};\n/*\n * A dialog for reporting an event.\n *\n * The actual content of the dialog will depend on two things:\n *\n * 1. Is `feature_report_to_moderators` enabled?\n * 2. Does the room support moderation as per MSC3215, i.e. is there\n *    a well-formed state event `m.room.moderation.moderated_by`\n *    /`org.matrix.msc3215.room.moderation.moderated_by`?\n */\nexport default class ReportEventDialog extends React.Component<IProps, IState> {\n    // If the room supports moderation, the moderation information.\n    private moderation?: Moderation;\n\n    public constructor(props: IProps) {\n        super(props);\n\n        let moderatedByRoomId: string | null = null;\n        let moderatedByUserId: string | null = null;\n\n        if (SettingsStore.getValue(\"feature_report_to_moderators\")) {\n            // The client supports reporting to moderators.\n            // Does the room support it, too?\n\n            // Extract state events to determine whether we should display\n            const client = MatrixClientPeg.safeGet();\n            const room = client.getRoom(props.mxEvent.getRoomId());\n\n            for (const stateEventType of MODERATED_BY_STATE_EVENT_TYPE) {\n                const stateEvent = room?.currentState.getStateEvents(stateEventType, stateEventType);\n                if (!stateEvent) {\n                    continue;\n                }\n                if (Array.isArray(stateEvent)) {\n                    // Internal error.\n                    throw new TypeError(\n                        `getStateEvents(${stateEventType}, ${stateEventType}) ` +\n                            \"should return at most one state event\",\n                    );\n                }\n                const event = stateEvent.event;\n                if (!(\"content\" in event) || typeof event[\"content\"] != \"object\") {\n                    // The room is improperly configured.\n                    // Display this debug message for the sake of moderators.\n                    console.debug(\n                        \"Moderation error\",\n                        \"state event\",\n                        stateEventType,\n                        \"should have an object field `content`, got\",\n                        event,\n                    );\n                    continue;\n                }\n                const content = event[\"content\"];\n                if (!(\"room_id\" in content) || typeof content[\"room_id\"] != \"string\") {\n                    // The room is improperly configured.\n                    // Display this debug message for the sake of moderators.\n                    console.debug(\n                        \"Moderation error\",\n                        \"state event\",\n                        stateEventType,\n                        \"should have a string field `content.room_id`, got\",\n                        event,\n                    );\n                    continue;\n                }\n                if (!(\"user_id\" in content) || typeof content[\"user_id\"] != \"string\") {\n                    // The room is improperly configured.\n                    // Display this debug message for the sake of moderators.\n                    console.debug(\n                        \"Moderation error\",\n                        \"state event\",\n                        stateEventType,\n                        \"should have a string field `content.user_id`, got\",\n                        event,\n                    );\n                    continue;\n                }\n                moderatedByRoomId = content[\"room_id\"];\n                moderatedByUserId = content[\"user_id\"];\n            }\n\n            if (moderatedByRoomId && moderatedByUserId) {\n                // The room supports moderation.\n                this.moderation = {\n                    moderationRoomId: moderatedByRoomId,\n                    moderationBotUserId: moderatedByUserId,\n                };\n            }\n        }\n\n        this.state = {\n            // A free-form text describing the abuse.\n            reason: \"\",\n            busy: false,\n            err: undefined,\n            // If specified, the nature of the abuse, as specified by MSC3215.\n            nature: undefined,\n            ignoreUserToo: false, // default false, for now. Could easily be argued as default true\n            isRoomEncrypted: false, // async, will be set later\n        };\n    }\n\n    public componentDidMount = async (): Promise<void> => {\n        const crypto = MatrixClientPeg.safeGet().getCrypto();\n        const roomId = this.props.mxEvent.getRoomId();\n        if (!crypto || !roomId) return;\n\n        this.setState({\n            isRoomEncrypted: await crypto.isEncryptionEnabledInRoom(roomId),\n        });\n    };\n\n    private onIgnoreUserTooChanged = (newVal: boolean): void => {\n        this.setState({ ignoreUserToo: newVal });\n    };\n\n    // The user has written down a freeform description of the abuse.\n    private onReasonChange = ({ target: { value: reason } }: ChangeEvent<HTMLTextAreaElement>): void => {\n        this.setState({ reason });\n    };\n\n    // The user has clicked on a nature.\n    private onNatureChosen = (e: React.FormEvent<HTMLInputElement>): void => {\n        this.setState({ nature: e.currentTarget.value as ExtendedNature });\n    };\n\n    // The user has clicked \"cancel\".\n    private onCancel = (): void => {\n        this.props.onFinished(false);\n    };\n\n    // The user has clicked \"submit\".\n    private onSubmit = async (): Promise<void> => {\n        let reason = this.state.reason || \"\";\n        reason = reason.trim();\n        if (this.moderation) {\n            // This room supports moderation.\n            // We need a nature.\n            // If the nature is `NATURE.OTHER` or `NON_STANDARD_NATURE.ADMIN`, we also need a `reason`.\n            if (\n                !this.state.nature ||\n                ((this.state.nature == Nature.Other || this.state.nature == NonStandardValue.Admin) && !reason)\n            ) {\n                this.setState({\n                    err: _t(\"report_content|missing_reason\"),\n                });\n                return;\n            }\n        } else {\n            // This room does not support moderation.\n            // We need a `reason`.\n            if (!reason) {\n                this.setState({\n                    err: _t(\"report_content|missing_reason\"),\n                });\n                return;\n            }\n        }\n\n        this.setState({\n            busy: true,\n            err: undefined,\n        });\n\n        try {\n            const client = MatrixClientPeg.safeGet();\n            const ev = this.props.mxEvent;\n            if (this.moderation && this.state.nature !== NonStandardValue.Admin) {\n                const nature = this.state.nature;\n\n                // Report to moderators through to the dedicated bot,\n                // as configured in the room's state events.\n                const dmRoomId = await ensureDMExists(client, this.moderation.moderationBotUserId);\n                if (!dmRoomId) {\n                    throw new UserFriendlyError(\"report_content|error_create_room_moderation_bot\");\n                }\n\n                await client.sendEvent(dmRoomId, ABUSE_EVENT_TYPE, {\n                    event_id: ev.getId()!,\n                    room_id: ev.getRoomId()!,\n                    moderated_by_id: this.moderation.moderationRoomId,\n                    nature,\n                    reporter: client.getUserId()!,\n                    comment: this.state.reason.trim(),\n                } satisfies AbuseEventContent);\n            } else {\n                // Report to homeserver admin through the dedicated Matrix API.\n                await client.reportEvent(ev.getRoomId()!, ev.getId()!, -100, this.state.reason.trim());\n            }\n\n            // if the user should also be ignored, do that\n            if (this.state.ignoreUserToo) {\n                await client.setIgnoredUsers([...client.getIgnoredUsers(), ev.getSender()!]);\n            }\n\n            this.props.onFinished(true);\n        } catch (e) {\n            logger.error(e);\n            this.setState({\n                busy: false,\n                err: e instanceof Error ? e.message : String(e),\n            });\n        }\n    };\n\n    public render(): React.ReactNode {\n        let error: JSX.Element | undefined;\n        if (this.state.err) {\n            error = <div className=\"error\">{this.state.err}</div>;\n        }\n\n        let progress: JSX.Element | undefined;\n        if (this.state.busy) {\n            progress = (\n                <div className=\"progress\">\n                    <Spinner />\n                </div>\n            );\n        }\n\n        const ignoreUserCheckbox = (\n            <LabelledCheckbox\n                value={this.state.ignoreUserToo}\n                label={_t(\"report_content|ignore_user\")}\n                byline={_t(\"report_content|hide_messages_from_user\")}\n                onChange={this.onIgnoreUserTooChanged}\n                disabled={this.state.busy}\n            />\n        );\n\n        const adminMessageMD = SdkConfig.getObject(\"report_event\")?.get(\"admin_message_md\", \"adminMessageMD\");\n        let adminMessage: JSX.Element | undefined;\n        if (adminMessageMD) {\n            const html = new Markdown(adminMessageMD).toHTML({ externalLinks: true });\n            adminMessage = <p dangerouslySetInnerHTML={{ __html: html }} />;\n        }\n\n        if (this.moderation) {\n            // Display report-to-moderator dialog.\n            // We let the user pick a nature.\n            const homeServerName = SdkConfig.get(\"validated_server_config\")!.hsName;\n            let subtitle: string;\n            switch (this.state.nature) {\n                case Nature.Disagreement:\n                    subtitle = _t(\"report_content|nature_disagreement\");\n                    break;\n                case Nature.Toxic:\n                    subtitle = _t(\"report_content|nature_toxic\");\n                    break;\n                case Nature.Illegal:\n                    subtitle = _t(\"report_content|nature_illegal\");\n                    break;\n                case Nature.Spam:\n                    subtitle = _t(\"report_content|nature_spam\");\n                    break;\n                case NonStandardValue.Admin:\n                    if (this.state.isRoomEncrypted) {\n                        subtitle = _t(\"report_content|nature_nonstandard_admin_encrypted\", {\n                            homeserver: homeServerName,\n                        });\n                    } else {\n                        subtitle = _t(\"report_content|nature_nonstandard_admin\", { homeserver: homeServerName });\n                    }\n                    break;\n                case Nature.Other:\n                    subtitle = _t(\"report_content|nature_other\");\n                    break;\n                default:\n                    subtitle = _t(\"report_content|nature\");\n                    break;\n            }\n\n            return (\n                <BaseDialog\n                    className=\"mx_ReportEventDialog\"\n                    onFinished={this.props.onFinished}\n                    title={_t(\"action|report_content\")}\n                    contentId=\"mx_ReportEventDialog\"\n                >\n                    <div>\n                        <StyledRadioButton\n                            name=\"nature\"\n                            value={Nature.Disagreement}\n                            checked={this.state.nature == Nature.Disagreement}\n                            onChange={this.onNatureChosen}\n                        >\n                            {_t(\"report_content|disagree\")}\n                        </StyledRadioButton>\n                        <StyledRadioButton\n                            name=\"nature\"\n                            value={Nature.Toxic}\n                            checked={this.state.nature == Nature.Toxic}\n                            onChange={this.onNatureChosen}\n                        >\n                            {_t(\"report_content|toxic_behaviour\")}\n                        </StyledRadioButton>\n                        <StyledRadioButton\n                            name=\"nature\"\n                            value={Nature.Illegal}\n                            checked={this.state.nature == Nature.Illegal}\n                            onChange={this.onNatureChosen}\n                        >\n                            {_t(\"report_content|illegal_content\")}\n                        </StyledRadioButton>\n                        <StyledRadioButton\n                            name=\"nature\"\n                            value={Nature.Spam}\n                            checked={this.state.nature == Nature.Spam}\n                            onChange={this.onNatureChosen}\n                        >\n                            {_t(\"report_content|spam_or_propaganda\")}\n                        </StyledRadioButton>\n                        <StyledRadioButton\n                            name=\"nature\"\n                            value={NonStandardValue.Admin}\n                            checked={this.state.nature == NonStandardValue.Admin}\n                            onChange={this.onNatureChosen}\n                        >\n                            {_t(\"report_content|report_entire_room\")}\n                        </StyledRadioButton>\n                        <StyledRadioButton\n                            name=\"nature\"\n                            value={Nature.Other}\n                            checked={this.state.nature == Nature.Other}\n                            onChange={this.onNatureChosen}\n                        >\n                            {_t(\"report_content|other_label\")}\n                        </StyledRadioButton>\n                        <p>{subtitle}</p>\n                        <Field\n                            className=\"mx_ReportEventDialog_reason\"\n                            element=\"textarea\"\n                            label={_t(\"room_settings|permissions|ban_reason\")}\n                            rows={5}\n                            onChange={this.onReasonChange}\n                            value={this.state.reason}\n                            disabled={this.state.busy}\n                        />\n                        {progress}\n                        {error}\n                        {ignoreUserCheckbox}\n                    </div>\n                    <DialogButtons\n                        primaryButton={_t(\"action|send_report\")}\n                        onPrimaryButtonClick={this.onSubmit}\n                        focus={true}\n                        onCancel={this.onCancel}\n                        disabled={this.state.busy}\n                    />\n                </BaseDialog>\n            );\n        }\n        // Report to homeserver admin.\n        // Currently, the API does not support natures.\n        return (\n            <BaseDialog\n                className=\"mx_ReportEventDialog\"\n                onFinished={this.props.onFinished}\n                title={_t(\"report_content|report_content_to_homeserver\")}\n                contentId=\"mx_ReportEventDialog\"\n            >\n                <div className=\"mx_ReportEventDialog\" id=\"mx_ReportEventDialog\">\n                    <p>{_t(\"report_content|description\")}</p>\n                    {adminMessage}\n                    <Field\n                        className=\"mx_ReportEventDialog_reason\"\n                        element=\"textarea\"\n                        label={_t(\"room_settings|permissions|ban_reason\")}\n                        rows={5}\n                        onChange={this.onReasonChange}\n                        value={this.state.reason}\n                        disabled={this.state.busy}\n                    />\n                    {progress}\n                    {error}\n                    {ignoreUserCheckbox}\n                </div>\n                <DialogButtons\n                    primaryButton={_t(\"action|send_report\")}\n                    onPrimaryButtonClick={this.onSubmit}\n                    focus={true}\n                    onCancel={this.onCancel}\n                    disabled={this.state.busy}\n                />\n            </BaseDialog>\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { Room } from \"matrix-js-sdk/src/matrix\";\n\nimport { ActionPayload } from \"../payloads\";\nimport { Action } from \"../actions\";\n\nexport enum SpacePreferenceTab {\n    Appearance = \"SPACE_PREFERENCE_APPEARANCE_TAB\",\n}\n\nexport interface OpenSpacePreferencesPayload extends ActionPayload {\n    action: Action.OpenSpacePreferences;\n\n    /**\n     * The space to open preferences for.\n     */\n    space: Room;\n\n    /**\n     * Optional tab to open specifically, otherwise the dialog's internal default.\n     */\n    initialTabId?: SpacePreferenceTab;\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { ChangeEvent } from \"react\";\nimport { Room } from \"matrix-js-sdk/src/matrix\";\n\nimport { _t, _td } from \"../../../languageHandler\";\nimport BaseDialog from \"../dialogs/BaseDialog\";\nimport TabbedView, { Tab } from \"../../structures/TabbedView\";\nimport StyledCheckbox from \"../elements/StyledCheckbox\";\nimport { useSettingValue } from \"../../../hooks/useSettings\";\nimport SettingsStore from \"../../../settings/SettingsStore\";\nimport { SettingLevel } from \"../../../settings/SettingLevel\";\nimport RoomName from \"../elements/RoomName\";\nimport { SpacePreferenceTab } from \"../../../dispatcher/payloads/OpenSpacePreferencesPayload\";\nimport { NonEmptyArray } from \"../../../@types/common\";\nimport SettingsTab from \"../settings/tabs/SettingsTab\";\nimport { SettingsSection } from \"../settings/shared/SettingsSection\";\nimport { SettingsSubsection, SettingsSubsectionText } from \"../settings/shared/SettingsSubsection\";\n\ninterface IProps {\n    space: Room;\n    onFinished(): void;\n}\n\nconst SpacePreferencesAppearanceTab: React.FC<Pick<IProps, \"space\">> = ({ space }) => {\n    const showPeople = useSettingValue(\"Spaces.showPeopleInSpace\", space.roomId);\n\n    return (\n        <SettingsTab>\n            <SettingsSection heading={_t(\"space|preferences|sections_section\")}>\n                <SettingsSubsection>\n                    <StyledCheckbox\n                        checked={!!showPeople}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                            SettingsStore.setValue(\n                                \"Spaces.showPeopleInSpace\",\n                                space.roomId,\n                                SettingLevel.ROOM_ACCOUNT,\n                                !showPeople,\n                            );\n                        }}\n                    >\n                        {_t(\"Direct Messages\") /* TCHAP: use-the-term-direct-messages-not-people - change label _t(\"common|people\") */}\n                    </StyledCheckbox>\n                    <SettingsSubsectionText>\n                        {_t(\"space|preferences|show_people_in_space\", {\n                            spaceName: space.name,\n                        })}\n                    </SettingsSubsectionText>\n                </SettingsSubsection>\n            </SettingsSection>\n        </SettingsTab>\n    );\n};\n\nconst SpacePreferencesDialog: React.FC<IProps> = ({ space, onFinished }) => {\n    const tabs: NonEmptyArray<Tab<SpacePreferenceTab>> = [\n        new Tab(\n            SpacePreferenceTab.Appearance,\n            _td(\"common|appearance\"),\n            \"mx_SpacePreferencesDialog_appearanceIcon\",\n            <SpacePreferencesAppearanceTab space={space} />,\n        ),\n    ];\n\n    return (\n        <BaseDialog\n            className=\"mx_SpacePreferencesDialog\"\n            hasCancel\n            onFinished={onFinished}\n            title={_t(\"common|preferences\")}\n            fixedWidth={false}\n        >\n            <h4>\n                <RoomName room={space} />\n            </h4>\n            <div className=\"mx_SettingsDialog_content\">\n                <TabbedView tabs={tabs} activeTabId={SpacePreferenceTab.Appearance} onChange={() => {}} />\n            </div>\n        </BaseDialog>\n    );\n};\n\nexport default SpacePreferencesDialog;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { useState } from \"react\";\nimport { Room, EventType, MatrixClient } from \"matrix-js-sdk/src/matrix\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport { _t } from \"../../../languageHandler\";\nimport AccessibleButton from \"../elements/AccessibleButton\";\nimport SpaceBasicSettings from \"./SpaceBasicSettings\";\nimport { avatarUrlForRoom } from \"../../../Avatar\";\nimport { htmlSerializeFromMdIfNeeded } from \"../../../editor/serialize\";\nimport { leaveSpace } from \"../../../utils/leave-behaviour\";\nimport { getTopic } from \"../../../hooks/room/useTopic\";\nimport SettingsTab from \"../settings/tabs/SettingsTab\";\nimport { SettingsSection } from \"../settings/shared/SettingsSection\";\nimport { SettingsSubsection } from \"../settings/shared/SettingsSubsection\";\n\ninterface IProps {\n    matrixClient: MatrixClient;\n    space: Room;\n}\n\nconst SpaceSettingsGeneralTab: React.FC<IProps> = ({ matrixClient: cli, space }) => {\n    const [busy, setBusy] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const userId = cli.getUserId()!;\n\n    const [newAvatar, setNewAvatar] = useState<File | null | undefined>(null); // undefined means to remove avatar\n    const canSetAvatar = space.currentState.maySendStateEvent(EventType.RoomAvatar, userId);\n    const avatarChanged = newAvatar !== null;\n\n    const [name, setName] = useState<string>(space.name);\n    const canSetName = space.currentState.maySendStateEvent(EventType.RoomName, userId);\n    const nameChanged = name !== space.name;\n\n    const currentTopic = getTopic(space)?.text ?? \"\";\n    const [topic, setTopic] = useState(currentTopic);\n    const canSetTopic = space.currentState.maySendStateEvent(EventType.RoomTopic, userId);\n    const topicChanged = topic !== currentTopic;\n\n    const onCancel = (): void => {\n        setNewAvatar(null);\n        setName(space.name);\n        setTopic(currentTopic);\n    };\n\n    const onSave = async (): Promise<void> => {\n        setBusy(true);\n        const promises: Promise<unknown>[] = [];\n\n        if (avatarChanged) {\n            if (newAvatar) {\n                promises.push(\n                    (async (): Promise<void> => {\n                        const { content_uri: url } = await cli.uploadContent(newAvatar);\n                        await cli.sendStateEvent(space.roomId, EventType.RoomAvatar, { url }, \"\");\n                    })(),\n                );\n            } else {\n                promises.push(cli.sendStateEvent(space.roomId, EventType.RoomAvatar, {}, \"\"));\n            }\n        }\n\n        if (nameChanged) {\n            promises.push(cli.setRoomName(space.roomId, name));\n        }\n\n        if (topicChanged) {\n            const htmlTopic = htmlSerializeFromMdIfNeeded(topic, { forceHTML: false });\n            promises.push(cli.setRoomTopic(space.roomId, topic, htmlTopic));\n        }\n\n        const results = await Promise.allSettled(promises);\n        setBusy(false);\n        const failures = results.filter((r) => r.status === \"rejected\");\n        if (failures.length > 0) {\n            logger.error(\"Failed to save space settings: \", failures);\n            setError(_t(\"room_settings|general|error_save_space_settings\"));\n        }\n    };\n\n    return (\n        <SettingsTab>\n            <SettingsSection heading={_t(\"common|general\")}>\n                <div>\n                    <div>{_t(\"room_settings|general|description_space\")}</div>\n\n                    {error && <div className=\"mx_SpaceRoomView_errorText\">{error}</div>}\n\n                    <SpaceBasicSettings\n                        avatarUrl={avatarUrlForRoom(space, 80, 80, \"crop\") ?? undefined}\n                        avatarDisabled={busy || !canSetAvatar}\n                        setAvatar={setNewAvatar}\n                        name={name}\n                        nameDisabled={busy || !canSetName}\n                        setName={setName}\n                        topic={topic}\n                        topicDisabled={busy || !canSetTopic}\n                        setTopic={setTopic}\n                    />\n\n                    <AccessibleButton\n                        onClick={onCancel}\n                        disabled={busy || !(avatarChanged || nameChanged || topicChanged)}\n                        kind=\"link\"\n                    >\n                        {_t(\"action|cancel\")}\n                    </AccessibleButton>\n                    <AccessibleButton onClick={onSave} disabled={busy} kind=\"primary\">\n                        {busy ? _t(\"common|saving\") : _t(\"room_settings|general|save\")}\n                    </AccessibleButton>\n                </div>\n\n                <SettingsSubsection heading={_t(\"room_settings|general|leave_space\")}>\n                    <AccessibleButton\n                        kind=\"danger\"\n                        onClick={() => {\n                            leaveSpace(space);\n                        }}\n                    >\n                        {_t(\"room_settings|general|leave_space\")}\n                    </AccessibleButton>\n                </SettingsSubsection>\n            </SettingsSection>\n        </SettingsTab>\n    );\n};\n\nexport default SpaceSettingsGeneralTab;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2017-2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { ChangeEvent } from \"react\";\n\nimport { _t } from \"../../../languageHandler\";\nimport Field from \"./Field\";\nimport AccessibleButton, { ButtonEvent } from \"./AccessibleButton\";\n\ninterface IItemProps {\n    index: number;\n    value?: string;\n    onRemove?(index: number): void;\n}\n\ninterface IItemState {\n    verifyRemove: boolean;\n}\n\nexport class EditableItem extends React.Component<IItemProps, IItemState> {\n    public state = {\n        verifyRemove: false,\n    };\n\n    private onRemove = (e: ButtonEvent): void => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        this.setState({ verifyRemove: true });\n    };\n\n    private onDontRemove = (e: ButtonEvent): void => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        this.setState({ verifyRemove: false });\n    };\n\n    private onActuallyRemove = (e: ButtonEvent): void => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (this.props.onRemove) this.props.onRemove(this.props.index);\n        this.setState({ verifyRemove: false });\n    };\n\n    public render(): React.ReactNode {\n        if (this.state.verifyRemove) {\n            return (\n                <div className=\"mx_EditableItem\">\n                    <span className=\"mx_EditableItem_promptText\">{_t(\"common|are_you_sure\")}</span>\n                    <AccessibleButton\n                        onClick={this.onActuallyRemove}\n                        kind=\"primary_sm\"\n                        className=\"mx_EditableItem_confirmBtn\"\n                    >\n                        {_t(\"action|yes\")}\n                    </AccessibleButton>\n                    <AccessibleButton\n                        onClick={this.onDontRemove}\n                        kind=\"danger_sm\"\n                        className=\"mx_EditableItem_confirmBtn\"\n                    >\n                        {_t(\"action|no\")}\n                    </AccessibleButton>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"mx_EditableItem\">\n                <div\n                    onClick={this.onRemove}\n                    className=\"mx_EditableItem_delete\"\n                    title={_t(\"action|remove\")}\n                    role=\"button\"\n                />\n                <span className=\"mx_EditableItem_item\">{this.props.value}</span>\n            </div>\n        );\n    }\n}\n\ninterface IProps {\n    id: string;\n    items: string[];\n    itemsLabel?: string;\n    noItemsLabel?: string;\n    placeholder?: string;\n    newItem?: string;\n    canEdit?: boolean;\n    canRemove?: boolean;\n    suggestionsListId?: string;\n    onItemAdded?(item?: string): void;\n    onItemRemoved?(index: number): void;\n    onNewItemChanged?(item: string): void;\n}\n\nexport default class EditableItemList<P = {}> extends React.PureComponent<IProps & P> {\n    protected onItemAdded = (e: ButtonEvent): void => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        this.props.onItemAdded?.(this.props.newItem);\n    };\n\n    protected onItemRemoved = (index: number): void => {\n        this.props.onItemRemoved?.(index);\n    };\n\n    protected onNewItemChanged = (e: ChangeEvent<HTMLInputElement>): void => {\n        this.props.onNewItemChanged?.(e.target.value);\n    };\n\n    protected renderNewItemField(): JSX.Element {\n        return (\n            <form\n                onSubmit={this.onItemAdded}\n                autoComplete=\"off\"\n                noValidate={true}\n                className=\"mx_EditableItemList_newItem\"\n            >\n                <Field\n                    label={this.props.placeholder}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    value={this.props.newItem || \"\"}\n                    onChange={this.onNewItemChanged}\n                    list={this.props.suggestionsListId}\n                />\n                <AccessibleButton onClick={this.onItemAdded} kind=\"primary\" disabled={!this.props.newItem}>\n                    {_t(\"action|add\")}\n                </AccessibleButton>\n            </form>\n        );\n    }\n\n    public render(): React.ReactNode {\n        const editableItems = this.props.items.map((item, index) => {\n            if (!this.props.canRemove) {\n                return <li key={item}>{item}</li>;\n            }\n\n            return <EditableItem key={item} index={index} value={item} onRemove={this.onItemRemoved} />;\n        });\n\n        const editableItemsSection = this.props.canRemove ? editableItems : <ul>{editableItems}</ul>;\n        const label = this.props.items.length > 0 ? this.props.itemsLabel : this.props.noItemsLabel;\n\n        return (\n            <div className=\"mx_EditableItemList\" id={this.props.id}>\n                <div className=\"mx_EditableItemList_label\">{label}</div>\n                {editableItemsSection}\n                {this.props.canEdit ? this.renderNewItemField() : <div />}\n            </div>\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction requireCanonicalAliasAccessToPublish(): boolean {\n    // Some environments may not care about this requirement and could return false\n    return true;\n}\n\n// This interface summarises all available customisation points and also marks\n// them all as optional. This allows customisers to only define and export the\n// customisations they need while still maintaining type safety.\nexport interface IDirectoryCustomisations {\n    requireCanonicalAliasAccessToPublish?: typeof requireCanonicalAliasAccessToPublish;\n}\n\n// A real customisation module will define and export one or more of the\n// customisation points that make up `IDirectoryCustomisations`.\nexport default {} as IDirectoryCustomisations;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020, 2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\nimport { JoinRule, Visibility } from \"matrix-js-sdk/src/matrix\";\n\nimport LabelledToggleSwitch from \"../elements/LabelledToggleSwitch\";\nimport { _t } from \"../../../languageHandler\";\nimport { MatrixClientPeg } from \"../../../MatrixClientPeg\";\nimport DirectoryCustomisations from \"../../../customisations/Directory\";\nimport Modal from \"../../../Modal\";\nimport ErrorDialog from \"../dialogs/ErrorDialog\";\n\ninterface IProps {\n    roomId: string;\n    label?: string;\n    canSetCanonicalAlias?: boolean;\n}\n\ninterface IState {\n    isRoomPublished: boolean;\n}\n\nexport default class RoomPublishSetting extends React.PureComponent<IProps, IState> {\n    public constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            isRoomPublished: false,\n        };\n    }\n\n    private showError(): void {\n        Modal.createDialog(ErrorDialog, {\n            title: _t(\"room_settings|general|error_publishing\"),\n            description: _t(\"room_settings|general|error_publishing_detail\"),\n        });\n    }\n\n    private onRoomPublishChange = (): void => {\n        const valueBefore = this.state.isRoomPublished;\n        const newValue = !valueBefore;\n        this.setState({ isRoomPublished: newValue });\n        const client = MatrixClientPeg.safeGet();\n\n        client\n            .setRoomDirectoryVisibility(this.props.roomId, newValue ? Visibility.Public : Visibility.Private)\n            .catch(() => {\n                this.showError();\n                // Roll back the local echo on the change\n                this.setState({ isRoomPublished: valueBefore });\n            });\n    };\n\n    public componentDidMount(): void {\n        const client = MatrixClientPeg.safeGet();\n        client.getRoomDirectoryVisibility(this.props.roomId).then((result) => {\n            this.setState({ isRoomPublished: result.visibility === \"public\" });\n        });\n    }\n\n    public render(): React.ReactNode {\n        const client = MatrixClientPeg.safeGet();\n\n        const room = client.getRoom(this.props.roomId);\n        const isRoomPublishable = room && room.getJoinRule() !== JoinRule.Invite;\n\n        const enabled =\n            (DirectoryCustomisations.requireCanonicalAliasAccessToPublish?.() === false ||\n                this.props.canSetCanonicalAlias) &&\n            (isRoomPublishable || this.state.isRoomPublished);\n\n        return (\n            <LabelledToggleSwitch\n                value={this.state.isRoomPublished}\n                onChange={this.onRoomPublishChange}\n                disabled={!enabled}\n                label={_t(\"room_settings|general|publish_toggle\", {\n                    domain: client.getDomain(),\n                })}\n            />\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2016-2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { ChangeEvent, ContextType, createRef, SyntheticEvent } from \"react\";\nimport { MatrixEvent, EventType } from \"matrix-js-sdk/src/matrix\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\nimport { RoomCanonicalAliasEventContent } from \"matrix-js-sdk/src/types\";\n\nimport EditableItemList from \"../elements/EditableItemList\";\nimport { _t } from \"../../../languageHandler\";\nimport Field from \"../elements/Field\";\nimport Spinner from \"../elements/Spinner\";\nimport ErrorDialog from \"../dialogs/ErrorDialog\";\nimport AccessibleButton from \"../elements/AccessibleButton\";\nimport Modal from \"../../../Modal\";\nimport RoomPublishSetting from \"./RoomPublishSetting\";\nimport RoomAliasField from \"../elements/RoomAliasField\";\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\nimport SettingsFieldset from \"../settings/SettingsFieldset\";\n\ninterface IEditableAliasesListProps {\n    roomId?: string;\n    domain?: string;\n}\n\nclass EditableAliasesList extends EditableItemList<IEditableAliasesListProps> {\n    private aliasField = createRef<RoomAliasField>();\n\n    private onAliasAdded = async (ev: SyntheticEvent): Promise<void> => {\n        ev.preventDefault();\n\n        if (!this.aliasField.current) return;\n        await this.aliasField.current.validate({ allowEmpty: false });\n\n        if (this.aliasField.current.isValid) {\n            if (this.props.onItemAdded) this.props.onItemAdded(this.props.newItem);\n            return;\n        }\n\n        this.aliasField.current.focus();\n        this.aliasField.current.validate({ allowEmpty: false, focused: true });\n    };\n\n    protected renderNewItemField(): JSX.Element {\n        const onChange = (alias: string): void => this.props.onNewItemChanged?.(alias);\n        return (\n            <form\n                onSubmit={this.onAliasAdded}\n                autoComplete=\"off\"\n                noValidate={true}\n                className=\"mx_EditableItemList_newItem\"\n            >\n                <RoomAliasField\n                    ref={this.aliasField}\n                    onChange={onChange}\n                    value={this.props.newItem || \"\"}\n                    domain={this.props.domain}\n                    roomId={this.props.roomId}\n                />\n                <AccessibleButton onClick={this.onAliasAdded} kind=\"primary\">\n                    {_t(\"action|add\")}\n                </AccessibleButton>\n            </form>\n        );\n    }\n}\n\ninterface IProps {\n    roomId: string;\n    canSetCanonicalAlias: boolean;\n    canSetAliases: boolean;\n    canonicalAliasEvent?: MatrixEvent;\n    hidePublishSetting?: boolean;\n}\n\ninterface IState {\n    // [ #alias:domain.tld, ... ]\n    altAliases: string[];\n    // [ #alias:my-hs.tld, ... ]\n    localAliases: string[];\n    // #canonical:domain.tld\n    canonicalAlias: string | null;\n    updatingCanonicalAlias: boolean;\n    localAliasesLoading: boolean;\n    detailsOpen: boolean;\n    newAlias?: string;\n    newAltAlias?: string;\n}\n\nexport default class AliasSettings extends React.Component<IProps, IState> {\n    public static contextType = MatrixClientContext;\n    declare public context: ContextType<typeof MatrixClientContext>;\n\n    public static defaultProps = {\n        canSetAliases: false,\n        canSetCanonicalAlias: false,\n    };\n\n    public constructor(props: IProps, context: ContextType<typeof MatrixClientContext>) {\n        super(props, context);\n\n        const state: IState = {\n            altAliases: [],\n            localAliases: [],\n            canonicalAlias: null,\n            updatingCanonicalAlias: false,\n            localAliasesLoading: false,\n            detailsOpen: false,\n        };\n\n        if (props.canonicalAliasEvent) {\n            const content = props.canonicalAliasEvent.getContent();\n            const altAliases = content.alt_aliases;\n            if (Array.isArray(altAliases)) {\n                state.altAliases = altAliases.slice();\n            }\n            state.canonicalAlias = content.alias;\n        }\n\n        this.state = state;\n    }\n\n    public componentDidMount(): void {\n        if (this.props.canSetCanonicalAlias) {\n            // load local aliases for providing recommendations\n            // for the canonical alias and alt_aliases\n            this.loadLocalAliases();\n        }\n    }\n\n    private async loadLocalAliases(): Promise<void> {\n        this.setState({ localAliasesLoading: true });\n        try {\n            const mxClient = this.context;\n\n            let localAliases: string[] = [];\n            const response = await mxClient.getLocalAliases(this.props.roomId);\n            if (Array.isArray(response?.aliases)) {\n                localAliases = response.aliases;\n            }\n            this.setState({ localAliases });\n\n            if (localAliases.length === 0) {\n                this.setState({ detailsOpen: true });\n            }\n        } finally {\n            this.setState({ localAliasesLoading: false });\n        }\n    }\n\n    private changeCanonicalAlias(alias: string | null): void {\n        if (!this.props.canSetCanonicalAlias) return;\n\n        const oldAlias = this.state.canonicalAlias;\n        this.setState({\n            canonicalAlias: alias,\n            updatingCanonicalAlias: true,\n        });\n\n        const eventContent: RoomCanonicalAliasEventContent = {\n            alt_aliases: this.state.altAliases,\n        };\n\n        if (alias) eventContent[\"alias\"] = alias;\n\n        this.context\n            .sendStateEvent(this.props.roomId, EventType.RoomCanonicalAlias, eventContent, \"\")\n            .catch((err) => {\n                logger.error(err);\n                Modal.createDialog(ErrorDialog, {\n                    title: _t(\"room_settings|general|error_updating_canonical_alias_title\"),\n                    description: _t(\"room_settings|general|error_updating_canonical_alias_description\"),\n                });\n                this.setState({ canonicalAlias: oldAlias });\n            })\n            .finally(() => {\n                this.setState({ updatingCanonicalAlias: false });\n            });\n    }\n\n    private changeAltAliases(altAliases: string[]): void {\n        if (!this.props.canSetCanonicalAlias) return;\n\n        this.setState({\n            updatingCanonicalAlias: true,\n        });\n\n        const eventContent: RoomCanonicalAliasEventContent = {};\n\n        if (this.state.canonicalAlias) {\n            eventContent[\"alias\"] = this.state.canonicalAlias;\n        }\n        if (altAliases) {\n            eventContent[\"alt_aliases\"] = altAliases;\n        }\n\n        this.context\n            .sendStateEvent(this.props.roomId, EventType.RoomCanonicalAlias, eventContent, \"\")\n            .then(() => {\n                this.setState({\n                    altAliases,\n                });\n            })\n            .catch((err) => {\n                // TODO: Add error handling based upon server validation\n                logger.error(err);\n                Modal.createDialog(ErrorDialog, {\n                    title: _t(\"room_settings|general|error_updating_canonical_alias_title\"),\n                    description: _t(\"room_settings|general|error_updating_alias_description\"),\n                });\n            })\n            .finally(() => {\n                this.setState({ updatingCanonicalAlias: false });\n            });\n    }\n\n    private onNewAliasChanged = (value: string): void => {\n        this.setState({ newAlias: value });\n    };\n\n    private onLocalAliasAdded = (alias?: string): void => {\n        if (!alias || alias.length === 0) return; // ignore attempts to create blank aliases\n\n        const localDomain = this.context.getDomain();\n        if (!alias.includes(\":\")) alias += \":\" + localDomain;\n\n        this.context\n            .createAlias(alias, this.props.roomId)\n            .then(() => {\n                this.setState({\n                    localAliases: this.state.localAliases.concat(alias!),\n                    newAlias: undefined,\n                });\n                if (!this.state.canonicalAlias) {\n                    this.changeCanonicalAlias(alias!);\n                }\n            })\n            .catch((err) => {\n                logger.error(err);\n                Modal.createDialog(ErrorDialog, {\n                    title: _t(\"room_settings|general|error_creating_alias_title\"),\n                    description: _t(\"room_settings|general|error_creating_alias_description\"),\n                });\n            });\n    };\n\n    private onLocalAliasDeleted = (index: number): void => {\n        const alias = this.state.localAliases[index];\n        // TODO: In future, we should probably be making sure that the alias actually belongs\n        // to this room. See https://github.com/vector-im/element-web/issues/7353\n        this.context\n            .deleteAlias(alias)\n            .then(() => {\n                const localAliases = this.state.localAliases.filter((a) => a !== alias);\n                this.setState({ localAliases });\n\n                if (this.state.canonicalAlias === alias) {\n                    this.changeCanonicalAlias(null);\n                }\n            })\n            .catch((err) => {\n                logger.error(err);\n                let description;\n                if (err.errcode === \"M_FORBIDDEN\") {\n                    description = _t(\"room_settings|general|error_deleting_alias_description_forbidden\");\n                } else {\n                    description = _t(\"room_settings|general|error_deleting_alias_description\");\n                }\n                Modal.createDialog(ErrorDialog, {\n                    title: _t(\"room_settings|general|error_deleting_alias_title\"),\n                    description,\n                });\n            });\n    };\n\n    private onLocalAliasesToggled = (event: ChangeEvent<HTMLDetailsElement>): void => {\n        // expanded\n        if (event.target.open) {\n            // if local aliases haven't been preloaded yet at component mount\n            if (!this.props.canSetCanonicalAlias && this.state.localAliases.length === 0) {\n                this.loadLocalAliases();\n            }\n        }\n        this.setState({ detailsOpen: event.currentTarget.open });\n    };\n\n    private onCanonicalAliasChange = (event: ChangeEvent<HTMLSelectElement>): void => {\n        this.changeCanonicalAlias(event.target.value);\n    };\n\n    private onNewAltAliasChanged = (value: string): void => {\n        this.setState({ newAltAlias: value });\n    };\n\n    private onAltAliasAdded = (alias: string): void => {\n        const altAliases = this.state.altAliases.slice();\n        if (!altAliases.some((a) => a.trim() === alias.trim())) {\n            altAliases.push(alias.trim());\n            this.changeAltAliases(altAliases);\n            this.setState({ newAltAlias: \"\" });\n        }\n    };\n\n    private onAltAliasDeleted = (index: number): void => {\n        const altAliases = this.state.altAliases.slice();\n        altAliases.splice(index, 1);\n        this.changeAltAliases(altAliases);\n    };\n\n    private getAliases(): string[] {\n        return this.state.altAliases.concat(this.getLocalNonAltAliases());\n    }\n\n    private getLocalNonAltAliases(): string[] {\n        const { altAliases } = this.state;\n        return this.state.localAliases.filter((alias) => !altAliases.includes(alias));\n    }\n\n    public render(): React.ReactNode {\n        const mxClient = this.context;\n        const localDomain = mxClient.getDomain()!;\n        const isSpaceRoom = mxClient.getRoom(this.props.roomId)?.isSpaceRoom();\n\n        let found = false;\n        const canonicalValue = this.state.canonicalAlias || \"\";\n        const canonicalAliasSection = (\n            <Field\n                onChange={this.onCanonicalAliasChange}\n                value={canonicalValue}\n                disabled={this.state.updatingCanonicalAlias || !this.props.canSetCanonicalAlias}\n                element=\"select\"\n                id=\"canonicalAlias\"\n                label={_t(\"room_settings|general|canonical_alias_field_label\")}\n            >\n                <option value=\"\" key=\"unset\">\n                    {_t(\"room_settings|alias_not_specified\")}\n                </option>\n                {this.getAliases().map((alias, i) => {\n                    if (alias === this.state.canonicalAlias) found = true;\n                    return (\n                        <option value={alias} key={i}>\n                            {alias}\n                        </option>\n                    );\n                })}\n                {found || !this.state.canonicalAlias ? (\n                    \"\"\n                ) : (\n                    <option value={this.state.canonicalAlias} key=\"arbitrary\">\n                        {this.state.canonicalAlias}\n                    </option>\n                )}\n            </Field>\n        );\n\n        let localAliasesList: JSX.Element;\n        if (this.state.localAliasesLoading) {\n            localAliasesList = <Spinner />;\n        } else {\n            localAliasesList = (\n                <EditableAliasesList\n                    id=\"roomAliases\"\n                    items={this.state.localAliases}\n                    newItem={this.state.newAlias}\n                    onNewItemChanged={this.onNewAliasChanged}\n                    canRemove={this.props.canSetAliases}\n                    canEdit={this.props.canSetAliases}\n                    onItemAdded={this.onLocalAliasAdded}\n                    onItemRemoved={this.onLocalAliasDeleted}\n                    noItemsLabel={\n                        isSpaceRoom\n                            ? _t(\"room_settings|general|no_aliases_space\")\n                            : _t(\"room_settings|general|no_aliases_room\")\n                    }\n                    placeholder={_t(\"room_settings|general|local_alias_field_label\")}\n                    domain={localDomain}\n                />\n            );\n        }\n\n        return (\n            <>\n                <SettingsFieldset\n                    data-testid=\"published-address-fieldset\"\n                    legend={_t(\"room_settings|general|published_aliases_section\")}\n                    description={\n                        <>\n                            {isSpaceRoom\n                                ? _t(\"room_settings|general|published_aliases_explainer_space\")\n                                : _t(\"room_settings|general|published_aliases_explainer_room\")}\n                            &nbsp;\n                            {_t(\"room_settings|general|published_aliases_description\")}\n                        </>\n                    }\n                >\n                    {canonicalAliasSection}\n                    {this.props.hidePublishSetting ? null : (\n                        <RoomPublishSetting\n                            roomId={this.props.roomId}\n                            canSetCanonicalAlias={this.props.canSetCanonicalAlias}\n                        />\n                    )}\n                    <datalist id=\"mx_AliasSettings_altRecommendations\">\n                        {this.getLocalNonAltAliases().map((alias) => {\n                            return <option value={alias} key={alias} />;\n                        })}\n                        ;\n                    </datalist>\n                    <EditableAliasesList\n                        id=\"roomAltAliases\"\n                        items={this.state.altAliases}\n                        newItem={this.state.newAltAlias}\n                        onNewItemChanged={this.onNewAltAliasChanged}\n                        canRemove={this.props.canSetCanonicalAlias}\n                        canEdit={this.props.canSetCanonicalAlias}\n                        onItemAdded={this.onAltAliasAdded}\n                        onItemRemoved={this.onAltAliasDeleted}\n                        suggestionsListId=\"mx_AliasSettings_altRecommendations\"\n                        itemsLabel={_t(\"room_settings|general|aliases_items_label\")}\n                        noItemsLabel={_t(\"room_settings|general|aliases_no_items_label\")}\n                        placeholder={_t(\"room_settings|general|new_alias_placeholder\")}\n                        roomId={this.props.roomId}\n                    />\n                </SettingsFieldset>\n                <SettingsFieldset\n                    data-testid=\"local-address-fieldset\"\n                    legend={_t(\"room_settings|general|local_aliases_section\")}\n                    description={\n                        isSpaceRoom\n                            ? _t(\"room_settings|general|local_aliases_explainer_space\", { localDomain })\n                            : _t(\"room_settings|general|local_aliases_explainer_room\", { localDomain })\n                    }\n                >\n                    <details onToggle={this.onLocalAliasesToggled} open={this.state.detailsOpen}>\n                        <summary className=\"mx_AliasSettings_localAddresses\">\n                            {this.state.detailsOpen ? _t(\"room_list|show_less\") : _t(\"common|show_more\")}\n                        </summary>\n                        {localAliasesList}\n                    </details>\n                </SettingsFieldset>\n            </>\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2021-2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { useState } from \"react\";\nimport { Room, EventType, GuestAccess, HistoryVisibility, JoinRule, MatrixClient } from \"matrix-js-sdk/src/matrix\";\n\nimport { _t } from \"../../../languageHandler\";\nimport AccessibleButton from \"../elements/AccessibleButton\";\nimport AliasSettings from \"../room_settings/AliasSettings\";\nimport { useStateToggle } from \"../../../hooks/useStateToggle\";\nimport LabelledToggleSwitch from \"../elements/LabelledToggleSwitch\";\nimport { useLocalEcho } from \"../../../hooks/useLocalEcho\";\nimport JoinRuleSettings from \"../settings/JoinRuleSettings\";\nimport { useRoomState } from \"../../../hooks/useRoomState\";\nimport SettingsFieldset from \"../settings/SettingsFieldset\";\nimport { useAsyncMemo } from \"../../../hooks/useAsyncMemo\";\nimport { SettingsSection } from \"../settings/shared/SettingsSection\";\nimport SettingsTab from \"../settings/tabs/SettingsTab\";\n\ninterface IProps {\n    matrixClient: MatrixClient;\n    space: Room;\n    closeSettingsFn(): void;\n}\n\nconst SpaceSettingsVisibilityTab: React.FC<IProps> = ({ matrixClient: cli, space, closeSettingsFn }) => {\n    const [error, setError] = useState(\"\");\n    const serverSupportsExploringSpaces = useAsyncMemo<boolean>(\n        async (): Promise<boolean> => {\n            return cli.isVersionSupported(\"v1.4\").then((supported) => {\n                return supported || cli.doesServerSupportUnstableFeature(\"org.matrix.msc3827.stable\");\n            });\n        },\n        [cli],\n        false,\n    );\n\n    const userId = cli.getUserId()!;\n\n    const joinRule = useRoomState(space, (state) => state.getJoinRule());\n    const [guestAccessEnabled, setGuestAccessEnabled] = useLocalEcho<boolean>(\n        () =>\n            space.currentState.getStateEvents(EventType.RoomGuestAccess, \"\")?.getContent()?.guest_access ===\n            GuestAccess.CanJoin,\n        (guestAccessEnabled) =>\n            cli.sendStateEvent(\n                space.roomId,\n                EventType.RoomGuestAccess,\n                {\n                    guest_access: guestAccessEnabled ? GuestAccess.CanJoin : GuestAccess.Forbidden,\n                },\n                \"\",\n            ),\n        () => setError(_t(\"room_settings|visibility|error_update_guest_access\")),\n    );\n    const [historyVisibility, setHistoryVisibility] = useLocalEcho<HistoryVisibility>(\n        () =>\n            space.currentState.getStateEvents(EventType.RoomHistoryVisibility, \"\")?.getContent()?.history_visibility ||\n            HistoryVisibility.Shared,\n        (historyVisibility) =>\n            cli.sendStateEvent(\n                space.roomId,\n                EventType.RoomHistoryVisibility,\n                {\n                    history_visibility: historyVisibility,\n                },\n                \"\",\n            ),\n        () => setError(_t(\"room_settings|visibility|error_update_history_visibility\")),\n    );\n\n    const [showAdvancedSection, toggleAdvancedSection] = useStateToggle();\n\n    const canSetGuestAccess = space.currentState.maySendStateEvent(EventType.RoomGuestAccess, userId);\n    const canSetHistoryVisibility = space.currentState.maySendStateEvent(EventType.RoomHistoryVisibility, userId);\n    const canSetCanonical = space.currentState.mayClientSendStateEvent(EventType.RoomCanonicalAlias, cli);\n    const canonicalAliasEv = space.currentState.getStateEvents(EventType.RoomCanonicalAlias, \"\");\n\n    let advancedSection;\n    if (joinRule === JoinRule.Public) {\n        advancedSection = (\n            <div>\n                <AccessibleButton\n                    data-testid=\"toggle-guest-access-btn\"\n                    onClick={toggleAdvancedSection}\n                    kind=\"link\"\n                    className=\"mx_SettingsTab_showAdvanced\"\n                    aria-expanded={showAdvancedSection}\n                >\n                    {showAdvancedSection ? _t(\"action|hide_advanced\") : _t(\"action|show_advanced\")}\n                </AccessibleButton>\n\n                {showAdvancedSection && (\n                    <div className=\"mx_SettingsTab_toggleWithDescription\">\n                        <LabelledToggleSwitch\n                            value={guestAccessEnabled}\n                            onChange={setGuestAccessEnabled}\n                            disabled={!canSetGuestAccess}\n                            label={_t(\"room_settings|visibility|guest_access_label\")}\n                        />\n                        <p>\n                            {_t(\"room_settings|visibility|guest_access_explainer\")}\n                            <br />\n                            {_t(\"room_settings|visibility|guest_access_explainer_public_space\")}\n                        </p>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    let addressesSection: JSX.Element | undefined;\n    if (space.getJoinRule() === JoinRule.Public) {\n        addressesSection = (\n            <SettingsSection heading={_t(\"room_settings|visibility|alias_section\")}>\n                <AliasSettings\n                    roomId={space.roomId}\n                    canSetCanonicalAlias={canSetCanonical}\n                    canSetAliases={true}\n                    canonicalAliasEvent={canonicalAliasEv ?? undefined}\n                    hidePublishSetting={!serverSupportsExploringSpaces}\n                />\n            </SettingsSection>\n        );\n    }\n\n    return (\n        <SettingsTab>\n            <SettingsSection heading={_t(\"room_settings|visibility|title\")}>\n                {error && (\n                    <div data-testid=\"space-settings-error\" className=\"mx_SpaceRoomView_errorText\">\n                        {error}\n                    </div>\n                )}\n\n                <SettingsFieldset\n                    data-testid=\"access-fieldset\"\n                    legend={_t(\"room_settings|access|title\")}\n                    description={_t(\"room_settings|access|description_space\", { spaceName: space.name })}\n                >\n                    <JoinRuleSettings\n                        room={space}\n                        onError={(): void => setError(_t(\"room_settings|visibility|error_failed_save\"))}\n                        closeSettingsFn={closeSettingsFn}\n                    />\n                    {advancedSection}\n                    <div className=\"mx_SettingsTab_toggleWithDescription\">\n                        <LabelledToggleSwitch\n                            value={historyVisibility === HistoryVisibility.WorldReadable}\n                            onChange={(checked: boolean): void => {\n                                setHistoryVisibility(\n                                    checked ? HistoryVisibility.WorldReadable : HistoryVisibility.Shared,\n                                );\n                            }}\n                            disabled={!canSetHistoryVisibility}\n                            label={_t(\"room_settings|visibility|history_visibility_anyone_space\")}\n                        />\n                        <p>\n                            {_t(\"room_settings|visibility|history_visibility_anyone_space_description\")}\n                            <br />\n                            <strong>\n                                {_t(\"room_settings|visibility|history_visibility_anyone_space_recommendation\")}\n                            </strong>\n                        </p>\n                    </div>\n                </SettingsFieldset>\n\n                {addressesSection}\n            </SettingsSection>\n        </SettingsTab>\n    );\n};\n\nexport default SpaceSettingsVisibilityTab;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { useMemo } from \"react\";\nimport { Room, MatrixClient } from \"matrix-js-sdk/src/matrix\";\n\nimport { _t, _td } from \"../../../languageHandler\";\nimport BaseDialog from \"./BaseDialog\";\nimport defaultDispatcher from \"../../../dispatcher/dispatcher\";\nimport { useDispatcher } from \"../../../hooks/useDispatcher\";\nimport TabbedView, { Tab } from \"../../structures/TabbedView\";\nimport SpaceSettingsGeneralTab from \"../spaces/SpaceSettingsGeneralTab\";\nimport SpaceSettingsVisibilityTab from \"../spaces/SpaceSettingsVisibilityTab\";\nimport SettingsStore from \"../../../settings/SettingsStore\";\nimport { UIFeature } from \"../../../settings/UIFeature\";\nimport AdvancedRoomSettingsTab from \"../settings/tabs/room/AdvancedRoomSettingsTab\";\nimport RolesRoomSettingsTab from \"../settings/tabs/room/RolesRoomSettingsTab\";\nimport { Action } from \"../../../dispatcher/actions\";\nimport { NonEmptyArray } from \"../../../@types/common\";\n\nexport enum SpaceSettingsTab {\n    General = \"SPACE_GENERAL_TAB\",\n    Visibility = \"SPACE_VISIBILITY_TAB\",\n    Roles = \"SPACE_ROLES_TAB\",\n    Advanced = \"SPACE_ADVANCED_TAB\",\n}\n\ninterface IProps {\n    matrixClient: MatrixClient;\n    space: Room;\n    onFinished(): void;\n}\n\nconst SpaceSettingsDialog: React.FC<IProps> = ({ matrixClient: cli, space, onFinished }) => {\n    useDispatcher(defaultDispatcher, (payload) => {\n        if (payload.action === Action.AfterLeaveRoom && payload.room_id === space.roomId) {\n            onFinished();\n        }\n    });\n\n    const tabs = useMemo(() => {\n        return [\n            new Tab(\n                SpaceSettingsTab.General,\n                _td(\"common|general\"),\n                \"mx_SpaceSettingsDialog_generalIcon\",\n                <SpaceSettingsGeneralTab matrixClient={cli} space={space} />,\n            ),\n            new Tab(\n                SpaceSettingsTab.Visibility,\n                _td(\"room_settings|visibility|title\"),\n                \"mx_SpaceSettingsDialog_visibilityIcon\",\n                <SpaceSettingsVisibilityTab matrixClient={cli} space={space} closeSettingsFn={onFinished} />,\n            ),\n            new Tab(\n                SpaceSettingsTab.Roles,\n                _td(\"room_settings|permissions|title\"),\n                \"mx_RoomSettingsDialog_rolesIcon\",\n                <RolesRoomSettingsTab room={space} />,\n            ),\n            SettingsStore.getValue(UIFeature.AdvancedSettings)\n                ? new Tab(\n                      SpaceSettingsTab.Advanced,\n                      _td(\"common|advanced\"),\n                      \"mx_RoomSettingsDialog_warningIcon\",\n                      <AdvancedRoomSettingsTab room={space} closeSettingsFn={onFinished} />,\n                  )\n                : null,\n        ].filter(Boolean) as NonEmptyArray<Tab<SpaceSettingsTab>>;\n    }, [cli, space, onFinished]);\n\n    const [activeTabId, setActiveTabId] = React.useState(SpaceSettingsTab.General);\n\n    return (\n        <BaseDialog\n            title={_t(\"space_settings|title\", { spaceName: space.name || _t(\"common|unnamed_space\") })}\n            className=\"mx_SpaceSettingsDialog\"\n            contentId=\"mx_SpaceSettingsDialog\"\n            onFinished={onFinished}\n            fixedWidth={false}\n        >\n            <div className=\"mx_SpaceSettingsDialog_content\" id=\"mx_SpaceSettingsDialog\">\n                <TabbedView tabs={tabs} activeTabId={activeTabId} onChange={setActiveTabId} />\n            </div>\n        </BaseDialog>\n    );\n};\n\nexport default SpaceSettingsDialog;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport classnames from \"classnames\";\nimport { ComponentProps } from \"react\";\nimport { MatrixClient } from \"matrix-js-sdk/src/matrix\";\n\nimport defaultDispatcher from \"../dispatcher/dispatcher\";\nimport { ActionPayload } from \"../dispatcher/payloads\";\nimport Modal from \"../Modal\";\nimport RoomSettingsDialog from \"../components/views/dialogs/RoomSettingsDialog\";\nimport ForwardDialog from \"../components/views/dialogs/ForwardDialog\";\nimport { Action } from \"../dispatcher/actions\";\nimport ReportEventDialog from \"../components/views/dialogs/ReportEventDialog\";\nimport SpacePreferencesDialog from \"../components/views/dialogs/SpacePreferencesDialog\";\nimport SpaceSettingsDialog from \"../components/views/dialogs/SpaceSettingsDialog\";\nimport InviteDialog from \"../components/views/dialogs/InviteDialog\";\nimport AddExistingToSpaceDialog from \"../components/views/dialogs/AddExistingToSpaceDialog\";\nimport { ButtonEvent } from \"../components/views/elements/AccessibleButton\";\nimport PosthogTrackers from \"../PosthogTrackers\";\nimport { showAddExistingSubspace, showCreateNewRoom } from \"./space\";\nimport { SdkContextClass } from \"../contexts/SDKContext\";\n\n/**\n * Auxiliary class to listen for dialog opening over the dispatcher and\n * open the required dialogs. Not all dialogs run through here, but the\n * ones which cause import cycles are good candidates.\n */\nexport class DialogOpener {\n    public static readonly instance = new DialogOpener();\n\n    private isRegistered = false;\n    private matrixClient?: MatrixClient;\n\n    private constructor() {}\n\n    // We could do this in the constructor, but then we wouldn't have\n    // a function to call from Lifecycle to capture the class.\n    public prepare(matrixClient: MatrixClient): void {\n        this.matrixClient = matrixClient;\n        if (this.isRegistered) return;\n        defaultDispatcher.register(this.onDispatch);\n        this.isRegistered = true;\n    }\n\n    private onDispatch = (payload: ActionPayload): void => {\n        if (!this.matrixClient) return;\n        switch (payload.action) {\n            case \"open_room_settings\":\n                Modal.createDialog(\n                    RoomSettingsDialog,\n                    {\n                        roomId: payload.room_id || SdkContextClass.instance.roomViewStore.getRoomId(),\n                        initialTabId: payload.initial_tab_id,\n                    },\n                    /*className=*/ undefined,\n                    /*isPriority=*/ false,\n                    /*isStatic=*/ true,\n                );\n                break;\n            case Action.OpenForwardDialog:\n                Modal.createDialog(ForwardDialog, {\n                    matrixClient: this.matrixClient,\n                    event: payload.event,\n                    permalinkCreator: payload.permalinkCreator,\n                });\n                break;\n            case Action.OpenReportEventDialog:\n                Modal.createDialog(\n                    ReportEventDialog,\n                    {\n                        mxEvent: payload.event,\n                    },\n                    \"mx_Dialog_reportEvent\",\n                );\n                break;\n            case Action.OpenSpacePreferences:\n                Modal.createDialog(\n                    SpacePreferencesDialog,\n                    {\n                        space: payload.space,\n                    },\n                    undefined,\n                    false,\n                    true,\n                );\n                break;\n            case Action.OpenSpaceSettings:\n                Modal.createDialog(\n                    SpaceSettingsDialog,\n                    {\n                        matrixClient: payload.space.client,\n                        space: payload.space,\n                    },\n                    /*className=*/ undefined,\n                    /*isPriority=*/ false,\n                    /*isStatic=*/ true,\n                );\n                break;\n            case Action.OpenInviteDialog:\n                Modal.createDialog(\n                    InviteDialog,\n                    {\n                        kind: payload.kind,\n                        call: payload.call,\n                        roomId: payload.roomId,\n                    } as Omit<ComponentProps<typeof InviteDialog>, \"onFinished\">,\n                    classnames(\"mx_InviteDialog_flexWrapper\", payload.className),\n                    false,\n                    true,\n                ).finished.then((results) => {\n                    payload.onFinishedCallback?.(results);\n                });\n                break;\n            case Action.OpenAddToExistingSpaceDialog: {\n                const space = payload.space;\n                Modal.createDialog(\n                    AddExistingToSpaceDialog,\n                    {\n                        onCreateRoomClick: (ev: ButtonEvent) => {\n                            showCreateNewRoom(space);\n                            PosthogTrackers.trackInteraction(\"WebAddExistingToSpaceDialogCreateRoomButton\", ev);\n                        },\n                        onAddSubspaceClick: () => showAddExistingSubspace(space),\n                        space,\n                        onFinished: (added: boolean) => {\n                            if (added && SdkContextClass.instance.roomViewStore.getRoomId() === space.roomId) {\n                                defaultDispatcher.fire(Action.UpdateSpaceHierarchy);\n                            }\n                        },\n                    },\n                    \"mx_AddExistingToSpaceDialog_wrapper\",\n                );\n                break;\n            }\n        }\n    };\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { logger } from \"matrix-js-sdk/src/logger\";\nimport decryptAESSecretStorageItem from \"matrix-js-sdk/src/utils/decryptAESSecretStorageItem\";\nimport encryptAESSecretStorageItem from \"matrix-js-sdk/src/utils/encryptAESSecretStorageItem\";\nimport { AESEncryptedSecretStoragePayload } from \"matrix-js-sdk/src/types\";\n\nimport * as StorageAccess from \"../StorageAccess\";\n\n/**\n * Utility functions related to the storage and retrieval of access tokens\n */\n\n/*\n * Names used when storing the tokens in indexeddb or localstorage\n */\nexport const ACCESS_TOKEN_STORAGE_KEY = \"mx_access_token\";\nexport const REFRESH_TOKEN_STORAGE_KEY = \"mx_refresh_token\";\n/*\n * Names of the tokens. Used as part of the calculation to derive AES keys during encryption in persistTokenInStorage,\n * and decryption in restoreSessionFromStorage.\n */\nexport const ACCESS_TOKEN_IV = \"access_token\";\nexport const REFRESH_TOKEN_IV = \"refresh_token\";\n/*\n * Keys for localstorage items which indicate whether we expect a token in indexeddb.\n */\nexport const HAS_ACCESS_TOKEN_STORAGE_KEY = \"mx_has_access_token\";\nexport const HAS_REFRESH_TOKEN_STORAGE_KEY = \"mx_has_refresh_token\";\n\n/**\n * The pickle key is a string of unspecified length and format.  For AES, we need a 256-bit Uint8Array. So we HKDF the pickle key to generate the AES key.  The AES key should be zeroed after it is used.\n * @param pickleKey\n * @returns AES key\n */\nasync function pickleKeyToAesKey(pickleKey: string): Promise<Uint8Array> {\n    const pickleKeyBuffer = new Uint8Array(pickleKey.length);\n    for (let i = 0; i < pickleKey.length; i++) {\n        pickleKeyBuffer[i] = pickleKey.charCodeAt(i);\n    }\n    const hkdfKey = await crypto.subtle.importKey(\"raw\", pickleKeyBuffer, \"HKDF\", false, [\"deriveBits\"]);\n    pickleKeyBuffer.fill(0);\n    return new Uint8Array(\n        await crypto.subtle.deriveBits(\n            {\n                name: \"HKDF\",\n                hash: \"SHA-256\",\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore: https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/879\n                salt: new Uint8Array(32),\n                info: new Uint8Array(0),\n            },\n            hkdfKey,\n            256,\n        ),\n    );\n}\n\n/**\n * Try to decrypt a token retrieved from storage\n *\n * Where token is not encrypted (plain text) returns the plain text token.\n *\n * Where token is encrypted, attempts decryption. Returns successfully decrypted token, or throws if\n * decryption failed.\n *\n * @param pickleKey Pickle key: used to derive the encryption key, or undefined if the token is not encrypted.\n *   Must be the same as provided to {@link persistTokenInStorage}.\n * @param token token to be decrypted.\n * @param tokenName Name of the token. Used in logging, but also used as an input when generating the actual AES key,\n *    so the same value must be provided to {@link persistTokenInStorage}.\n *\n * @returns the decrypted token, or the plain text token.\n */\nexport async function tryDecryptToken(\n    pickleKey: string | undefined,\n    token: AESEncryptedSecretStoragePayload | string,\n    tokenName: string,\n): Promise<string> {\n    if (typeof token === \"string\") {\n        // Looks like an unencrypted token\n        return token;\n    }\n\n    // Otherwise, it must be an encrypted token.\n    if (!pickleKey) {\n        throw new Error(`Error decrypting secret ${tokenName}: no pickle key found.`);\n    }\n\n    const encrKey = await pickleKeyToAesKey(pickleKey);\n    const decryptedToken = await decryptAESSecretStorageItem(token, encrKey, tokenName);\n    encrKey.fill(0);\n    return decryptedToken;\n}\n\n/**\n * Persist a token in storage\n *\n * When pickle key is present, will attempt to encrypt the token. If encryption fails (typically because\n * WebCrypto is unavailable), the key will be stored unencrypted.\n *\n * Stores in IndexedDB, falling back to localStorage.\n *\n * @param storageKey key used to store the token. Note: not an encryption key; rather a localstorage or indexeddb key.\n * @param tokenName Name of the token. Used in logging, but also used as an input when generating the actual AES key,\n *    so the same value must be provided to {@link tryDecryptToken} when decrypting.\n * @param token the token to store. When undefined, any existing token at the `storageKey` is removed from storage.\n * @param pickleKey Pickle key: used to derive the key used to encrypt token. If `undefined`, the token will be stored\n *    unencrypted.\n * @param hasTokenStorageKey Localstorage key for an item which stores whether we expect to have a token in indexeddb,\n *    eg \"mx_has_access_token\".\n */\nexport async function persistTokenInStorage(\n    storageKey: string,\n    tokenName: string,\n    token: string | undefined,\n    pickleKey: string | undefined,\n    hasTokenStorageKey: string,\n): Promise<void> {\n    // store whether we expect to find a token, to detect the case\n    // where IndexedDB is blown away\n    if (token) {\n        localStorage.setItem(hasTokenStorageKey, \"true\");\n    } else {\n        localStorage.removeItem(hasTokenStorageKey);\n    }\n\n    if (pickleKey) {\n        let encryptedToken: AESEncryptedSecretStoragePayload | undefined;\n        if (token) {\n            try {\n                // try to encrypt the access token using the pickle key\n                const encrKey = await pickleKeyToAesKey(pickleKey);\n                encryptedToken = await encryptAESSecretStorageItem(token, encrKey, tokenName);\n                encrKey.fill(0);\n            } catch (e) {\n                // This is likely due to the browser not having WebCrypto or somesuch.\n                // Warn about it, but fall back to storing the unencrypted token.\n                logger.warn(`Could not encrypt token for ${tokenName}`, e);\n            }\n        }\n        try {\n            // Save either the encrypted access token, or the plain access\n            // token if there is no token or we were unable to encrypt (e.g. if the browser doesn't\n            // have WebCrypto).\n            await StorageAccess.idbSave(\"account\", storageKey, encryptedToken || token);\n        } catch {\n            // if we couldn't save to indexedDB, fall back to localStorage.  We\n            // store the access token unencrypted since localStorage only saves\n            // strings.\n            if (!!token) {\n                localStorage.setItem(storageKey, token);\n            } else {\n                localStorage.removeItem(storageKey);\n            }\n        }\n    } else {\n        try {\n            await StorageAccess.idbSave(\"account\", storageKey, token);\n        } catch {\n            if (!!token) {\n                localStorage.setItem(storageKey, token);\n            } else {\n                localStorage.removeItem(storageKey);\n            }\n        }\n    }\n}\n\n/**\n * Wraps {@link persistTokenInStorage} with accessToken storage keys\n *\n * @param token - The token to store. When undefined, any existing accessToken is removed from storage.\n * @param pickleKey - Pickle key: used to derive the key used to encrypt token. If `undefined`, the token will be stored\n *    unencrypted.\n */\nexport async function persistAccessTokenInStorage(\n    token: string | undefined,\n    pickleKey: string | undefined,\n): Promise<void> {\n    return persistTokenInStorage(\n        ACCESS_TOKEN_STORAGE_KEY,\n        ACCESS_TOKEN_IV,\n        token,\n        pickleKey,\n        HAS_ACCESS_TOKEN_STORAGE_KEY,\n    );\n}\n\n/**\n * Wraps {@link persistTokenInStorage} with refreshToken storage keys.\n *\n * @param token - The token to store. When undefined, any existing refreshToken is removed from storage.\n * @param pickleKey - Pickle key: used to derive the key used to encrypt token. If `undefined`, the token will be stored\n *    unencrypted.\n */\nexport async function persistRefreshTokenInStorage(\n    token: string | undefined,\n    pickleKey: string | undefined,\n): Promise<void> {\n    return persistTokenInStorage(\n        REFRESH_TOKEN_STORAGE_KEY,\n        REFRESH_TOKEN_IV,\n        token,\n        pickleKey,\n        HAS_REFRESH_TOKEN_STORAGE_KEY,\n    );\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { OidcTokenRefresher, AccessTokens } from \"matrix-js-sdk/src/matrix\";\nimport { IdTokenClaims } from \"oidc-client-ts\";\n\nimport PlatformPeg from \"../../PlatformPeg\";\nimport { persistAccessTokenInStorage, persistRefreshTokenInStorage } from \"../tokens/tokens\";\n\n/**\n * OidcTokenRefresher that implements token persistence.\n * Stores tokens in the same way as login flow in Lifecycle.\n */\nexport class TokenRefresher extends OidcTokenRefresher {\n    private readonly deviceId!: string;\n\n    public constructor(\n        issuer: string,\n        clientId: string,\n        redirectUri: string,\n        deviceId: string,\n        idTokenClaims: IdTokenClaims,\n        private readonly userId: string,\n    ) {\n        super(issuer, clientId, deviceId, redirectUri, idTokenClaims);\n        this.deviceId = deviceId;\n    }\n\n    public async persistTokens({ accessToken, refreshToken }: AccessTokens): Promise<void> {\n        const pickleKey = (await PlatformPeg.get()?.getPickleKey(this.userId, this.deviceId)) ?? undefined;\n        await persistAccessTokenInStorage(accessToken, pickleKey);\n        await persistRefreshTokenInStorage(refreshToken, pickleKey);\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2019, 2020 , 2023 The Matrix.org Foundation C.I.C.\nCopyright 2018 New Vector Ltd\nCopyright 2017 Vector Creations Ltd\nCopyright 2015, 2016 OpenMarket Ltd\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { ReactNode } from \"react\";\nimport { createClient, MatrixClient, SSOAction, OidcTokenRefresher, decodeBase64 } from \"matrix-js-sdk/src/matrix\";\nimport { AESEncryptedSecretStoragePayload } from \"matrix-js-sdk/src/types\";\nimport { QueryDict } from \"matrix-js-sdk/src/utils\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport { IMatrixClientCreds, MatrixClientPeg, MatrixClientPegAssignOpts } from \"./MatrixClientPeg\";\nimport { ModuleRunner } from \"./modules/ModuleRunner\";\nimport EventIndexPeg from \"./indexing/EventIndexPeg\";\nimport createMatrixClient from \"./utils/createMatrixClient\";\nimport Notifier from \"./Notifier\";\nimport UserActivity from \"./UserActivity\";\nimport Presence from \"./Presence\";\nimport dis from \"./dispatcher/dispatcher\";\nimport DMRoomMap from \"./utils/DMRoomMap\";\nimport Modal from \"./Modal\";\nimport ActiveWidgetStore from \"./stores/ActiveWidgetStore\";\nimport PlatformPeg from \"./PlatformPeg\";\nimport { sendLoginRequest } from \"./Login\";\nimport * as StorageManager from \"./utils/StorageManager\";\nimport * as StorageAccess from \"./utils/StorageAccess\";\nimport SettingsStore from \"./settings/SettingsStore\";\nimport { SettingLevel } from \"./settings/SettingLevel\";\nimport ToastStore from \"./stores/ToastStore\";\nimport { IntegrationManagers } from \"./integrations/IntegrationManagers\";\nimport { Mjolnir } from \"./mjolnir/Mjolnir\";\nimport DeviceListener from \"./DeviceListener\";\nimport { Jitsi } from \"./widgets/Jitsi\";\nimport { SSO_HOMESERVER_URL_KEY, SSO_ID_SERVER_URL_KEY, SSO_IDP_ID_KEY } from \"./BasePlatform\";\nimport ThreepidInviteStore from \"./stores/ThreepidInviteStore\";\nimport { PosthogAnalytics } from \"./PosthogAnalytics\";\nimport LegacyCallHandler from \"./LegacyCallHandler\";\nimport LifecycleCustomisations from \"./customisations/Lifecycle\";\nimport ErrorDialog from \"./components/views/dialogs/ErrorDialog\";\nimport { _t } from \"./languageHandler\";\nimport SessionRestoreErrorDialog from \"./components/views/dialogs/SessionRestoreErrorDialog\";\nimport StorageEvictedDialog from \"./components/views/dialogs/StorageEvictedDialog\";\nimport { setSentryUser } from \"./sentry\";\nimport SdkConfig from \"./SdkConfig\";\nimport { DialogOpener } from \"./utils/DialogOpener\";\nimport { Action } from \"./dispatcher/actions\";\nimport { OverwriteLoginPayload } from \"./dispatcher/payloads/OverwriteLoginPayload\";\nimport { SdkContextClass } from \"./contexts/SDKContext\";\nimport { messageForLoginError } from \"./utils/ErrorUtils\";\nimport { completeOidcLogin } from \"./utils/oidc/authorize\";\nimport { getOidcErrorMessage } from \"./utils/oidc/error\";\nimport { OidcClientStore } from \"./stores/oidc/OidcClientStore\";\nimport {\n    getStoredOidcClientId,\n    getStoredOidcIdTokenClaims,\n    getStoredOidcTokenIssuer,\n    persistOidcAuthenticatedSettings,\n} from \"./utils/oidc/persistOidcSettings\";\nimport {\n    ACCESS_TOKEN_IV,\n    ACCESS_TOKEN_STORAGE_KEY,\n    HAS_ACCESS_TOKEN_STORAGE_KEY,\n    HAS_REFRESH_TOKEN_STORAGE_KEY,\n    persistAccessTokenInStorage,\n    persistRefreshTokenInStorage,\n    REFRESH_TOKEN_IV,\n    REFRESH_TOKEN_STORAGE_KEY,\n    tryDecryptToken,\n} from \"./utils/tokens/tokens\";\nimport { TokenRefresher } from \"./utils/oidc/TokenRefresher\";\nimport { checkBrowserSupport } from \"./SupportedBrowser\";\n\nconst HOMESERVER_URL_KEY = \"mx_hs_url\";\nconst ID_SERVER_URL_KEY = \"mx_is_url\";\n\ndis.register((payload) => {\n    if (payload.action === Action.TriggerLogout) {\n        // noinspection JSIgnoredPromiseFromCall - we don't care if it fails\n        onLoggedOut();\n    } else if (payload.action === Action.OverwriteLogin) {\n        const typed = <OverwriteLoginPayload>payload;\n        // Stop the current client before overwriting the login.\n        // If not done it might be impossible to clear the storage, as the\n        // rust crypto backend might be holding an open connection to the indexeddb store.\n        // We also use the `unsetClient` flag to false, because at this point we are\n        // already in the logged in flows of the `MatrixChat` component, and it will\n        // always expect to have a client (calls to `MatrixClientPeg.safeGet()`).\n        // If we unset the client and the component is updated,  the render will fail and unmount everything.\n        // (The module dialog closes and fires a `aria_unhide_main_app` that will trigger a re-render)\n        stopMatrixClient(false);\n        doSetLoggedIn(typed.credentials, true, true).catch((e) => {\n            // XXX we might want to fire a new event here to let the app know that the login failed ?\n            // The module api could use it to display a message to the user.\n            logger.warn(\"Failed to overwrite login\", e);\n        });\n    }\n});\n\n/**\n * This is set to true by {@link #onSessionLockStolen}.\n *\n * It is used in various of the async functions to prevent races where we initialise a client after the lock is stolen.\n */\nlet sessionLockStolen = false;\n\n// this is exposed solely for unit tests.\n// ts-prune-ignore-next\nexport function setSessionLockNotStolen(): void {\n    sessionLockStolen = false;\n}\n\n/**\n * Handle the session lock being stolen. Stops any active Matrix Client, and aborts any ongoing client initialisation.\n */\nexport async function onSessionLockStolen(): Promise<void> {\n    sessionLockStolen = true;\n    stopMatrixClient();\n}\n\n/**\n * Check if we still hold the session lock.\n *\n * If not, raises a {@link SessionLockStolenError}.\n */\nfunction checkSessionLock(): void {\n    if (sessionLockStolen) {\n        throw new SessionLockStolenError(\"session lock has been released\");\n    }\n}\n\n/** Error type raised by various functions in the Lifecycle workflow if session lock is stolen during execution */\nclass SessionLockStolenError extends Error {}\n\ninterface ILoadSessionOpts {\n    enableGuest?: boolean;\n    guestHsUrl?: string;\n    guestIsUrl?: string;\n    ignoreGuest?: boolean;\n    defaultDeviceDisplayName?: string;\n    fragmentQueryParams?: QueryDict;\n}\n\n/**\n * Called at startup, to attempt to build a logged-in Matrix session. It tries\n * a number of things:\n *\n * 1. if we have a guest access token in the fragment query params, it uses\n *    that.\n * 2. if an access token is stored in local storage (from a previous session),\n *    it uses that.\n * 3. it attempts to auto-register as a guest user.\n *\n * If any of steps 1-4 are successful, it will call {_doSetLoggedIn}, which in\n * turn will raise on_logged_in and will_start_client events.\n *\n * @param {object} [opts]\n * @param {object} [opts.fragmentQueryParams]: string->string map of the\n *     query-parameters extracted from the #-fragment of the starting URI.\n * @param {boolean} [opts.enableGuest]: set to true to enable guest access\n *     tokens and auto-guest registrations.\n * @param {string} [opts.guestHsUrl]: homeserver URL. Only used if enableGuest\n *     is true; defines the HS to register against.\n * @param {string} [opts.guestIsUrl]: homeserver URL. Only used if enableGuest\n *     is true; defines the IS to use.\n * @param {bool} [opts.ignoreGuest]: If the stored session is a guest account,\n *     ignore it and don't load it.\n * @param {string} [opts.defaultDeviceDisplayName]: Default display name to use\n *     when registering as a guest.\n * @returns {Promise} a promise which resolves when the above process completes.\n *     Resolves to `true` if we ended up starting a session, or `false` if we\n *     failed.\n */\nexport async function loadSession(opts: ILoadSessionOpts = {}): Promise<boolean> {\n    try {\n        let enableGuest = opts.enableGuest || false;\n        const guestHsUrl = opts.guestHsUrl;\n        const guestIsUrl = opts.guestIsUrl;\n        const fragmentQueryParams = opts.fragmentQueryParams || {};\n        const defaultDeviceDisplayName = opts.defaultDeviceDisplayName;\n\n        if (enableGuest && !guestHsUrl) {\n            logger.warn(\"Cannot enable guest access: can't determine HS URL to use\");\n            enableGuest = false;\n        }\n\n        if (enableGuest && guestHsUrl && fragmentQueryParams.guest_user_id && fragmentQueryParams.guest_access_token) {\n            logger.log(\"Using guest access credentials\");\n            return doSetLoggedIn(\n                {\n                    userId: fragmentQueryParams.guest_user_id as string,\n                    accessToken: fragmentQueryParams.guest_access_token as string,\n                    homeserverUrl: guestHsUrl,\n                    identityServerUrl: guestIsUrl,\n                    guest: true,\n                },\n                true,\n                false,\n            ).then(() => true);\n        }\n        const success = await restoreSessionFromStorage({\n            ignoreGuest: Boolean(opts.ignoreGuest),\n        });\n        if (success) {\n            return true;\n        }\n        if (sessionLockStolen) {\n            return false;\n        }\n\n        if (enableGuest && guestHsUrl) {\n            return registerAsGuest(guestHsUrl, guestIsUrl, defaultDeviceDisplayName);\n        }\n\n        // fall back to welcome screen\n        return false;\n    } catch (e) {\n        if (e instanceof AbortLoginAndRebuildStorage) {\n            // If we're aborting login because of a storage inconsistency, we don't\n            // need to show the general failure dialog. Instead, just go back to welcome.\n            return false;\n        }\n\n        // likewise, if the session lock has been stolen while we've been trying to start\n        if (sessionLockStolen) {\n            return false;\n        }\n\n        return handleLoadSessionFailure(e);\n    }\n}\n\n/**\n * Gets the user ID of the persisted session, if one exists. This does not validate\n * that the user's credentials still work, just that they exist and that a user ID\n * is associated with them. The session is not loaded.\n * @returns {[string, boolean]} The persisted session's owner and whether the stored\n *     session is for a guest user, if an owner exists. If there is no stored session,\n *     return [null, null].\n */\nexport async function getStoredSessionOwner(): Promise<[string, boolean] | [null, null]> {\n    const { hsUrl, userId, hasAccessToken, isGuest } = await getStoredSessionVars();\n    return hsUrl && userId && hasAccessToken ? [userId, !!isGuest] : [null, null];\n}\n\n/**\n * If query string includes OIDC authorization code flow parameters attempt to login using oidc flow\n * Else, we may be returning from SSO - attempt token login\n *\n * @param {Object} queryParams    string->string map of the\n *     query-parameters extracted from the real query-string of the starting\n *     URI.\n *\n * @param {string} defaultDeviceDisplayName\n * @param {string} fragmentAfterLogin path to go to after a successful login, only used for \"Try again\"\n *\n * @returns {Promise} promise which resolves to true if we completed the delegated auth login\n *      else false\n */\nexport async function attemptDelegatedAuthLogin(\n    queryParams: QueryDict,\n    defaultDeviceDisplayName?: string,\n    fragmentAfterLogin?: string,\n): Promise<boolean> {\n    if (queryParams.code && queryParams.state) {\n        console.log(\"We have OIDC params - attempting OIDC login\");\n        return attemptOidcNativeLogin(queryParams);\n    }\n\n    return attemptTokenLogin(queryParams, defaultDeviceDisplayName, fragmentAfterLogin);\n}\n\n/**\n * Attempt to login by completing OIDC authorization code flow\n * @param queryParams string->string map of the query-parameters extracted from the real query-string of the starting URI.\n * @returns Promise that resolves to true when login succceeded, else false\n */\nasync function attemptOidcNativeLogin(queryParams: QueryDict): Promise<boolean> {\n    try {\n        const { accessToken, refreshToken, homeserverUrl, identityServerUrl, idToken, clientId, issuer } =\n            await completeOidcLogin(queryParams);\n\n        const {\n            user_id: userId,\n            device_id: deviceId,\n            is_guest: isGuest,\n        } = await getUserIdFromAccessToken(accessToken, homeserverUrl, identityServerUrl);\n\n        const credentials = {\n            accessToken,\n            refreshToken,\n            homeserverUrl,\n            identityServerUrl,\n            deviceId,\n            userId,\n            isGuest,\n        };\n\n        logger.debug(\"Logged in via OIDC native flow\");\n        await onSuccessfulDelegatedAuthLogin(credentials);\n        // this needs to happen after success handler which clears storages\n        persistOidcAuthenticatedSettings(clientId, issuer, idToken);\n        return true;\n    } catch (error) {\n        logger.error(\"Failed to login via OIDC\", error);\n\n        await onFailedDelegatedAuthLogin(getOidcErrorMessage(error as Error));\n        return false;\n    }\n}\n\n/**\n * Gets information about the owner of a given access token.\n * @param accessToken\n * @param homeserverUrl\n * @param identityServerUrl\n * @returns Promise that resolves with whoami response\n * @throws when whoami request fails\n */\nasync function getUserIdFromAccessToken(\n    accessToken: string,\n    homeserverUrl: string,\n    identityServerUrl?: string,\n): Promise<ReturnType<MatrixClient[\"whoami\"]>> {\n    try {\n        const client = createClient({\n            baseUrl: homeserverUrl,\n            accessToken: accessToken,\n            idBaseUrl: identityServerUrl,\n        });\n\n        return await client.whoami();\n    } catch (error) {\n        logger.error(\"Failed to retrieve userId using accessToken\", error);\n        throw new Error(\"Failed to retrieve userId using accessToken\");\n    }\n}\n\n/**\n * @param {QueryDict} queryParams    string->string map of the\n *     query-parameters extracted from the real query-string of the starting\n *     URI.\n *\n * @param {string} defaultDeviceDisplayName\n * @param {string} fragmentAfterLogin path to go to after a successful login, only used for \"Try again\"\n *\n * @returns {Promise} promise which resolves to true if we completed the token\n *    login, else false\n */\nexport function attemptTokenLogin(\n    queryParams: QueryDict,\n    defaultDeviceDisplayName?: string,\n    fragmentAfterLogin?: string,\n): Promise<boolean> {\n    if (!queryParams.loginToken) {\n        return Promise.resolve(false);\n    }\n\n    console.log(\"We have token login params - attempting token login\");\n\n    const homeserver = localStorage.getItem(SSO_HOMESERVER_URL_KEY);\n    const identityServer = localStorage.getItem(SSO_ID_SERVER_URL_KEY) ?? undefined;\n    if (!homeserver) {\n        logger.warn(\"Cannot log in with token: can't determine HS URL to use\");\n        onFailedDelegatedAuthLogin(_t(\"auth|sso_failed_missing_storage\"));\n        return Promise.resolve(false);\n    }\n\n    return sendLoginRequest(homeserver, identityServer, \"m.login.token\", {\n        token: queryParams.loginToken as string,\n        initial_device_display_name: defaultDeviceDisplayName,\n    })\n        .then(async function (creds) {\n            logger.log(\"Logged in with token\");\n            await onSuccessfulDelegatedAuthLogin(creds);\n            return true;\n        })\n        .catch((error) => {\n            const tryAgainCallback: TryAgainFunction = () => {\n                const cli = createClient({\n                    baseUrl: homeserver,\n                    idBaseUrl: identityServer,\n                });\n                const idpId = localStorage.getItem(SSO_IDP_ID_KEY) || undefined;\n                PlatformPeg.get()?.startSingleSignOn(cli, \"sso\", fragmentAfterLogin, idpId, SSOAction.LOGIN);\n            };\n            onFailedDelegatedAuthLogin(\n                messageForLoginError(error, {\n                    hsUrl: homeserver,\n                    hsName: homeserver,\n                }),\n                tryAgainCallback,\n            );\n            logger.error(\"Failed to log in with login token:\", error);\n            return false;\n        });\n}\n\n/**\n * Called after a successful token login or OIDC authorization.\n * Clear storage then save new credentials in storage\n * @param credentials as returned from login\n */\nasync function onSuccessfulDelegatedAuthLogin(credentials: IMatrixClientCreds): Promise<void> {\n    await clearStorage();\n    await persistCredentials(credentials);\n\n    // remember that we just logged in\n    sessionStorage.setItem(\"mx_fresh_login\", String(true));\n}\n\ntype TryAgainFunction = () => void;\n\n/**\n * Display a friendly error to the user when token login or OIDC authorization fails\n * @param description error description\n * @param tryAgain OPTIONAL function to call on try again button from error dialog\n */\nasync function onFailedDelegatedAuthLogin(description: string | ReactNode, tryAgain?: TryAgainFunction): Promise<void> {\n    Modal.createDialog(ErrorDialog, {\n        title: _t(\"auth|oidc|error_title\"),\n        description,\n        button: _t(\"action|try_again\"),\n        // if we have a tryAgain callback, call it the primary 'try again' button was clicked in the dialog\n        onFinished: tryAgain ? (shouldTryAgain?: boolean) => shouldTryAgain && tryAgain() : undefined,\n    });\n}\n\nfunction registerAsGuest(hsUrl: string, isUrl?: string, defaultDeviceDisplayName?: string): Promise<boolean> {\n    logger.log(`Doing guest login on ${hsUrl}`);\n\n    // create a temporary MatrixClient to do the login\n    const client = createClient({\n        baseUrl: hsUrl,\n    });\n\n    return client\n        .registerGuest({\n            body: {\n                initial_device_display_name: defaultDeviceDisplayName,\n            },\n        })\n        .then(\n            (creds) => {\n                logger.log(`Registered as guest: ${creds.user_id}`);\n                return doSetLoggedIn(\n                    {\n                        userId: creds.user_id,\n                        deviceId: creds.device_id,\n                        accessToken: creds.access_token!,\n                        homeserverUrl: hsUrl,\n                        identityServerUrl: isUrl,\n                        guest: true,\n                    },\n                    true,\n                    true,\n                ).then(() => true);\n            },\n            (err) => {\n                logger.error(\"Failed to register as guest\", err);\n                return false;\n            },\n        );\n}\n\nexport interface IStoredSession {\n    hsUrl: string;\n    isUrl: string;\n    hasAccessToken: boolean;\n    accessToken: string | AESEncryptedSecretStoragePayload;\n    hasRefreshToken: boolean;\n    refreshToken?: string | AESEncryptedSecretStoragePayload;\n    userId: string;\n    deviceId: string;\n    isGuest: boolean;\n}\n\n/**\n * Retrieve a token, as stored by `persistCredentials`\n * Attempts to migrate token from localStorage to idb\n * @param storageKey key used to store the token, eg ACCESS_TOKEN_STORAGE_KEY\n * @returns Promise that resolves to token or undefined\n */\nasync function getStoredToken(storageKey: string): Promise<string | undefined> {\n    let token: string | undefined;\n    try {\n        token = await StorageAccess.idbLoad(\"account\", storageKey);\n    } catch (e) {\n        logger.error(`StorageManager.idbLoad failed for account:${storageKey}`, e);\n    }\n    if (!token) {\n        token = localStorage.getItem(storageKey) ?? undefined;\n        if (token) {\n            try {\n                // try to migrate access token to IndexedDB if we can\n                await StorageAccess.idbSave(\"account\", storageKey, token);\n                localStorage.removeItem(storageKey);\n            } catch (e) {\n                logger.error(`migration of token ${storageKey} to IndexedDB failed`, e);\n            }\n        }\n    }\n    return token;\n}\n\n/**\n * Retrieves information about the stored session from the browser's storage. The session\n * may not be valid, as it is not tested for consistency here.\n * @returns {Object} Information about the session - see implementation for variables.\n */\nexport async function getStoredSessionVars(): Promise<Partial<IStoredSession>> {\n    const hsUrl = localStorage.getItem(HOMESERVER_URL_KEY) ?? undefined;\n    const isUrl = localStorage.getItem(ID_SERVER_URL_KEY) ?? undefined;\n\n    const accessToken = await getStoredToken(ACCESS_TOKEN_STORAGE_KEY);\n    const refreshToken = await getStoredToken(REFRESH_TOKEN_STORAGE_KEY);\n\n    // if we pre-date storing \"mx_has_access_token\", but we retrieved an access\n    // token, then we should say we have an access token\n    const hasAccessToken = localStorage.getItem(HAS_ACCESS_TOKEN_STORAGE_KEY) === \"true\" || !!accessToken;\n    const hasRefreshToken = localStorage.getItem(HAS_REFRESH_TOKEN_STORAGE_KEY) === \"true\" || !!refreshToken;\n    const userId = localStorage.getItem(\"mx_user_id\") ?? undefined;\n    const deviceId = localStorage.getItem(\"mx_device_id\") ?? undefined;\n\n    let isGuest: boolean;\n    if (localStorage.getItem(\"mx_is_guest\") !== null) {\n        isGuest = localStorage.getItem(\"mx_is_guest\") === \"true\";\n    } else {\n        // legacy key name\n        isGuest = localStorage.getItem(\"matrix-is-guest\") === \"true\";\n    }\n\n    return { hsUrl, isUrl, hasAccessToken, accessToken, refreshToken, hasRefreshToken, userId, deviceId, isGuest };\n}\n\nasync function abortLogin(): Promise<void> {\n    const signOut = await showStorageEvictedDialog();\n    if (signOut) {\n        await clearStorage();\n        // This error feels a bit clunky, but we want to make sure we don't go any\n        // further and instead head back to sign in.\n        throw new AbortLoginAndRebuildStorage(\"Aborting login in progress because of storage inconsistency\");\n    }\n}\n\n/** Attempt to restore the session from localStorage or indexeddb.\n *\n * @returns true if a session was found; false if no existing session was found.\n *\n * N.B. Lifecycle.js should not maintain any further localStorage state, we\n *      are moving towards using SessionStore to keep track of state related\n *      to the current session (which is typically backed by localStorage).\n *\n *      The plan is to gradually move the localStorage access done here into\n *      SessionStore to avoid bugs where the view becomes out-of-sync with\n *      localStorage (e.g. isGuest etc.)\n */\nexport async function restoreSessionFromStorage(opts?: { ignoreGuest?: boolean }): Promise<boolean> {\n    const ignoreGuest = opts?.ignoreGuest;\n\n    if (!localStorage) {\n        return false;\n    }\n\n    const { hsUrl, isUrl, hasAccessToken, accessToken, refreshToken, userId, deviceId, isGuest } =\n        await getStoredSessionVars();\n\n    if (hasAccessToken && !accessToken) {\n        await abortLogin();\n    }\n\n    if (accessToken && userId && hsUrl) {\n        if (ignoreGuest && isGuest) {\n            logger.log(\"Ignoring stored guest account: \" + userId);\n            return false;\n        }\n\n        const pickleKey = (await PlatformPeg.get()?.getPickleKey(userId, deviceId ?? \"\")) ?? undefined;\n        if (pickleKey) {\n            logger.log(`Got pickle key for ${userId}|${deviceId}`);\n        } else {\n            logger.log(`No pickle key available for ${userId}|${deviceId}`);\n        }\n        const decryptedAccessToken = await tryDecryptToken(pickleKey, accessToken, ACCESS_TOKEN_IV);\n        const decryptedRefreshToken =\n            refreshToken && (await tryDecryptToken(pickleKey, refreshToken, REFRESH_TOKEN_IV));\n\n        const freshLogin = sessionStorage.getItem(\"mx_fresh_login\") === \"true\";\n        sessionStorage.removeItem(\"mx_fresh_login\");\n\n        logger.log(`Restoring session for ${userId}`);\n        await doSetLoggedIn(\n            {\n                userId: userId,\n                deviceId: deviceId,\n                accessToken: decryptedAccessToken,\n                refreshToken: decryptedRefreshToken,\n                homeserverUrl: hsUrl,\n                identityServerUrl: isUrl,\n                guest: isGuest,\n                pickleKey: pickleKey ?? undefined,\n                freshLogin: freshLogin,\n            },\n            false,\n            false,\n        );\n        return true;\n    } else {\n        logger.log(\"No previous session found.\");\n        return false;\n    }\n}\n\nasync function handleLoadSessionFailure(e: unknown): Promise<boolean> {\n    logger.error(\"Unable to load session\", e);\n\n    const modal = Modal.createDialog(SessionRestoreErrorDialog, {\n        error: e,\n    });\n\n    const [success] = await modal.finished;\n    if (success) {\n        // user clicked continue.\n        await clearStorage();\n        return false;\n    }\n\n    // try, try again\n    return loadSession();\n}\n\n/**\n * Transitions to a logged-in state using the given credentials.\n *\n * Starts the matrix client and all other react-sdk services that\n * listen for events while a session is logged in.\n *\n * Also stops the old MatrixClient and clears old credentials/etc out of\n * storage before starting the new client.\n *\n * @param {IMatrixClientCreds} credentials The credentials to use\n *\n * @returns {Promise} promise which resolves to the new MatrixClient once it has been started\n */\nexport async function setLoggedIn(credentials: IMatrixClientCreds): Promise<MatrixClient> {\n    credentials.freshLogin = true;\n    stopMatrixClient();\n    const pickleKey =\n        credentials.userId && credentials.deviceId\n            ? await PlatformPeg.get()?.createPickleKey(credentials.userId, credentials.deviceId)\n            : null;\n\n    if (pickleKey) {\n        logger.log(`Created pickle key for ${credentials.userId}|${credentials.deviceId}`);\n    } else {\n        logger.log(\"Pickle key not created\");\n    }\n\n    return doSetLoggedIn({ ...credentials, pickleKey: pickleKey ?? undefined }, true, true);\n}\n\n/**\n * When we have a authenticated via OIDC-native flow and have a refresh token\n * try to create a token refresher.\n * @param credentials from current session\n * @returns Promise that resolves to a TokenRefresher, or undefined\n */\nasync function createOidcTokenRefresher(credentials: IMatrixClientCreds): Promise<OidcTokenRefresher | undefined> {\n    if (!credentials.refreshToken) {\n        return;\n    }\n    // stored token issuer indicates we authenticated via OIDC-native flow\n    const tokenIssuer = getStoredOidcTokenIssuer();\n    if (!tokenIssuer) {\n        return;\n    }\n    try {\n        const clientId = getStoredOidcClientId();\n        const idTokenClaims = getStoredOidcIdTokenClaims();\n        const redirectUri = PlatformPeg.get()!.getOidcCallbackUrl().href;\n        const deviceId = credentials.deviceId;\n        if (!deviceId) {\n            throw new Error(\"Expected deviceId in user credentials.\");\n        }\n        const tokenRefresher = new TokenRefresher(\n            tokenIssuer,\n            clientId,\n            redirectUri,\n            deviceId,\n            idTokenClaims!,\n            credentials.userId,\n        );\n        // wait for the OIDC client to initialise\n        await tokenRefresher.oidcClientReady;\n        return tokenRefresher;\n    } catch (error) {\n        logger.error(\"Failed to initialise OIDC token refresher\", error);\n    }\n}\n\n/**\n * optionally clears localstorage, persists new credentials\n * to localstorage, starts the new client.\n *\n * @param {IMatrixClientCreds} credentials The credentials to use\n * @param {Boolean} clearStorageEnabled True to clear storage before starting the new client\n * @param {Boolean} isFreshLogin True if this is a fresh login, false if it is previous session being restored\n *\n * @returns {Promise} promise which resolves to the new MatrixClient once it has been started\n */\nasync function doSetLoggedIn(\n    credentials: IMatrixClientCreds,\n    clearStorageEnabled: boolean,\n    isFreshLogin: boolean,\n): Promise<MatrixClient> {\n    checkSessionLock();\n    credentials.guest = Boolean(credentials.guest);\n\n    const softLogout = isSoftLogout();\n\n    logger.log(\n        \"setLoggedIn: mxid: \" +\n            credentials.userId +\n            \" deviceId: \" +\n            credentials.deviceId +\n            \" guest: \" +\n            credentials.guest +\n            \" hs: \" +\n            credentials.homeserverUrl +\n            \" softLogout: \" +\n            softLogout,\n        \" freshLogin: \" + credentials.freshLogin,\n    );\n\n    if (clearStorageEnabled) {\n        await clearStorage();\n    }\n\n    const results = await StorageManager.checkConsistency();\n    // If there's an inconsistency between account data in local storage and the\n    // crypto store, we'll be generally confused when handling encrypted data.\n    // Show a modal recommending a full reset of storage.\n    if (results.dataInLocalStorage && results.cryptoInited && !results.dataInCryptoStore) {\n        await abortLogin();\n    }\n\n    const tokenRefresher = await createOidcTokenRefresher(credentials);\n\n    // check the session lock just before creating the new client\n    checkSessionLock();\n    MatrixClientPeg.replaceUsingCreds(credentials, tokenRefresher?.doRefreshAccessToken.bind(tokenRefresher));\n    const client = MatrixClientPeg.safeGet();\n\n    setSentryUser(credentials.userId);\n\n    if (PosthogAnalytics.instance.isEnabled()) {\n        PosthogAnalytics.instance.startListeningToSettingsChanges(client);\n    }\n\n    if (localStorage) {\n        try {\n            await persistCredentials(credentials);\n            // make sure we don't think that it's a fresh login any more\n            sessionStorage.removeItem(\"mx_fresh_login\");\n        } catch (e) {\n            logger.warn(\"Error using local storage: can't persist session!\", e);\n        }\n    } else {\n        logger.warn(\"No local storage available: can't persist session!\");\n    }\n    checkSessionLock();\n\n    // We are now logged in, so fire this. We have yet to start the client but the\n    // client_started dispatch is for that.\n    dis.fire(Action.OnLoggedIn);\n\n    const clientPegOpts: MatrixClientPegAssignOpts = {};\n    if (credentials.pickleKey) {\n        // The pickleKey, if provided, is probably a base64-encoded 256-bit key, so can be used for the crypto store.\n        if (credentials.pickleKey.length === 43) {\n            clientPegOpts.rustCryptoStoreKey = decodeBase64(credentials.pickleKey);\n        } else {\n            // We have some legacy pickle key. Continue using it as a password.\n            clientPegOpts.rustCryptoStorePassword = credentials.pickleKey;\n        }\n    }\n\n    try {\n        await startMatrixClient(client, /*startSyncing=*/ !softLogout, clientPegOpts);\n    } finally {\n        clientPegOpts.rustCryptoStoreKey?.fill(0);\n    }\n\n    // Run the migrations after the MatrixClientPeg has been assigned\n    SettingsStore.runMigrations(isFreshLogin);\n\n    if (isFreshLogin && !credentials.guest) {\n        // For newly registered users, set a flag so that we force them to verify,\n        // (we don't want to force users with existing sessions to verify though)\n        localStorage.setItem(\"must_verify_device\", \"true\");\n    }\n\n    return client;\n}\n\nasync function showStorageEvictedDialog(): Promise<boolean> {\n    const { finished } = Modal.createDialog(StorageEvictedDialog);\n    const [ok] = await finished;\n    return !!ok;\n}\n\n// Note: Babel 6 requires the `transform-builtin-extend` plugin for this to satisfy\n// `instanceof`. Babel 7 supports this natively in their class handling.\nclass AbortLoginAndRebuildStorage extends Error {}\n\nasync function persistCredentials(credentials: IMatrixClientCreds): Promise<void> {\n    localStorage.setItem(HOMESERVER_URL_KEY, credentials.homeserverUrl);\n    if (credentials.identityServerUrl) {\n        localStorage.setItem(ID_SERVER_URL_KEY, credentials.identityServerUrl);\n    }\n    localStorage.setItem(\"mx_user_id\", credentials.userId);\n    localStorage.setItem(\"mx_is_guest\", JSON.stringify(credentials.guest));\n\n    await persistAccessTokenInStorage(credentials.accessToken, credentials.pickleKey);\n    await persistRefreshTokenInStorage(credentials.refreshToken, credentials.pickleKey);\n\n    if (credentials.pickleKey) {\n        localStorage.setItem(\"mx_has_pickle_key\", String(true));\n    } else {\n        if (localStorage.getItem(\"mx_has_pickle_key\") === \"true\") {\n            logger.error(\"Expected a pickle key, but none provided.  Encryption may not work.\");\n        }\n    }\n\n    // if we didn't get a deviceId from the login, leave mx_device_id unset,\n    // rather than setting it to \"undefined\".\n    //\n    // (in this case MatrixClient doesn't bother with the crypto stuff\n    // - that's fine for us).\n    if (credentials.deviceId) {\n        localStorage.setItem(\"mx_device_id\", credentials.deviceId);\n    }\n\n    ModuleRunner.instance.extensions.cryptoSetup?.persistCredentials(credentials);\n\n    logger.log(`Session persisted for ${credentials.userId}`);\n}\n\nlet _isLoggingOut = false;\n\n/**\n * Logs out the current session.\n * When user has authenticated using OIDC native flow revoke tokens with OIDC provider.\n * Otherwise, call /logout on the homeserver.\n * @param client\n * @param oidcClientStore\n */\nasync function doLogout(client: MatrixClient, oidcClientStore?: OidcClientStore): Promise<void> {\n    if (oidcClientStore?.isUserAuthenticatedWithOidc) {\n        const accessToken = client.getAccessToken() ?? undefined;\n        const refreshToken = client.getRefreshToken() ?? undefined;\n\n        await oidcClientStore.revokeTokens(accessToken, refreshToken);\n    } else {\n        await client.logout(true);\n    }\n}\n\n/**\n * Logs the current session out and transitions to the logged-out state\n * @param oidcClientStore store instance from SDKContext\n */\nexport function logout(oidcClientStore?: OidcClientStore): void {\n    const client = MatrixClientPeg.get();\n    if (!client) return;\n\n    PosthogAnalytics.instance.logout();\n\n    if (client.isGuest()) {\n        // logout doesn't work for guest sessions\n        // Also we sometimes want to re-log in a guest session if we abort the login.\n        // defer until next tick because it calls a synchronous dispatch, and we are likely here from a dispatch.\n        setTimeout(onLoggedOut, 0);\n        return;\n    }\n\n    _isLoggingOut = true;\n    PlatformPeg.get()?.destroyPickleKey(client.getSafeUserId(), client.getDeviceId() ?? \"\");\n\n    doLogout(client, oidcClientStore).then(onLoggedOut, (err) => {\n        // Just throwing an error here is going to be very unhelpful\n        // if you're trying to log out because your server's down and\n        // you want to log into a different server, so just forget the\n        // access token. It's annoying that this will leave the access\n        // token still valid, but we should fix this by having access\n        // tokens expire (and if you really think you've been compromised,\n        // change your password).\n        logger.warn(\"Failed to call logout API: token will not be invalidated\", err);\n        onLoggedOut();\n    });\n}\n\nexport function softLogout(): void {\n    if (!MatrixClientPeg.get()) return;\n\n    // Track that we've detected and trapped a soft logout. This helps prevent other\n    // parts of the app from starting if there's no point (ie: don't sync if we've\n    // been soft logged out, despite having credentials and data for a MatrixClient).\n    localStorage.setItem(\"mx_soft_logout\", \"true\");\n\n    // Dev note: please keep this log line around. It can be useful for track down\n    // random clients stopping in the middle of the logs.\n    logger.log(\"Soft logout initiated\");\n    _isLoggingOut = true; // to avoid repeated flags\n    // Ensure that we dispatch a view change **before** stopping the client so\n    // so that React components unmount first. This avoids React soft crashes\n    // that can occur when components try to use a null client.\n    dis.dispatch({ action: \"on_client_not_viable\" }); // generic version of on_logged_out\n    stopMatrixClient(/*unsetClient=*/ false);\n\n    // DO NOT CALL LOGOUT. A soft logout preserves data, logout does not.\n}\n\nexport function isSoftLogout(): boolean {\n    return localStorage.getItem(\"mx_soft_logout\") === \"true\";\n}\n\nexport function isLoggingOut(): boolean {\n    return _isLoggingOut;\n}\n\n/**\n * Starts the matrix client and all other react-sdk services that\n * listen for events while a session is logged in.\n *\n * @param client the matrix client to start\n * @param startSyncing - `true` to actually start syncing the client.\n * @param clientPegOpts - Options to pass through to {@link MatrixClientPeg.start}.\n */\nasync function startMatrixClient(\n    client: MatrixClient,\n    startSyncing: boolean,\n    clientPegOpts: MatrixClientPegAssignOpts,\n): Promise<void> {\n    logger.log(`Lifecycle: Starting MatrixClient`);\n\n    // dispatch this before starting the matrix client: it's used\n    // to add listeners for the 'sync' event so otherwise we'd have\n    // a race condition (and we need to dispatch synchronously for this\n    // to work).\n    dis.dispatch({ action: \"will_start_client\" }, true);\n\n    // reset things first just in case\n    SdkContextClass.instance.typingStore.reset();\n    ToastStore.sharedInstance().reset();\n\n    DialogOpener.instance.prepare(client);\n    Notifier.start();\n    UserActivity.sharedInstance().start();\n    DMRoomMap.makeShared(client).start();\n    IntegrationManagers.sharedInstance().startWatching();\n    ActiveWidgetStore.instance.start();\n    LegacyCallHandler.instance.start();\n    checkBrowserSupport();\n\n    // Start Mjolnir even though we haven't checked the feature flag yet. Starting\n    // the thing just wastes CPU cycles, but should result in no actual functionality\n    // being exposed to the user.\n    Mjolnir.sharedInstance().start();\n\n    if (startSyncing) {\n        // The client might want to populate some views with events from the\n        // index (e.g. the FilePanel), therefore initialize the event index\n        // before the client.\n        await EventIndexPeg.init();\n        await MatrixClientPeg.start(clientPegOpts);\n    } else {\n        logger.warn(\"Caller requested only auxiliary services be started\");\n        await MatrixClientPeg.assign(clientPegOpts);\n    }\n\n    checkSessionLock();\n\n    // This needs to be started after crypto is set up\n    DeviceListener.sharedInstance().start(client);\n    // Similarly, don't start sending presence updates until we've started\n    // the client\n    if (!SettingsStore.getValue(\"lowBandwidth\")) {\n        Presence.start();\n    }\n\n    // Now that we have a MatrixClientPeg, update the Jitsi info\n    Jitsi.getInstance().start();\n\n    // dispatch that we finished starting up to wire up any other bits\n    // of the matrix client that cannot be set prior to starting up.\n    dis.dispatch({ action: \"client_started\" });\n\n    if (isSoftLogout()) {\n        softLogout();\n    }\n}\n\n/*\n * Stops a running client and all related services, and clears persistent\n * storage. Used after a session has been logged out.\n */\nexport async function onLoggedOut(): Promise<void> {\n    // Ensure that we dispatch a view change **before** stopping the client,\n    // that React components unmount first. This avoids React soft crashes\n    // that can occur when components try to use a null client.\n    dis.fire(Action.OnLoggedOut, true);\n    stopMatrixClient();\n    await clearStorage({ deleteEverything: true });\n    LifecycleCustomisations.onLoggedOutAndStorageCleared?.();\n    await PlatformPeg.get()?.clearStorage();\n    SettingsStore.reset();\n\n    // Do this last, so we can make sure all storage has been cleared and all\n    // customisations got the memo.\n    if (SdkConfig.get().logout_redirect_url) {\n        logger.log(\"Redirecting to external provider to finish logout\");\n        // XXX: Defer this so that it doesn't race with MatrixChat unmounting the world by going to /#/login\n        window.setTimeout(() => {\n            window.location.href = SdkConfig.get().logout_redirect_url!;\n        }, 100);\n    }\n    // Do this last to prevent racing `stopMatrixClient` and `on_logged_out` with MatrixChat handling Session.logged_out\n    _isLoggingOut = false;\n}\n\n/**\n * @param {object} opts Options for how to clear storage.\n * @returns {Promise} promise which resolves once the stores have been cleared\n */\nasync function clearStorage(opts?: { deleteEverything?: boolean }): Promise<void> {\n    if (window.localStorage) {\n        // get the currently defined device language, if set, so we can restore it later\n        const language = SettingsStore.getValueAt(SettingLevel.DEVICE, \"language\", null, true, true);\n\n        // try to save any 3pid invites from being obliterated and registration time\n        const pendingInvites = ThreepidInviteStore.instance.getWireInvites();\n        const registrationTime = window.localStorage.getItem(\"mx_registration_time\");\n\n        window.localStorage.clear();\n\n        try {\n            await StorageAccess.idbDelete(\"account\", ACCESS_TOKEN_STORAGE_KEY);\n        } catch (e) {\n            logger.error(\"idbDelete failed for account:mx_access_token\", e);\n        }\n\n        // now restore those invites, registration time and previously set device language\n        if (!opts?.deleteEverything) {\n            if (language) {\n                await SettingsStore.setValue(\"language\", null, SettingLevel.DEVICE, language);\n            }\n\n            pendingInvites.forEach(({ roomId, ...invite }) => {\n                ThreepidInviteStore.instance.storeInvite(roomId, invite);\n            });\n\n            if (registrationTime) {\n                window.localStorage.setItem(\"mx_registration_time\", registrationTime);\n            }\n        }\n    }\n\n    window.sessionStorage?.clear();\n\n    // create a temporary client to clear out the persistent stores.\n    const cli = createMatrixClient({\n        // we'll never make any requests, so can pass a bogus HS URL\n        baseUrl: \"\",\n    });\n\n    await EventIndexPeg.deleteEventIndex();\n    await cli.clearStores();\n}\n\n/**\n * Stop all the background processes related to the current client.\n * @param {boolean} unsetClient True (default) to abandon the client\n * on MatrixClientPeg after stopping.\n */\nexport function stopMatrixClient(unsetClient = true): void {\n    Notifier.stop();\n    LegacyCallHandler.instance.stop();\n    UserActivity.sharedInstance().stop();\n    SdkContextClass.instance.typingStore.reset();\n    Presence.stop();\n    ActiveWidgetStore.instance.stop();\n    IntegrationManagers.sharedInstance().stopWatching();\n    Mjolnir.sharedInstance().stop();\n    DeviceListener.sharedInstance().stop();\n    DMRoomMap.shared()?.stop();\n    EventIndexPeg.stop();\n    const cli = MatrixClientPeg.get();\n    if (cli) {\n        cli.stopClient();\n        cli.removeAllListeners();\n\n        if (unsetClient) {\n            MatrixClientPeg.unset();\n            EventIndexPeg.unset();\n            cli.store.destroy();\n        }\n    }\n}\n\n// Utility method to perform a login with an existing access_token\nwindow.mxLoginWithAccessToken = async (hsUrl: string, accessToken: string): Promise<void> => {\n    const tempClient = createClient({\n        baseUrl: hsUrl,\n        accessToken,\n    });\n    const { user_id: userId } = await tempClient.whoami();\n    await doSetLoggedIn(\n        {\n            homeserverUrl: hsUrl,\n            accessToken,\n            userId,\n        },\n        true,\n        false,\n    );\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2015-2021 The Matrix.org Foundation C.I.C.\nCopyright 2019 Michael Telatynski <7t3chguy@gmail.com>\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport {\n    createClient,\n    MatrixClient,\n    LoginFlow,\n    DELEGATED_OIDC_COMPATIBILITY,\n    ILoginFlow,\n    LoginRequest,\n    OidcClientConfig,\n} from \"matrix-js-sdk/src/matrix\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport { IMatrixClientCreds } from \"./MatrixClientPeg\";\nimport { ModuleRunner } from \"./modules/ModuleRunner\";\nimport { getOidcClientId } from \"./utils/oidc/registerClient\";\nimport { IConfigOptions } from \"./IConfigOptions\";\nimport SdkConfig from \"./SdkConfig\";\nimport { isUserRegistrationSupported } from \"./utils/oidc/isUserRegistrationSupported\";\n\n/**\n * Login flows supported by this client\n * LoginFlow type use the client API /login endpoint\n * OidcNativeFlow is specific to this client\n */\nexport type ClientLoginFlow = LoginFlow | OidcNativeFlow;\n\ninterface ILoginOptions {\n    defaultDeviceDisplayName?: string;\n    /**\n     * Delegated auth config from server's .well-known.\n     *\n     * If this property is set, we will attempt an OIDC login using the delegated auth settings.\n     * The caller is responsible for checking that OIDC is enabled in the labs settings.\n     */\n    delegatedAuthentication?: OidcClientConfig;\n}\n\nexport default class Login {\n    private flows: Array<ClientLoginFlow> = [];\n    private readonly defaultDeviceDisplayName?: string;\n    private delegatedAuthentication?: OidcClientConfig;\n    private tempClient: MatrixClient | null = null; // memoize\n\n    public constructor(\n        private hsUrl: string,\n        private isUrl: string,\n        private fallbackHsUrl: string | null,\n        opts: ILoginOptions,\n    ) {\n        this.defaultDeviceDisplayName = opts.defaultDeviceDisplayName;\n        this.delegatedAuthentication = opts.delegatedAuthentication;\n    }\n\n    public getHomeserverUrl(): string {\n        return this.hsUrl;\n    }\n\n    public getIdentityServerUrl(): string {\n        return this.isUrl;\n    }\n\n    public setHomeserverUrl(hsUrl: string): void {\n        this.tempClient = null; // clear memoization\n        this.hsUrl = hsUrl;\n    }\n\n    public setIdentityServerUrl(isUrl: string): void {\n        this.tempClient = null; // clear memoization\n        this.isUrl = isUrl;\n    }\n\n    /**\n     * Set delegated authentication config, clears tempClient.\n     * @param delegatedAuthentication delegated auth config, from ValidatedServerConfig\n     */\n    public setDelegatedAuthentication(delegatedAuthentication?: OidcClientConfig): void {\n        this.tempClient = null; // clear memoization\n        this.delegatedAuthentication = delegatedAuthentication;\n    }\n\n    /**\n     * Get a temporary MatrixClient, which can be used for login or register\n     * requests.\n     * @returns {MatrixClient}\n     */\n    public createTemporaryClient(): MatrixClient {\n        if (!this.tempClient) {\n            this.tempClient = createClient({\n                baseUrl: this.hsUrl,\n                idBaseUrl: this.isUrl,\n            });\n        }\n        return this.tempClient;\n    }\n\n    /**\n     * Get supported login flows\n     * @param isRegistration OPTIONAL used to verify registration is supported in delegated authentication config\n     * @returns Promise that resolves to supported login flows\n     */\n    public async getFlows(isRegistration?: boolean): Promise<Array<ClientLoginFlow>> {\n        // try to use oidc native flow if we have delegated auth config\n        if (this.delegatedAuthentication) {\n            try {\n                const oidcFlow = await tryInitOidcNativeFlow(\n                    this.delegatedAuthentication,\n                    SdkConfig.get().oidc_static_clients,\n                    isRegistration,\n                );\n                return [oidcFlow];\n            } catch (error) {\n                logger.error(error);\n            }\n        }\n\n        // oidc native flow not supported, continue with matrix login\n        const client = this.createTemporaryClient();\n        const { flows }: { flows: LoginFlow[] } = await client.loginFlows();\n        // If an m.login.sso flow is present which is also flagged as being for MSC3824 OIDC compatibility then we only\n        // return that flow as (per MSC3824) it is the only one that the user should be offered to give the best experience\n        const oidcCompatibilityFlow = flows.find(\n            (f) => f.type === \"m.login.sso\" && DELEGATED_OIDC_COMPATIBILITY.findIn(f),\n        );\n        this.flows = oidcCompatibilityFlow ? [oidcCompatibilityFlow] : flows;\n        return this.flows;\n    }\n\n    public loginViaPassword(\n        username: string | undefined,\n        phoneCountry: string | undefined,\n        phoneNumber: string | undefined,\n        password: string,\n    ): Promise<IMatrixClientCreds> {\n        const isEmail = !!username && username.indexOf(\"@\") > 0;\n\n        let identifier;\n        if (phoneCountry && phoneNumber) {\n            identifier = {\n                type: \"m.id.phone\",\n                country: phoneCountry,\n                phone: phoneNumber,\n                // XXX: Synapse historically wanted `number` and not `phone`\n                number: phoneNumber,\n            };\n        } else if (isEmail) {\n            identifier = {\n                type: \"m.id.thirdparty\",\n                medium: \"email\",\n                address: username,\n            };\n        } else {\n            identifier = {\n                type: \"m.id.user\",\n                user: username,\n            };\n        }\n\n        const loginParams = {\n            password,\n            identifier,\n            initial_device_display_name: this.defaultDeviceDisplayName,\n        };\n\n        const tryFallbackHs = (originalError: Error): Promise<IMatrixClientCreds> => {\n            return sendLoginRequest(this.fallbackHsUrl!, this.isUrl, \"m.login.password\", loginParams).catch(\n                (fallbackError) => {\n                    logger.log(\"fallback HS login failed\", fallbackError);\n                    // throw the original error\n                    throw originalError;\n                },\n            );\n        };\n\n        let originalLoginError: Error | null = null;\n        return sendLoginRequest(this.hsUrl, this.isUrl, \"m.login.password\", loginParams)\n            .catch((error) => {\n                originalLoginError = error;\n                if (error.httpStatus === 403) {\n                    if (this.fallbackHsUrl) {\n                        return tryFallbackHs(originalLoginError!);\n                    }\n                }\n                throw originalLoginError;\n            })\n            .catch((error) => {\n                logger.log(\"Login failed\", error);\n                throw error;\n            });\n    }\n}\n\n/**\n * Describes the OIDC native login flow\n * Separate from js-sdk's `LoginFlow` as this does not use the same /login flow\n * to which that type belongs.\n */\nexport interface OidcNativeFlow extends ILoginFlow {\n    type: \"oidcNativeFlow\";\n    // this client's id as registered with the configured OIDC OP\n    clientId: string;\n}\n/**\n * Prepares an OidcNativeFlow for logging into the server.\n *\n * Finds a static clientId for configured issuer, or attempts dynamic registration with the OP, and wraps the\n * results.\n *\n * @param delegatedAuthConfig  Auth config from ValidatedServerConfig\n * @param staticOidcClientIds static client config from config.json, used during client registration with OP\n * @param isRegistration true when we are attempting registration\n * @returns Promise<OidcNativeFlow> when oidc native authentication flow is supported and correctly configured\n * @throws when client can't register with OP, or any unexpected error\n */\nconst tryInitOidcNativeFlow = async (\n    delegatedAuthConfig: OidcClientConfig,\n    staticOidcClientIds?: IConfigOptions[\"oidc_static_clients\"],\n    isRegistration?: boolean,\n): Promise<OidcNativeFlow> => {\n    // if registration is not supported, bail before attempting to get the clientId\n    if (isRegistration && !isUserRegistrationSupported(delegatedAuthConfig)) {\n        throw new Error(\"Registration is not supported by OP\");\n    }\n    const clientId = await getOidcClientId(delegatedAuthConfig, staticOidcClientIds);\n\n    const flow = {\n        type: \"oidcNativeFlow\",\n        clientId,\n    } as OidcNativeFlow;\n\n    return flow;\n};\n\n/**\n * Send a login request to the given server, and format the response\n * as a MatrixClientCreds\n *\n * @param {string} hsUrl   the base url of the Homeserver used to log in.\n * @param {string} isUrl   the base url of the default identity server\n * @param {string} loginType the type of login to do\n * @param {ILoginParams} loginParams the parameters for the login\n *\n * @returns {IMatrixClientCreds}\n */\nexport async function sendLoginRequest(\n    hsUrl: string,\n    isUrl: string | undefined,\n    loginType: string,\n    loginParams: Omit<LoginRequest, \"type\">,\n): Promise<IMatrixClientCreds> {\n    const client = createClient({\n        baseUrl: hsUrl,\n        idBaseUrl: isUrl,\n    });\n\n    const data = await client.login(loginType, loginParams);\n\n    const wellknown = data.well_known;\n    if (wellknown) {\n        if (wellknown[\"m.homeserver\"]?.[\"base_url\"]) {\n            hsUrl = wellknown[\"m.homeserver\"][\"base_url\"];\n            logger.log(`Overrode homeserver setting with ${hsUrl} from login response`);\n        }\n        if (wellknown[\"m.identity_server\"]?.[\"base_url\"]) {\n            // TODO: should we prompt here?\n            isUrl = wellknown[\"m.identity_server\"][\"base_url\"];\n            logger.log(`Overrode IS setting with ${isUrl} from login response`);\n        }\n    }\n\n    const creds: IMatrixClientCreds = {\n        homeserverUrl: hsUrl,\n        identityServerUrl: isUrl,\n        userId: data.user_id,\n        deviceId: data.device_id,\n        accessToken: data.access_token,\n    };\n\n    ModuleRunner.instance.extensions.cryptoSetup.examineLoginResponse(data, creds);\n\n    return creds;\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { OidcClientConfig } from \"matrix-js-sdk/src/matrix\";\n\n/**\n * Check the create prompt is supported by the OP, if so, we can do a registration flow\n * https://openid.net/specs/openid-connect-prompt-create-1_0.html\n * @param delegatedAuthConfig config as returned from discovery\n * @returns whether user registration is supported\n */\nexport const isUserRegistrationSupported = (delegatedAuthConfig: OidcClientConfig): boolean => {\n    // The OidcMetadata type from oidc-client-ts does not include `prompt_values_supported`\n    // even though it is part of the OIDC spec, so cheat TS here to access it\n    const supportedPrompts = (delegatedAuthConfig.metadata as Record<string, unknown>)[\"prompt_values_supported\"];\n    return Array.isArray(supportedPrompts) && supportedPrompts?.includes(\"create\");\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { logger } from \"matrix-js-sdk/src/logger\";\nimport { registerOidcClient, OidcClientConfig } from \"matrix-js-sdk/src/matrix\";\n\nimport { IConfigOptions } from \"../../IConfigOptions\";\nimport PlatformPeg from \"../../PlatformPeg\";\n\n/**\n * Get the statically configured clientId for the issuer\n * @param issuer delegated auth OIDC issuer\n * @param staticOidcClients static client config from config.json\n * @returns clientId if found, otherwise undefined\n */\nconst getStaticOidcClientId = (\n    issuer: string,\n    staticOidcClients?: IConfigOptions[\"oidc_static_clients\"],\n): string | undefined => {\n    // static_oidc_clients are configured with a trailing slash\n    const issuerWithTrailingSlash = issuer.endsWith(\"/\") ? issuer : issuer + \"/\";\n    return staticOidcClients?.[issuerWithTrailingSlash]?.client_id;\n};\n\n/**\n * Get the clientId for an OIDC OP\n * Checks statically configured clientIds first\n * Then attempts dynamic registration with the OP\n * @param delegatedAuthConfig Auth config from ValidatedServerConfig\n * @param staticOidcClients static client config from config.json\n * @returns Promise<string> resolves with clientId\n * @throws if no clientId is found\n */\nexport const getOidcClientId = async (\n    delegatedAuthConfig: OidcClientConfig,\n    staticOidcClients?: IConfigOptions[\"oidc_static_clients\"],\n): Promise<string> => {\n    const staticClientId = getStaticOidcClientId(delegatedAuthConfig.metadata.issuer, staticOidcClients);\n    if (staticClientId) {\n        logger.debug(`Using static clientId for issuer ${delegatedAuthConfig.metadata.issuer}`);\n        return staticClientId;\n    }\n    return await registerOidcClient(delegatedAuthConfig, await PlatformPeg.get()!.getOidcClientMetadata());\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020, 2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\nimport { KeyBackupInfo, VerificationRequest } from \"matrix-js-sdk/src/crypto-api\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\nimport { SecretStorageKeyDescription } from \"matrix-js-sdk/src/secret-storage\";\n\nimport { _t } from \"../../../languageHandler\";\nimport { MatrixClientPeg } from \"../../../MatrixClientPeg\";\nimport Modal from \"../../../Modal\";\nimport VerificationRequestDialog from \"../../views/dialogs/VerificationRequestDialog\";\nimport { SetupEncryptionStore, Phase } from \"../../../stores/SetupEncryptionStore\";\nimport EncryptionPanel from \"../../views/right_panel/EncryptionPanel\";\nimport AccessibleButton, { ButtonEvent } from \"../../views/elements/AccessibleButton\";\nimport Spinner from \"../../views/elements/Spinner\";\nimport TchapUrls from \"~tchap-web/src/tchap/util/TchapUrls\"; // :TCHAP: help-access-verify-device\n\nfunction keyHasPassphrase(keyInfo: SecretStorageKeyDescription): boolean {\n    return Boolean(keyInfo.passphrase && keyInfo.passphrase.salt && keyInfo.passphrase.iterations);\n}\n\ninterface IProps {\n    onFinished: () => void;\n}\n\ninterface IState {\n    phase?: Phase;\n    verificationRequest: VerificationRequest | null;\n    backupInfo: KeyBackupInfo | null;\n    lostKeys: boolean;\n}\n\nexport default class SetupEncryptionBody extends React.Component<IProps, IState> {\n    public constructor(props: IProps) {\n        super(props);\n        const store = SetupEncryptionStore.sharedInstance();\n        store.start();\n        this.state = {\n            phase: store.phase,\n            // this serves dual purpose as the object for the request logic and\n            // the presence of it indicating that we're in 'verify mode'.\n            // Because of the latter, it lives in the state.\n            verificationRequest: store.verificationRequest,\n            backupInfo: store.backupInfo,\n            lostKeys: store.lostKeys(),\n        };\n    }\n\n    public componentDidMount(): void {\n        const store = SetupEncryptionStore.sharedInstance();\n        store.on(\"update\", this.onStoreUpdate);\n    }\n\n    private onStoreUpdate = (): void => {\n        const store = SetupEncryptionStore.sharedInstance();\n        if (store.phase === Phase.Finished) {\n            this.props.onFinished();\n            return;\n        }\n        this.setState({\n            phase: store.phase,\n            verificationRequest: store.verificationRequest,\n            backupInfo: store.backupInfo,\n            lostKeys: store.lostKeys(),\n        });\n    };\n\n    public componentWillUnmount(): void {\n        const store = SetupEncryptionStore.sharedInstance();\n        store.off(\"update\", this.onStoreUpdate);\n        store.stop();\n    }\n\n    private onUsePassphraseClick = async (): Promise<void> => {\n        const store = SetupEncryptionStore.sharedInstance();\n        store.usePassPhrase();\n    };\n\n    private onVerifyClick = (): void => {\n        const cli = MatrixClientPeg.safeGet();\n        const userId = cli.getSafeUserId();\n        const requestPromise = cli.getCrypto()!.requestOwnUserVerification();\n\n        // We need to call onFinished now to close this dialog, and\n        // again later to signal that the verification is complete.\n        this.props.onFinished();\n        Modal.createDialog(VerificationRequestDialog, {\n            verificationRequestPromise: requestPromise,\n            member: cli.getUser(userId) ?? undefined,\n            onFinished: async (): Promise<void> => {\n                const request = await requestPromise;\n                request.cancel();\n                this.props.onFinished();\n            },\n        });\n    };\n\n    private onSkipConfirmClick = (): void => {\n        const store = SetupEncryptionStore.sharedInstance();\n        store.skipConfirm();\n    };\n\n    private onSkipBackClick = (): void => {\n        const store = SetupEncryptionStore.sharedInstance();\n        store.returnAfterSkip();\n    };\n\n    private onResetClick = (ev: ButtonEvent): void => {\n        ev.preventDefault();\n        const store = SetupEncryptionStore.sharedInstance();\n        store.reset();\n    };\n\n    private onResetConfirmClick = (): void => {\n        this.props.onFinished();\n        const store = SetupEncryptionStore.sharedInstance();\n        store.resetConfirm();\n    };\n\n    private onResetBackClick = (): void => {\n        const store = SetupEncryptionStore.sharedInstance();\n        store.returnAfterReset();\n    };\n\n    private onDoneClick = (): void => {\n        const store = SetupEncryptionStore.sharedInstance();\n        store.done();\n    };\n\n    private onEncryptionPanelClose = (): void => {\n        this.props.onFinished();\n    };\n\n    public render(): React.ReactNode {\n        const cli = MatrixClientPeg.safeGet();\n        const { phase, lostKeys } = this.state;\n\n        if (this.state.verificationRequest && cli.getUser(this.state.verificationRequest.otherUserId)) {\n            return (\n                <EncryptionPanel\n                    layout=\"dialog\"\n                    verificationRequest={this.state.verificationRequest}\n                    onClose={this.onEncryptionPanelClose}\n                    member={cli.getUser(this.state.verificationRequest.otherUserId)!}\n                    isRoomEncrypted={false}\n                />\n            );\n        } else if (phase === Phase.Intro) {\n            if (lostKeys) {\n                return (\n                    <div>\n                        { /*:TCHAP: cross-signing-ui - change <p>{_t(\"encryption|verification|no_key_or_device\")}</p> */ }\n                        <p>\n                            {_t(\n                                \"<p>The Tchap team is working on the deployment of a new feature to \"+\n                                \"prevent encryption key loss.</p>\"+\n                                \"<p> You can access it in the section :</p><p>Security and privacy > Secure Backup</p>\",\n                                 {}, { 'p': (sub) => <p>{sub}</p>}\n                            )}\n                        </p>\n                        {/* end :TCHAP: */}\n\n                        <div className=\"mx_CompleteSecurity_actionRow\">\n                            <AccessibleButton kind=\"primary\" onClick={this.onResetConfirmClick}>\n                                {/* :TCHAP: cross-signing-ui - _t(\"encryption|verification|reset_proceed_prompt\") */}\n                                {_t(\"Set up\")}\n                                {/* end :TCHAP: */}\n                            </AccessibleButton>\n                        </div>\n                    </div>\n                );\n            } else {\n                const store = SetupEncryptionStore.sharedInstance();\n                let recoveryKeyPrompt;\n                if (store.keyInfo && keyHasPassphrase(store.keyInfo)) {\n                    recoveryKeyPrompt = _t(\"encryption|verification|verify_using_key_or_phrase\");\n                } else if (store.keyInfo) {\n                    recoveryKeyPrompt = _t(\"encryption|verification|verify_using_key\");\n                }\n\n                let useRecoveryKeyButton;\n                if (recoveryKeyPrompt) {\n                    useRecoveryKeyButton = (\n                        <AccessibleButton kind=\"primary\" onClick={this.onUsePassphraseClick}>\n                            {recoveryKeyPrompt}\n                        </AccessibleButton>\n                    );\n                }\n\n                let verifyButton;\n                if (store.hasDevicesToVerifyAgainst) {\n                    verifyButton = (\n                        <AccessibleButton kind=\"primary\" onClick={this.onVerifyClick}>\n                            {_t(\"encryption|verification|verify_using_device\")}\n                        </AccessibleButton>\n                    );\n                }\n\n                // :TCHAP:\n                const translationHelpLink =  (sub) => (\n                    <AccessibleButton kind=\"link_inline\" onClick={() => {\n                        window.open(TchapUrls.helpVerifyDevicesPage,\"_blank\")\n                    }}>\n                        {sub}\n                    </AccessibleButton>\n                )\n                const tchapHelpButton = (\n                    <AccessibleButton kind=\"primary_outline\" onClick={() => { window.open(TchapUrls.helpVerifyDevicesPage,\"_blank\") }}>\n                            {_t(\"common|help\")}\n                    </AccessibleButton>\n                )\n                // end :TCHAP: \n                return (\n                    <div>\n                        {/*:TCHAP: help-access-verify-device - <p>{_t(\"encryption|verification|verification_description\")} */}\n                        <p>{_t(\"encryption|verification|verification_description\")} {_t(\"encryption|verification|help_link\",  {}, {\n                             a: translationHelpLink,\n                            })}\n                        </p>\n                        {/* end :TCHAP: */}\n                        <div className=\"mx_CompleteSecurity_actionRow\">\n                            {verifyButton}\n                            {useRecoveryKeyButton}\n                            {/* :TCHAP: help-access-verify-device */}\n                            {tchapHelpButton}\n                            {/* end :TCHAP: */}\n                        </div>\n                        <div className=\"mx_SetupEncryptionBody_reset\">\n                            {_t(\"encryption|reset_all_button\", undefined, {\n                                a: (sub) => (\n                                    <AccessibleButton\n                                        kind=\"link_inline\"\n                                        className=\"mx_SetupEncryptionBody_reset_link\"\n                                        onClick={this.onResetClick}\n                                    >\n                                        {sub}\n                                    </AccessibleButton>\n                                ),\n                            })}\n                        </div>\n                    </div>\n                );\n            }\n        } else if (phase === Phase.Done) {\n            let message: JSX.Element;\n            if (this.state.backupInfo) {\n                message = <p>{_t(\"encryption|verification|verification_success_with_backup\")}</p>;\n            } else {\n                message = <p>{_t(\"encryption|verification|verification_success_without_backup\")}</p>;\n            }\n            return (\n                <div>\n                    <div className=\"mx_CompleteSecurity_heroIcon mx_E2EIcon_verified\" />\n                    {message}\n                    <div className=\"mx_CompleteSecurity_actionRow\">\n                        <AccessibleButton kind=\"primary\" onClick={this.onDoneClick}>\n                            {_t(\"action|done\")}\n                        </AccessibleButton>\n                    </div>\n                </div>\n            );\n        } else if (phase === Phase.ConfirmSkip) {\n            return (\n                <div>\n                    <p>{_t(\"encryption|verification|verification_skip_warning\")}</p>\n                    <div className=\"mx_CompleteSecurity_actionRow\">\n                        <AccessibleButton kind=\"danger_outline\" onClick={this.onSkipConfirmClick}>\n                            {_t(\"encryption|verification|verify_later\")}\n                        </AccessibleButton>\n                        <AccessibleButton kind=\"primary\" onClick={this.onSkipBackClick}>\n                            {_t(\"action|go_back\")}\n                        </AccessibleButton>\n                    </div>\n                </div>\n            );\n        } else if (phase === Phase.ConfirmReset) {\n            return (\n                <div>\n                    <p>{_t(\"encryption|verification|verify_reset_warning_1\")}</p>\n                    <p>{_t(\"encryption|verification|verify_reset_warning_2\")}</p>\n\n                    <div className=\"mx_CompleteSecurity_actionRow\">\n                        <AccessibleButton kind=\"danger_outline\" onClick={this.onResetConfirmClick}>\n                            {_t(\"encryption|verification|reset_proceed_prompt\")}\n                        </AccessibleButton>\n                        <AccessibleButton kind=\"primary\" onClick={this.onResetBackClick}>\n                            {_t(\"action|go_back\")}\n                        </AccessibleButton>\n                    </div>\n                </div>\n            );\n        } else if (phase === Phase.Busy || phase === Phase.Loading) {\n            return <Spinner />;\n        } else {\n            logger.log(`SetupEncryptionBody: Unknown phase ${phase}`);\n        }\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { MatrixEvent } from \"matrix-js-sdk/src/matrix\";\n\nconst UNSIGNED_KEY = \"io.element.late_event\";\n\n/**\n * This metadata describes when events arrive late after a net-split to offer improved UX.\n */\ninterface UnsignedLateEventInfo {\n    /**\n     * Milliseconds since epoch representing the time the event was received by the server\n     */\n    received_ts: number;\n    /**\n     * An opaque identifier representing the group the server has put the late arriving event into\n     */\n    group_id: string;\n}\n\n/**\n * Get io.element.late_event metadata from unsigned as sent by the server.\n *\n * @experimental this is not in the Matrix spec and needs special server support\n * @param mxEvent the Matrix Event to get UnsignedLateEventInfo on\n */\nexport function getLateEventInfo(mxEvent: MatrixEvent): UnsignedLateEventInfo | undefined {\n    return mxEvent.getUnsigned()[UNSIGNED_KEY];\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020, 2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\nimport { VerificationRequest } from \"matrix-js-sdk/src/crypto-api\";\nimport { User } from \"matrix-js-sdk/src/matrix\";\n\nimport { MatrixClientPeg } from \"../../../MatrixClientPeg\";\nimport { _t } from \"../../../languageHandler\";\nimport BaseDialog from \"./BaseDialog\";\nimport EncryptionPanel from \"../right_panel/EncryptionPanel\";\n\ninterface IProps {\n    verificationRequest?: VerificationRequest;\n    verificationRequestPromise?: Promise<VerificationRequest>;\n    onFinished: () => void;\n    member?: User;\n}\n\ninterface IState {\n    verificationRequest?: VerificationRequest;\n}\n\nexport default class VerificationRequestDialog extends React.Component<IProps, IState> {\n    public constructor(props: IProps) {\n        super(props);\n        this.state = {\n            verificationRequest: this.props.verificationRequest,\n        };\n    }\n\n    public componentDidMount(): void {\n        this.props.verificationRequestPromise?.then((r) => {\n            this.setState({ verificationRequest: r });\n        });\n    }\n\n    public render(): React.ReactNode {\n        const request = this.state.verificationRequest;\n        const otherUserId = request?.otherUserId;\n        const member = this.props.member || (otherUserId ? MatrixClientPeg.safeGet().getUser(otherUserId) : null);\n        /* :TCHAP: simplify-exchange-key-message - remove code\n        const title = request?.isSelfVerification\n            ? _t(\"encryption|verification|verification_dialog_title_device\")\n            : _t(\"encryption|verification|verification_dialog_title_user\");\n        end :TCHAP: */\n        const title = _t(\"Incoming Verification Request\"); // :TCHAP:\n\n        if (!member) return null;\n\n        return (\n            <BaseDialog\n                className=\"mx_InfoDialog\"\n                onFinished={this.props.onFinished}\n                contentId=\"mx_Dialog_content\"\n                title={title}\n                hasCancel={true}\n            >\n                <EncryptionPanel\n                    layout=\"dialog\"\n                    verificationRequest={this.props.verificationRequest}\n                    verificationRequestPromise={this.props.verificationRequestPromise}\n                    onClose={this.props.onFinished}\n                    member={member}\n                    isRoomEncrypted={false}\n                />\n            </BaseDialog>\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\n\nimport SetupEncryptionBody from \"../../../structures/auth/SetupEncryptionBody\";\nimport BaseDialog from \"../BaseDialog\";\nimport { _t } from \"../../../../languageHandler\";\nimport { SetupEncryptionStore, Phase } from \"../../../../stores/SetupEncryptionStore\";\n\nfunction iconFromPhase(phase?: Phase): string {\n    if (phase === Phase.Done) {\n        // eslint-disable-next-line @typescript-eslint/no-require-imports\n        return require(\"../../../../../res/img/e2e/verified-deprecated.svg\").default;\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-require-imports\n        return require(\"../../../../../res/img/e2e/warning-deprecated.svg\").default;\n    }\n}\n\ninterface IProps {\n    onFinished(): void;\n}\ninterface IState {\n    icon: string;\n}\n\nexport default class SetupEncryptionDialog extends React.Component<IProps, IState> {\n    private store: SetupEncryptionStore;\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.store = SetupEncryptionStore.sharedInstance();\n        this.state = { icon: iconFromPhase(this.store.phase) };\n    }\n\n    public componentDidMount(): void {\n        this.store.on(\"update\", this.onStoreUpdate);\n    }\n\n    public componentWillUnmount(): void {\n        this.store.removeListener(\"update\", this.onStoreUpdate);\n    }\n\n    private onStoreUpdate = (): void => {\n        this.setState({ icon: iconFromPhase(this.store.phase) });\n    };\n\n    public render(): React.ReactNode {\n        return (\n            <BaseDialog\n                headerImage={this.state.icon}\n                onFinished={this.props.onFinished}\n                title={_t(\"encryption|verify_toast_title\")}\n            >\n                <SetupEncryptionBody onFinished={this.props.onFinished} />\n            </BaseDialog>\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\nimport classnames from \"classnames\";\n\nimport StyledCheckbox from \"./StyledCheckbox\";\n\ninterface IProps {\n    // The value for the checkbox\n    value: boolean;\n    // The translated label for the checkbox\n    label: string;\n    // Optional translated string to show below the checkbox\n    byline?: string;\n    // Whether or not to disable the checkbox\n    disabled?: boolean;\n    // The function to call when the value changes\n    onChange(checked: boolean): void;\n    // Optional additional CSS class to apply to the label\n    className?: string;\n}\n\nconst LabelledCheckbox: React.FC<IProps> = ({ value, label, byline, disabled, onChange, className }) => {\n    return (\n        <label className={classnames(\"mx_LabelledCheckbox\", className)}>\n            <StyledCheckbox disabled={disabled} checked={value} onChange={(e) => onChange(e.target.checked)} />\n            <div className=\"mx_LabelledCheckbox_labels\">\n                <span className=\"mx_LabelledCheckbox_label\">{label}</span>\n                {byline ? <span className=\"mx_LabelledCheckbox_byline\">{byline}</span> : null}\n            </div>\n        </label>\n    );\n};\n\nexport default LabelledCheckbox;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { useEffect, useState } from \"react\";\nimport { Room, RoomEvent } from \"matrix-js-sdk/src/matrix\";\n\nimport { useTypedEventEmitter } from \"../../../hooks/useEventEmitter\";\n\ninterface IProps {\n    room?: Room;\n    children?(name: string): JSX.Element;\n}\n\n/**\n * @deprecated use `useRoomName.ts` instead\n */\nconst RoomName = ({ room, children }: IProps): JSX.Element => {\n    const [name, setName] = useState(room?.name);\n    useTypedEventEmitter(room, RoomEvent.Name, () => {\n        setName(room?.name);\n    });\n    useEffect(() => {\n        setName(room?.name);\n    }, [room]);\n\n    if (children) return children(name ?? \"\");\n    return <>{name || \"\"}</>;\n};\n\nexport default RoomName;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022, 2023 The Matrix.org Foundation C.I.C.\nCopyright 2021 Šimon Brandner <simon.bra.ag@gmail.com>\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\nimport { RoomMember } from \"matrix-js-sdk/src/matrix\";\nimport classNames from \"classnames\";\n\nimport { _t } from \"../../../languageHandler\";\nimport { getUserNameColorClass } from \"../../../utils/FormattingUtils\";\nimport UserIdentifier from \"../../../customisations/UserIdentifier\";\n\ninterface IProps {\n    member?: RoomMember | null;\n    fallbackName: string;\n    onClick?(): void;\n    colored?: boolean;\n    emphasizeDisplayName?: boolean;\n    withTooltip?: boolean;\n}\n\nexport default class DisambiguatedProfile extends React.Component<IProps> {\n    public render(): React.ReactNode {\n        const { fallbackName, member, colored, emphasizeDisplayName, withTooltip, onClick } = this.props;\n        const rawDisplayName = member?.rawDisplayName || fallbackName;\n        const mxid = member?.userId;\n\n        let colorClass: string | undefined;\n        if (colored) {\n            colorClass = getUserNameColorClass(mxid ?? \"\");\n        }\n\n        let mxidElement;\n        let title: string | undefined;\n\n        if (mxid) {\n            const identifier =\n                UserIdentifier.getDisplayUserIdentifier?.(mxid, {\n                    withDisplayName: true,\n                    roomId: member.roomId,\n                }) ?? mxid;\n            if (member?.disambiguate) {\n                mxidElement = <span className=\"mx_DisambiguatedProfile_mxid\">{identifier}</span>;\n            }\n            title = _t(\"timeline|disambiguated_profile\", {\n                displayName: rawDisplayName,\n                matrixId: identifier,\n            });\n        }\n\n        const displayNameClasses = classNames(colorClass, {\n            mx_DisambiguatedProfile_displayName: emphasizeDisplayName,\n        });\n\n        return (\n            <div className=\"mx_DisambiguatedProfile\" title={withTooltip ? title : undefined} onClick={onClick}>\n                <span className={displayNameClasses} dir=\"auto\">\n                    {rawDisplayName}\n                </span>\n                {mxidElement}\n            </div>\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\nCopyright 2015, 2016 OpenMarket Ltd\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n */\n\nimport React from \"react\";\nimport { MatrixEvent, MsgType } from \"matrix-js-sdk/src/matrix\";\n\nimport DisambiguatedProfile from \"./DisambiguatedProfile\";\nimport { useRoomMemberProfile } from \"../../../hooks/room/useRoomMemberProfile\";\n\ninterface IProps {\n    mxEvent: MatrixEvent;\n    onClick?(): void;\n    withTooltip?: boolean;\n}\n\nexport default function SenderProfile({ mxEvent, onClick, withTooltip }: IProps): JSX.Element {\n    const member = useRoomMemberProfile({\n        userId: mxEvent.getSender(),\n        member: mxEvent.sender,\n    });\n\n    return mxEvent.getContent().msgtype !== MsgType.Emote ? (\n        <DisambiguatedProfile\n            fallbackName={mxEvent.getSender() ?? \"\"}\n            onClick={onClick}\n            member={member}\n            colored={true}\n            emphasizeDisplayName={true}\n            withTooltip={withTooltip}\n        />\n    ) : (\n        <></>\n    );\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020 The Matrix.org Foundation C.I.C.\nCopyright 2018 New Vector Ltd\nCopyright 2015, 2016 OpenMarket Ltd\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\nimport classNames from \"classnames\";\n\nimport AccessibleButton from \"../elements/AccessibleButton\";\nimport { _t, _td, TranslationKey } from \"../../../languageHandler\";\nimport E2EIcon, { E2EState } from \"./E2EIcon\";\nimport BaseAvatar from \"../avatars/BaseAvatar\";\nimport PresenceLabel from \"./PresenceLabel\";\n\nexport enum PowerStatus {\n    Admin = \"admin\",\n    Moderator = \"moderator\",\n}\n\nconst PowerLabel: Record<PowerStatus, TranslationKey> = {\n    [PowerStatus.Admin]: _td(\"power_level|admin\"),\n    [PowerStatus.Moderator]: _td(\"power_level|mod\"),\n};\n\nexport type PresenceState = \"offline\" | \"online\" | \"unavailable\" | \"io.element.unreachable\";\n\nconst PRESENCE_CLASS: Record<PresenceState, string> = {\n    \"offline\": \"mx_EntityTile_offline\",\n    \"online\": \"mx_EntityTile_online\",\n    \"unavailable\": \"mx_EntityTile_unavailable\",\n    \"io.element.unreachable\": \"mx_EntityTile_unreachable\",\n};\n\nfunction presenceClassForMember(presenceState?: PresenceState, lastActiveAgo?: number, showPresence?: boolean): string {\n    if (showPresence === false) {\n        return \"mx_EntityTile_online_beenactive\";\n    }\n\n    // offline is split into two categories depending on whether we have\n    // a last_active_ago for them.\n    if (presenceState === \"offline\") {\n        if (lastActiveAgo) {\n            return PRESENCE_CLASS[\"offline\"] + \"_beenactive\";\n        } else {\n            return PRESENCE_CLASS[\"offline\"] + \"_neveractive\";\n        }\n    } else if (presenceState) {\n        return PRESENCE_CLASS[presenceState];\n    } else {\n        return PRESENCE_CLASS[\"offline\"] + \"_neveractive\";\n    }\n}\n\ninterface IProps {\n    name?: string;\n    nameJSX?: JSX.Element;\n    title?: string;\n    avatarJsx?: JSX.Element; // <BaseAvatar />\n    className?: string;\n    presenceState: PresenceState;\n    presenceLastActiveAgo: number;\n    presenceLastTs: number;\n    presenceCurrentlyActive?: boolean;\n    onClick(): void;\n    showPresence: boolean;\n    subtextLabel?: string;\n    e2eStatus?: E2EState;\n    powerStatus?: PowerStatus;\n}\n\ninterface IState {\n    hover: boolean;\n}\n\nexport default class EntityTile extends React.PureComponent<IProps, IState> {\n    public static defaultProps = {\n        onClick: () => {},\n        presenceState: \"offline\",\n        presenceLastActiveAgo: 0,\n        presenceLastTs: 0,\n        showInviteButton: false,\n        showPresence: true,\n    };\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            hover: false,\n        };\n    }\n\n    /**\n     * Creates the PresenceLabel component if needed\n     * @returns The PresenceLabel component if we need to render it, undefined otherwise\n     */\n    private getPresenceLabel(): JSX.Element | undefined {\n        if (!this.props.showPresence) return;\n        const activeAgo = this.props.presenceLastActiveAgo\n            ? Date.now() - (this.props.presenceLastTs - this.props.presenceLastActiveAgo)\n            : -1;\n        return (\n            <PresenceLabel\n                activeAgo={activeAgo}\n                currentlyActive={this.props.presenceCurrentlyActive}\n                presenceState={this.props.presenceState}\n            />\n        );\n    }\n\n    public render(): React.ReactNode {\n        const mainClassNames: Record<string, boolean> = {\n            mx_EntityTile: true,\n        };\n        if (this.props.className) mainClassNames[this.props.className] = true;\n\n        const presenceClass = presenceClassForMember(\n            this.props.presenceState,\n            this.props.presenceLastActiveAgo,\n            this.props.showPresence,\n        );\n        mainClassNames[presenceClass] = true;\n\n        const name = this.props.nameJSX || this.props.name;\n        const nameAndPresence = (\n            <div className=\"mx_EntityTile_details\">\n                <div className=\"mx_EntityTile_name\">{name}</div>\n                {this.getPresenceLabel()}\n            </div>\n        );\n\n        let powerLabel;\n        const powerStatus = this.props.powerStatus;\n        if (powerStatus) {\n            const powerText = _t(PowerLabel[powerStatus]);\n            powerLabel = <div className=\"mx_EntityTile_power\">{powerText}</div>;\n        }\n\n        let e2eIcon;\n        const { e2eStatus } = this.props;\n        if (e2eStatus) {\n            e2eIcon = <E2EIcon status={e2eStatus} isUser={true} bordered={true} />;\n        }\n\n        const av = this.props.avatarJsx || <BaseAvatar name={this.props.name} size=\"36px\" aria-hidden=\"true\" />;\n\n        // The wrapping div is required to make the magic mouse listener work, for some reason.\n        return (\n            <div>\n                <AccessibleButton\n                    className={classNames(mainClassNames)}\n                    title={this.props.title}\n                    onClick={this.props.onClick}\n                >\n                    <div className=\"mx_EntityTile_avatar\">\n                        {av}\n                        {e2eIcon}\n                    </div>\n                    {nameAndPresence}\n                    {powerLabel}\n                </AccessibleButton>\n            </div>\n        );\n    }\n}\n","/*\n * Copyright 2024 New Vector Ltd.\n * Copyright 2024 The Matrix.org Foundation C.I.C.\n *\n * SPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\n * Please see LICENSE files in the repository root for full details.\n */\n\nimport React, { HTMLProps, JSX, useContext, useState } from \"react\";\nimport { IContent, M_POLL_START, MatrixEvent, MatrixEventEvent, MsgType } from \"matrix-js-sdk/src/matrix\";\nimport classNames from \"classnames\";\n\nimport { _t } from \"../../../languageHandler\";\nimport { MessagePreviewStore } from \"../../../stores/room-list/MessagePreviewStore\";\nimport { useAsyncMemo } from \"../../../hooks/useAsyncMemo\";\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\nimport { useTypedEventEmitter } from \"../../../hooks/useEventEmitter.ts\";\n\n/**\n * The props for the {@link EventPreview} component.\n */\ninterface Props extends HTMLProps<HTMLSpanElement> {\n    /**\n     * The event to display the preview for\n     */\n    mxEvent: MatrixEvent;\n}\n\n/**\n * A component that displays a preview for the given event.\n * Wraps both `useEventPreview` & `EventPreviewTile`.\n */\nexport function EventPreview({ mxEvent, className, ...props }: Props): JSX.Element | null {\n    const preview = useEventPreview(mxEvent);\n    if (!preview) return null;\n\n    return <EventPreviewTile {...props} preview={preview} className={className} />;\n}\n\n/**\n * The props for the {@link EventPreviewTile} component.\n */\ninterface EventPreviewTileProps extends HTMLProps<HTMLSpanElement> {\n    /**\n     * The preview to display\n     */\n    preview: Preview;\n}\n\n/**\n * A component that displays a preview given the output from `useEventPreview`.\n */\nexport function EventPreviewTile({\n    preview: [preview, prefix],\n    className,\n    ...props\n}: EventPreviewTileProps): JSX.Element | null {\n    const classes = classNames(\"mx_EventPreview\", className);\n    if (!prefix)\n        return (\n            <span {...props} className={classes} title={preview}>\n                {preview}\n            </span>\n        );\n\n    return (\n        <span {...props} className={classes}>\n            {_t(\n                \"event_preview|preview\",\n                {\n                    prefix,\n                    preview,\n                },\n                {\n                    bold: (sub) => <span className=\"mx_EventPreview_prefix\">{sub}</span>,\n                },\n            )}\n        </span>\n    );\n}\n\ntype Preview = [preview: string, prefix: string | null];\n\n/**\n * Hooks to generate a preview for the event.\n * @param mxEvent\n */\nexport function useEventPreview(mxEvent: MatrixEvent | undefined): Preview | null {\n    const cli = useContext(MatrixClientContext);\n    // track the content as a means to regenerate the preview upon edits & decryption\n    const [content, setContent] = useState<IContent | undefined>(mxEvent?.getContent());\n    useTypedEventEmitter(mxEvent ?? undefined, MatrixEventEvent.Replaced, () => {\n        setContent(mxEvent!.getContent());\n    });\n    const awaitDecryption = mxEvent?.shouldAttemptDecryption() || mxEvent?.isBeingDecrypted();\n    useTypedEventEmitter(awaitDecryption ? (mxEvent ?? undefined) : undefined, MatrixEventEvent.Decrypted, () => {\n        setContent(mxEvent!.getContent());\n    });\n\n    return useAsyncMemo(\n        async () => {\n            if (!mxEvent || mxEvent.isRedacted() || mxEvent.isDecryptionFailure()) return null;\n            await cli.decryptEventIfNeeded(mxEvent);\n            return [\n                MessagePreviewStore.instance.generatePreviewForEvent(mxEvent),\n                getPreviewPrefix(mxEvent.getType(), content?.msgtype as MsgType),\n            ];\n        },\n        [mxEvent, content],\n        null,\n    );\n}\n\n/**\n * Get the prefix for the preview based on the type and the message type.\n * @param type\n * @param msgType\n */\nfunction getPreviewPrefix(type: string, msgType: MsgType): string | null {\n    switch (type) {\n        case M_POLL_START.name:\n            return _t(\"event_preview|prefix|poll\");\n        default:\n    }\n\n    switch (msgType) {\n        case MsgType.Audio:\n            return _t(\"event_preview|prefix|audio\");\n        case MsgType.Image:\n            return _t(\"event_preview|prefix|image\");\n        case MsgType.Video:\n            return _t(\"event_preview|prefix|video\");\n        case MsgType.File:\n            return _t(\"event_preview|prefix|file\");\n        default:\n            return null;\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2017-2023 The Matrix.org Foundation C.I.C.\nCopyright 2019 Michael Telatynski <7t3chguy@gmail.com>\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { MatrixEvent, Room, MatrixClient } from \"matrix-js-sdk/src/matrix\";\n\nimport { _t } from \"../../../languageHandler\";\nimport dis from \"../../../dispatcher/dispatcher\";\nimport { makeUserPermalink, RoomPermalinkCreator } from \"../../../utils/permalinks/Permalinks\";\nimport SettingsStore from \"../../../settings/SettingsStore\";\nimport { Layout } from \"../../../settings/enums/Layout\";\nimport { getUserNameColorClass } from \"../../../utils/FormattingUtils\";\nimport { Action } from \"../../../dispatcher/actions\";\nimport Spinner from \"./Spinner\";\nimport ReplyTile from \"../rooms/ReplyTile\";\nimport { Pill, PillType } from \"./Pill\";\nimport AccessibleButton from \"./AccessibleButton\";\nimport { getParentEventId, shouldDisplayReply } from \"../../../utils/Reply\";\nimport RoomContext from \"../../../contexts/RoomContext\";\nimport { MatrixClientPeg } from \"../../../MatrixClientPeg\";\nimport { GetRelationsForEvent } from \"../rooms/EventTile\";\n\n/**\n * This number is based on the previous behavior - if we have message of height\n * over 60px then we want to show button that will allow to expand it.\n */\nconst SHOW_EXPAND_QUOTE_PIXELS = 60;\n\ninterface IProps {\n    // the latest event in this chain of replies\n    parentEv: MatrixEvent;\n    // called when the ReplyChain contents has changed, including EventTiles thereof\n    onHeightChanged?: () => void;\n    permalinkCreator?: RoomPermalinkCreator;\n    // Specifies which layout to use.\n    layout?: Layout;\n    // Whether to always show a timestamp\n    alwaysShowTimestamps?: boolean;\n    forExport?: boolean;\n    isQuoteExpanded?: boolean;\n    setQuoteExpanded: (isExpanded: boolean) => void;\n    getRelationsForEvent?: GetRelationsForEvent;\n}\n\ninterface IState {\n    // The loaded events to be rendered as linear-replies\n    events: MatrixEvent[];\n    // The latest loaded event which has not yet been shown\n    loadedEv: MatrixEvent | null;\n    // Whether the component is still loading more events\n    loading: boolean;\n    // Whether as error was encountered fetching a replied to event.\n    err: boolean;\n}\n\n// This component does no cycle detection, simply because the only way to make such a cycle would be to\n// craft event_id's, using a homeserver that generates predictable event IDs; even then the impact would\n// be low as each event being loaded (after the first) is triggered by an explicit user action.\nexport default class ReplyChain extends React.Component<IProps, IState> {\n    public static contextType = RoomContext;\n    declare public context: React.ContextType<typeof RoomContext>;\n\n    private unmounted = false;\n    private room: Room;\n    private blockquoteRef = React.createRef<HTMLQuoteElement>();\n\n    public constructor(props: IProps, context: React.ContextType<typeof RoomContext>) {\n        super(props, context);\n\n        this.state = {\n            events: [],\n            loadedEv: null,\n            loading: true,\n            err: false,\n        };\n\n        this.room = this.matrixClient.getRoom(this.props.parentEv.getRoomId())!;\n    }\n\n    private get matrixClient(): MatrixClient {\n        return MatrixClientPeg.safeGet();\n    }\n\n    public componentDidMount(): void {\n        this.unmounted = false;\n        this.initialize();\n        this.trySetExpandableQuotes();\n    }\n\n    public componentDidUpdate(): void {\n        this.props.onHeightChanged?.();\n        this.trySetExpandableQuotes();\n    }\n\n    public componentWillUnmount(): void {\n        this.unmounted = true;\n    }\n\n    private trySetExpandableQuotes(): void {\n        if (this.props.isQuoteExpanded === undefined && this.blockquoteRef.current) {\n            const el: HTMLElement | null = this.blockquoteRef.current.querySelector(\".mx_EventTile_body\");\n            if (el) {\n                const code: HTMLElement | null = el.querySelector(\"code\");\n                const isCodeEllipsisShown = code ? code.offsetHeight >= SHOW_EXPAND_QUOTE_PIXELS : false;\n                const isElipsisShown = el.offsetHeight >= SHOW_EXPAND_QUOTE_PIXELS || isCodeEllipsisShown;\n                if (isElipsisShown) {\n                    this.props.setQuoteExpanded(false);\n                }\n            }\n        }\n    }\n\n    private async initialize(): Promise<void> {\n        const { parentEv } = this.props;\n        // at time of making this component we checked that props.parentEv has a parentEventId\n        const ev = await this.getEvent(getParentEventId(parentEv));\n\n        if (this.unmounted) return;\n\n        if (ev) {\n            const loadedEv = await this.getNextEvent(ev);\n            this.setState({\n                events: [ev],\n                loadedEv,\n                loading: false,\n            });\n        } else {\n            this.setState({ err: true });\n        }\n    }\n\n    private async getNextEvent(ev: MatrixEvent): Promise<MatrixEvent | null> {\n        try {\n            const inReplyToEventId = getParentEventId(ev);\n            if (!inReplyToEventId) return null;\n            return await this.getEvent(inReplyToEventId);\n        } catch {\n            return null;\n        }\n    }\n\n    private async getEvent(eventId?: string): Promise<MatrixEvent | null> {\n        if (!eventId) return null;\n        const event = this.room.findEventById(eventId);\n        if (event) return event;\n\n        try {\n            // ask the client to fetch the event we want using the context API, only interface to do so is to ask\n            // for a timeline with that event, but once it is loaded we can use findEventById to look up the ev map\n            await this.matrixClient.getEventTimeline(this.room.getUnfilteredTimelineSet(), eventId);\n        } catch {\n            // if it fails catch the error and return early, there's no point trying to find the event in this case.\n            // Return null as it is falsy and thus should be treated as an error (as the event cannot be resolved).\n            return null;\n        }\n        return this.room.findEventById(eventId) ?? null;\n    }\n\n    public canCollapse = (): boolean => {\n        return this.state.events.length > 1;\n    };\n\n    public collapse = (): void => {\n        this.initialize();\n    };\n\n    private onQuoteClick = async (): Promise<void> => {\n        if (!this.state.loadedEv) return;\n        const events = [this.state.loadedEv, ...this.state.events];\n\n        let loadedEv: MatrixEvent | null = null;\n        if (events.length > 0) {\n            loadedEv = await this.getNextEvent(events[0]);\n        }\n\n        this.setState({\n            loadedEv,\n            events,\n        });\n\n        dis.fire(Action.FocusSendMessageComposer);\n    };\n\n    private getReplyChainColorClass(ev: MatrixEvent): string {\n        return getUserNameColorClass(ev.getSender()!).replace(\"Username\", \"ReplyChain\");\n    }\n\n    public render(): React.ReactNode {\n        let header: JSX.Element | undefined;\n        if (this.state.err) {\n            header = (\n                <blockquote className=\"mx_ReplyChain mx_ReplyChain_error\">\n                    {_t(\"timeline|reply|error_loading\")}\n                </blockquote>\n            );\n        } else if (this.state.loadedEv && shouldDisplayReply(this.state.events[0])) {\n            const ev = this.state.loadedEv;\n            const room = this.matrixClient.getRoom(ev.getRoomId());\n            header = (\n                <blockquote className={`mx_ReplyChain ${this.getReplyChainColorClass(ev)}`}>\n                    {_t(\n                        \"timeline|reply|in_reply_to\",\n                        {},\n                        {\n                            a: (sub) => (\n                                <AccessibleButton\n                                    kind=\"link_inline\"\n                                    className=\"mx_ReplyChain_show\"\n                                    onClick={this.onQuoteClick}\n                                >\n                                    {sub}\n                                </AccessibleButton>\n                            ),\n                            pill: (\n                                <Pill\n                                    type={PillType.UserMention}\n                                    room={room ?? undefined}\n                                    url={makeUserPermalink(ev.getSender()!)}\n                                    shouldShowPillAvatar={SettingsStore.getValue(\"Pill.shouldShowPillAvatar\")}\n                                />\n                            ),\n                        },\n                    )}\n                </blockquote>\n            );\n        } else if (this.props.forExport) {\n            const eventId = getParentEventId(this.props.parentEv);\n            header = (\n                <p className=\"mx_ReplyChain_Export\">\n                    {_t(\n                        \"timeline|reply|in_reply_to_for_export\",\n                        {},\n                        {\n                            a: (sub) => (\n                                <a className=\"mx_reply_anchor\" href={`#${eventId}`} data-scroll-to={eventId}>\n                                    {\" \"}\n                                    {sub}{\" \"}\n                                </a>\n                            ),\n                        },\n                    )}\n                </p>\n            );\n        } else if (this.state.loading) {\n            header = <Spinner w={16} h={16} />;\n        }\n\n        const { isQuoteExpanded } = this.props;\n        const evTiles = this.state.events.map((ev) => {\n            const classname = classNames({\n                \"mx_ReplyChain\": true,\n                [this.getReplyChainColorClass(ev)]: true,\n                // We don't want to add the class if it's undefined, it should only be expanded/collapsed when it's true/false\n                \"mx_ReplyChain--expanded\": isQuoteExpanded === true,\n                // We don't want to add the class if it's undefined, it should only be expanded/collapsed when it's true/false\n                \"mx_ReplyChain--collapsed\": isQuoteExpanded === false,\n            });\n            return (\n                <blockquote ref={this.blockquoteRef} className={classname} key={ev.getId()}>\n                    <ReplyTile\n                        mxEvent={ev}\n                        onHeightChanged={this.props.onHeightChanged}\n                        permalinkCreator={this.props.permalinkCreator}\n                        toggleExpandedQuote={() => this.props.setQuoteExpanded(!this.props.isQuoteExpanded)}\n                        getRelationsForEvent={this.props.getRelationsForEvent}\n                    />\n                </blockquote>\n            );\n        });\n\n        return (\n            <div className=\"mx_ReplyChain_wrapper\">\n                <div>{header}</div>\n                <div>{evTiles}</div>\n            </div>\n        );\n    }\n}\n","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ReplyIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M9.405 5.708c.39-.391.39-1.025 0-1.416a.996.996 0 0 0-1.412 0L3.294 9.006a1.004 1.004 0 0 0 0 1.416l4.699 4.714a.996.996 0 0 0 1.412 0c.39-.39.39-1.025 0-1.416L6.36 10.666h9.154c1.887 0 3.485 1.604 3.485 3.667C19 16.396 17.402 18 15.515 18h-2.093a1 1 0 1 0 0 2h2.093C18.58 20 21 17.425 21 14.333c0-3.092-2.419-5.666-5.485-5.666H6.456l2.949-2.959Z\"\n    })\n  });\n}\n;\nReplyIcon.displayName = \"ReplyIcon\";\nexport default forwardRef(ReplyIcon);","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgEdit = function SvgEdit(props, ref) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 18 18\",\n    role: \"presentation\",\n    \"aria-hidden\": true,\n    ref: ref\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M3 14h12M5 10.5l7-7\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgEdit);\nexport { ForwardRef as Icon };\nexport default \"img/element-icons/room/message-bar/edit.940a38c.svg\";","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgEmoji = function SvgEmoji(props, ref) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    role: \"presentation\",\n    \"aria-hidden\": true,\n    ref: ref\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M20 1a1 1 0 0 0-1 1v2h-2a1 1 0 1 0 0 2h2v2a1 1 0 1 0 2 0V6h2a1 1 0 1 0 0-2h-2V2a1 1 0 0 0-1-1M7 9.5C7 8.67 7.67 8 8.5 8s1.5.67 1.5 1.5S9.33 11 8.5 11 7 10.33 7 9.5m8.5 1.5c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5M12 17.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5M4 12a8 8 0 0 1 9.774-7.803 1 1 0 1 0 .442-1.95A10 10 0 0 0 12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10q0-.318-.02-.632a1 1 0 1 0-1.996.125q.015.25.016.507a8 8 0 1 1-16 0\",\n    clipRule: \"evenodd\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgEmoji);\nexport { ForwardRef as Icon };\nexport default \"img/element-icons/room/message-bar/emoji.27bdbc0.svg\";","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgExpandMessage = function SvgExpandMessage(props, ref) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 11 14\",\n    role: \"presentation\",\n    \"aria-hidden\": true,\n    ref: ref\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M.22 8.494a.753.753 0 0 1 1.062-.002l3.724 3.7L8.718 8.48a.753.753 0 0 1 1.062-.002.747.747 0 0 1 .002 1.06L5.54 13.78a.753.753 0 0 1-1.063.002L.221 9.552a.747.747 0 0 1-.002-1.058m9.562-2.988a.753.753 0 0 1-1.062.002l-3.724-3.7L1.283 5.52a.753.753 0 0 1-1.062.002.747.747 0 0 1-.002-1.06L4.462.22A.753.753 0 0 1 5.524.218l4.257 4.23a.747.747 0 0 1 .001 1.058\",\n    clipRule: \"evenodd\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgExpandMessage);\nexport { ForwardRef as Icon };\nexport default \"img/element-icons/expand-message.b3c80a6.svg\";","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgCollapseMessage = function SvgCollapseMessage(props, ref) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 11 14\",\n    role: \"presentation\",\n    \"aria-hidden\": true,\n    ref: ref\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M.22.234A.753.753 0 0 1 1.281.232l3.724 3.7L8.718.22A.753.753 0 0 1 9.781.218a.747.747 0 0 1 .001 1.06L5.54 5.52a.753.753 0 0 1-1.063.002L.221 1.292A.747.747 0 0 1 .219.235m9.562 13.532a.753.753 0 0 1-1.062.002l-3.724-3.7-3.713 3.712a.753.753 0 0 1-1.062.002.747.747 0 0 1-.002-1.06L4.462 8.48a.753.753 0 0 1 1.062-.002l4.257 4.23a.747.747 0 0 1 .001 1.058\",\n    clipRule: \"evenodd\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgCollapseMessage);\nexport { ForwardRef as Icon };\nexport default \"img/element-icons/collapse-message.2764ac2.svg\";","/*\n * Copyright 2022 New Vector Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatrixEvent } from \"matrix-js-sdk/src/matrix\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { MediaEventHelper } from \"~tchap-web/src/utils/MediaEventHelper\";\nimport { FileDownloader } from \"~tchap-web/src/utils/FileDownloader\";\nimport { _t } from \"~tchap-web/src/languageHandler\";\nimport Spinner from \"~tchap-web/src/components/views/elements/Spinner\";\nimport { RovingAccessibleButton } from \"~tchap-web/src/accessibility/RovingTabIndex\";\nimport { DownloadIcon } from \"@vector-im/compound-design-tokens/assets/web/icons\";\n\nimport { Media } from \"../../../ContentScanningMedia\";\nimport { BlockedIcon } from \"../../../../components/views/elements/BlockedIcon\";\n\nenum DownloadState {\n    Pristine, // button not cliked, yet\n    Scanning, // scan or decryption in progess\n    Safe, // content scanner reported safe content\n    Untrusted, // content scanner reported untrusted content\n    Error, // content scanner error (unavailability etc.)\n}\n\ninterface IProps {\n    mxEvent: MatrixEvent;\n\n    // XXX: It can take a cycle or two for the MessageActionBar to have all the props/setup\n    // required to get us a MediaEventHelper, so we use a getter function instead to prod for\n    // one.\n    mediaEventHelperGet: () => MediaEventHelper;\n}\n\ninterface IState {\n    downloadState: DownloadState;\n    blob?: Blob;\n}\n\n/**\n * Replacement for the default download action button.\n * Displays content scanning status and prohibits downloading unsafe content.\n */\nexport default class ContentScanningDownloadActionButton extends React.PureComponent<IProps, IState> {\n    private downloader = new FileDownloader();\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            downloadState: DownloadState.Pristine,\n        };\n    }\n\n    private onDownloadClick = async () => {\n        if (this.state.downloadState === DownloadState.Scanning) {\n            return;\n        }\n\n        if (this.state.blob) {\n            // Cheat and trigger a download, again.\n            return this.doDownload();\n        }\n\n        this.setState({\n            downloadState: DownloadState.Scanning,\n        });\n\n        const media = this.props.mediaEventHelperGet().media as any as Media;\n        const safe = await Promise.all([media.scanSource(), media.scanThumbnail()])\n            .then(([ok1, ok2]) => {\n                const isSafe = ok1 && ok2;\n                this.setState({\n                    downloadState: isSafe ? DownloadState.Safe : DownloadState.Untrusted,\n                });\n                return isSafe;\n            })\n            .catch(() => {\n                this.setState({\n                    downloadState: DownloadState.Error,\n                });\n            });\n\n        if (!safe) {\n            // do not download unsafe content\n            return;\n        }\n\n        const blob = await this.props.mediaEventHelperGet().sourceBlob.value;\n        this.setState({ blob });\n        await this.doDownload();\n    };\n\n    private async doDownload() {\n        return this.downloader.download({\n            blob: this.state.blob,\n            name: this.props.mediaEventHelperGet().fileName,\n        });\n    }\n\n    public render() {\n        let icon: React.ReactElement;\n        let tooltip: string;\n        let hasSpinner = false;\n\n        switch (this.state.downloadState) {\n            case DownloadState.Pristine:\n            case DownloadState.Safe:\n                icon = <DownloadIcon />;\n                tooltip = _t(\"action|download\");\n                break;\n            case DownloadState.Scanning:\n                icon = this.renderSpinner();\n                hasSpinner = true;\n                tooltip = _t(\"Scanning\");\n                break;\n            case DownloadState.Untrusted:\n                icon = this.renderBlockedIcon();\n                tooltip = _t(\"Content blocked\");\n                break;\n            case DownloadState.Error:\n                icon = this.renderBlockedIcon();\n                tooltip = _t(\"Scan unavailable\");\n                break;\n        }\n\n        const classes = classNames({\n            mx_MessageActionBar_iconButton: true,\n            mx_MessageActionBar_downloadButton: true,\n            mx_MessageActionBar_downloadSpinnerButton: hasSpinner,\n        });\n\n        return (\n            <RovingAccessibleButton\n                className={classes}\n                title={tooltip}\n                onClick={this.onDownloadClick}\n                disabled={this.disabled}\n            >\n                {icon}\n            </RovingAccessibleButton>\n        );\n    }\n\n    private renderBlockedIcon(): JSX.Element {\n        return <BlockedIcon className=\"mx_BlockedIcon_messageContext\" />;\n    }\n\n    private renderSpinner(): JSX.Element {\n        return <Spinner w={18} h={18} />;\n    }\n\n    private get disabled(): boolean {\n        return [DownloadState.Scanning, DownloadState.Error, DownloadState.Untrusted].includes(\n            this.state.downloadState,\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2019-2023 The Matrix.org Foundation C.I.C.\nCopyright 2019 New Vector Ltd\nCopyright 2019 Michael Telatynski <7t3chguy@gmail.com>\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { ReactElement, useCallback, useContext, useEffect } from \"react\";\nimport {\n    EventStatus,\n    MatrixEvent,\n    MatrixEventEvent,\n    MsgType,\n    RelationType,\n    M_BEACON_INFO,\n    EventTimeline,\n    RoomStateEvent,\n    EventType,\n} from \"matrix-js-sdk/src/matrix\";\nimport classNames from \"classnames\";\nimport {\n    PinIcon,\n    UnpinIcon,\n    OverflowHorizontalIcon,\n    ReplyIcon,\n    DeleteIcon,\n    RestartIcon,\n    ThreadsIcon,\n} from \"@vector-im/compound-design-tokens/assets/web/icons\";\n\nimport { Icon as EditIcon } from \"../../../../res/img/element-icons/room/message-bar/edit.svg\";\nimport { Icon as EmojiIcon } from \"../../../../res/img/element-icons/room/message-bar/emoji.svg\";\nimport { Icon as ExpandMessageIcon } from \"../../../../res/img/element-icons/expand-message.svg\";\nimport { Icon as CollapseMessageIcon } from \"../../../../res/img/element-icons/collapse-message.svg\";\nimport type { Relations } from \"matrix-js-sdk/src/matrix\";\nimport { _t } from \"../../../languageHandler\";\nimport defaultDispatcher from \"../../../dispatcher/dispatcher\";\nimport ContextMenu, { aboveLeftOf, ContextMenuTooltipButton, useContextMenu } from \"../../structures/ContextMenu\";\nimport { isContentActionable, canEditContent, editEvent, canCancel } from \"../../../utils/EventUtils\";\nimport RoomContext, { TimelineRenderingType } from \"../../../contexts/RoomContext\";\nimport Toolbar from \"../../../accessibility/Toolbar\";\nimport { RovingAccessibleButton, useRovingTabIndex } from \"../../../accessibility/RovingTabIndex\";\nimport MessageContextMenu from \"../context_menus/MessageContextMenu\";\nimport Resend from \"../../../Resend\";\nimport { MatrixClientPeg } from \"../../../MatrixClientPeg\";\nimport { MediaEventHelper } from \"../../../utils/MediaEventHelper\";\nimport DownloadActionButton from \"./DownloadActionButton\";\nimport { RoomPermalinkCreator } from \"../../../utils/permalinks/Permalinks\";\nimport ReplyChain from \"../elements/ReplyChain\";\nimport ReactionPicker from \"../emojipicker/ReactionPicker\";\nimport { CardContext } from \"../right_panel/context\";\nimport { shouldDisplayReply } from \"../../../utils/Reply\";\nimport { Key } from \"../../../Keyboard\";\nimport { ALTERNATE_KEY_NAME } from \"../../../accessibility/KeyboardShortcuts\";\nimport { Action } from \"../../../dispatcher/actions\";\nimport { ShowThreadPayload } from \"../../../dispatcher/payloads/ShowThreadPayload\";\nimport { GetRelationsForEvent, IEventTileType } from \"../rooms/EventTile\";\nimport { ButtonEvent } from \"../elements/AccessibleButton\";\nimport TchapUIFeature from \"~tchap-web/src/tchap/util/TchapUIFeature\"; // :TCHAP: remove-thread-buttons\nimport PinningUtils from \"../../../utils/PinningUtils\";\nimport PosthogTrackers from \"../../../PosthogTrackers.ts\";\n\ninterface IOptionsButtonProps {\n    mxEvent: MatrixEvent;\n    getTile: () => IEventTileType | null;\n    getReplyChain: () => ReplyChain | null;\n    permalinkCreator?: RoomPermalinkCreator;\n    onFocusChange: (menuDisplayed: boolean) => void;\n    getRelationsForEvent?: GetRelationsForEvent;\n}\n\nconst OptionsButton: React.FC<IOptionsButtonProps> = ({\n    mxEvent,\n    getTile,\n    getReplyChain,\n    permalinkCreator,\n    onFocusChange,\n    getRelationsForEvent,\n}) => {\n    const [menuDisplayed, button, openMenu, closeMenu] = useContextMenu();\n    const [onFocus, isActive] = useRovingTabIndex(button);\n    useEffect(() => {\n        onFocusChange(menuDisplayed);\n    }, [onFocusChange, menuDisplayed]);\n\n    const onOptionsClick = useCallback(\n        (e: ButtonEvent): void => {\n            // Don't open the regular browser or our context menu on right-click\n            e.preventDefault();\n            e.stopPropagation();\n            openMenu();\n            // when the context menu is opened directly, e.g. via mouse click, the onFocus handler which tracks\n            // the element that is currently focused is skipped. So we want to call onFocus manually to keep the\n            // position in the page even when someone is clicking around.\n            onFocus();\n        },\n        [openMenu, onFocus],\n    );\n\n    let contextMenu: ReactElement | undefined;\n    if (menuDisplayed && button.current) {\n        const tile = getTile?.();\n        const replyChain = getReplyChain();\n\n        const buttonRect = button.current.getBoundingClientRect();\n        contextMenu = (\n            <MessageContextMenu\n                {...aboveLeftOf(buttonRect)}\n                mxEvent={mxEvent}\n                permalinkCreator={permalinkCreator}\n                eventTileOps={tile && tile.getEventTileOps ? tile.getEventTileOps() : undefined}\n                collapseReplyChain={replyChain?.canCollapse() ? replyChain.collapse : undefined}\n                onFinished={closeMenu}\n                getRelationsForEvent={getRelationsForEvent}\n            />\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <ContextMenuTooltipButton\n                className=\"mx_MessageActionBar_iconButton mx_MessageActionBar_optionsButton\"\n                title={_t(\"common|options\")}\n                onClick={onOptionsClick}\n                onContextMenu={onOptionsClick}\n                isExpanded={menuDisplayed}\n                ref={button}\n                onFocus={onFocus}\n                tabIndex={isActive ? 0 : -1}\n                placement=\"left\"\n            >\n                <OverflowHorizontalIcon />\n            </ContextMenuTooltipButton>\n            {contextMenu}\n        </React.Fragment>\n    );\n};\n\ninterface IReactButtonProps {\n    mxEvent: MatrixEvent;\n    reactions?: Relations | null | undefined;\n    onFocusChange: (menuDisplayed: boolean) => void;\n}\n\nconst ReactButton: React.FC<IReactButtonProps> = ({ mxEvent, reactions, onFocusChange }) => {\n    const [menuDisplayed, button, openMenu, closeMenu] = useContextMenu();\n    const [onFocus, isActive] = useRovingTabIndex(button);\n    useEffect(() => {\n        onFocusChange(menuDisplayed);\n    }, [onFocusChange, menuDisplayed]);\n\n    let contextMenu: JSX.Element | undefined;\n    if (menuDisplayed && button.current) {\n        const buttonRect = button.current.getBoundingClientRect();\n        contextMenu = (\n            <ContextMenu {...aboveLeftOf(buttonRect)} onFinished={closeMenu} managed={false}>\n                <ReactionPicker mxEvent={mxEvent} reactions={reactions} onFinished={closeMenu} />\n            </ContextMenu>\n        );\n    }\n\n    const onClick = useCallback(\n        (e: ButtonEvent) => {\n            // Don't open the regular browser or our context menu on right-click\n            e.preventDefault();\n            e.stopPropagation();\n\n            openMenu();\n            // when the context menu is opened directly, e.g. via mouse click, the onFocus handler which tracks\n            // the element that is currently focused is skipped. So we want to call onFocus manually to keep the\n            // position in the page even when someone is clicking around.\n            onFocus();\n        },\n        [openMenu, onFocus],\n    );\n\n    return (\n        <React.Fragment>\n            <ContextMenuTooltipButton\n                className=\"mx_MessageActionBar_iconButton\"\n                title={_t(\"action|react\")}\n                onClick={onClick}\n                onContextMenu={onClick}\n                isExpanded={menuDisplayed}\n                ref={button}\n                onFocus={onFocus}\n                tabIndex={isActive ? 0 : -1}\n                placement=\"left\"\n            >\n                <EmojiIcon />\n            </ContextMenuTooltipButton>\n\n            {contextMenu}\n        </React.Fragment>\n    );\n};\n\ninterface IReplyInThreadButton {\n    mxEvent: MatrixEvent;\n}\n\nconst ReplyInThreadButton: React.FC<IReplyInThreadButton> = ({ mxEvent }) => {\n    const context = useContext(CardContext);\n\n    const relationType = mxEvent?.getRelation()?.rel_type;\n    const hasARelation = !!relationType && relationType !== RelationType.Thread;\n\n    const onClick = (e: ButtonEvent): void => {\n        // Don't open the regular browser or our context menu on right-click\n        e.preventDefault();\n        e.stopPropagation();\n\n        const thread = mxEvent.getThread();\n        if (thread?.rootEvent && !mxEvent.isThreadRoot) {\n            defaultDispatcher.dispatch<ShowThreadPayload>({\n                action: Action.ShowThread,\n                rootEvent: thread.rootEvent,\n                initialEvent: mxEvent,\n                scroll_into_view: true,\n                highlighted: true,\n                push: context.isCard,\n            });\n        } else {\n            defaultDispatcher.dispatch<ShowThreadPayload>({\n                action: Action.ShowThread,\n                rootEvent: mxEvent,\n                push: context.isCard,\n            });\n        }\n    };\n\n    const title = !hasARelation ? _t(\"action|reply_in_thread\") : _t(\"threads|error_start_thread_existing_relation\");\n\n    return (\n        <RovingAccessibleButton\n            className=\"mx_MessageActionBar_iconButton mx_MessageActionBar_threadButton\"\n            disabled={hasARelation}\n            title={title}\n            onClick={onClick}\n            onContextMenu={onClick}\n            placement=\"left\"\n        >\n            <ThreadsIcon />\n        </RovingAccessibleButton>\n    );\n};\n\ninterface IMessageActionBarProps {\n    mxEvent: MatrixEvent;\n    reactions?: Relations | null | undefined;\n    getTile: () => IEventTileType | null;\n    getReplyChain: () => ReplyChain | null;\n    permalinkCreator?: RoomPermalinkCreator;\n    onFocusChange?: (menuDisplayed: boolean) => void;\n    toggleThreadExpanded: () => void;\n    isQuoteExpanded?: boolean;\n    getRelationsForEvent?: GetRelationsForEvent;\n}\n\nexport default class MessageActionBar extends React.PureComponent<IMessageActionBarProps> {\n    public static contextType = RoomContext;\n    declare public context: React.ContextType<typeof RoomContext>;\n\n    public componentDidMount(): void {\n        if (this.props.mxEvent.status && this.props.mxEvent.status !== EventStatus.SENT) {\n            this.props.mxEvent.on(MatrixEventEvent.Status, this.onSent);\n        }\n\n        const client = MatrixClientPeg.safeGet();\n        client.decryptEventIfNeeded(this.props.mxEvent);\n\n        if (this.props.mxEvent.isBeingDecrypted()) {\n            this.props.mxEvent.once(MatrixEventEvent.Decrypted, this.onDecrypted);\n        }\n        this.props.mxEvent.on(MatrixEventEvent.BeforeRedaction, this.onBeforeRedaction);\n        this.context.room\n            ?.getLiveTimeline()\n            .getState(EventTimeline.FORWARDS)\n            ?.on(RoomStateEvent.Events, this.onRoomEvent);\n    }\n\n    public componentWillUnmount(): void {\n        this.props.mxEvent.off(MatrixEventEvent.Status, this.onSent);\n        this.props.mxEvent.off(MatrixEventEvent.Decrypted, this.onDecrypted);\n        this.props.mxEvent.off(MatrixEventEvent.BeforeRedaction, this.onBeforeRedaction);\n        this.context.room\n            ?.getLiveTimeline()\n            .getState(EventTimeline.FORWARDS)\n            ?.off(RoomStateEvent.Events, this.onRoomEvent);\n    }\n\n    private onDecrypted = (): void => {\n        // When an event decrypts, it is likely to change the set of available\n        // actions, so we force an update to check again.\n        this.forceUpdate();\n    };\n\n    private onBeforeRedaction = (): void => {\n        // When an event is redacted, we can't edit it so update the available actions.\n        this.forceUpdate();\n    };\n\n    private onRoomEvent = (event?: MatrixEvent): void => {\n        // If the event is pinned or unpinned, rerender the component.\n        if (!event || event.getType() !== EventType.RoomPinnedEvents) return;\n        this.forceUpdate();\n    };\n\n    private onSent = (): void => {\n        // When an event is sent and echoed the possible actions change.\n        this.forceUpdate();\n    };\n\n    private onFocusChange = (focused: boolean): void => {\n        this.props.onFocusChange?.(focused);\n    };\n\n    private onReplyClick = (e: ButtonEvent): void => {\n        // Don't open the regular browser or our context menu on right-click\n        e.preventDefault();\n        e.stopPropagation();\n\n        defaultDispatcher.dispatch({\n            action: \"reply_to_event\",\n            event: this.props.mxEvent,\n            context: this.context.timelineRenderingType,\n        });\n    };\n\n    private onEditClick = (e: ButtonEvent): void => {\n        // Don't open the regular browser or our context menu on right-click\n        e.preventDefault();\n        e.stopPropagation();\n\n        editEvent(\n            MatrixClientPeg.safeGet(),\n            this.props.mxEvent,\n            this.context.timelineRenderingType,\n            this.props.getRelationsForEvent,\n        );\n    };\n\n    private readonly forbiddenThreadHeadMsgType = [MsgType.KeyVerificationRequest];\n\n    private get showReplyInThreadAction(): boolean {\n        const inNotThreadTimeline = this.context.timelineRenderingType !== TimelineRenderingType.Thread;\n\n        const isAllowedMessageType =\n            !this.forbiddenThreadHeadMsgType.includes(this.props.mxEvent.getContent().msgtype as MsgType) &&\n            /** forbid threads from live location shares\n             * until cross-platform support\n             * (PSF-1041)\n             */\n            !M_BEACON_INFO.matches(this.props.mxEvent.getType());\n\n        //:TCHAP: remove-thread-buttons - activate Thread based on homeserver feature flag\n        //return inNotThreadTimeline && isAllowedMessageType;\n        return TchapUIFeature.isFeatureActiveForHomeserver(\"feature_thread\") && inNotThreadTimeline && isAllowedMessageType;\n        //:TCHAP: end\n    }\n\n    /**\n     * Runs a given fn on the set of possible events to test. The first event\n     * that passes the checkFn will have fn executed on it. Both functions take\n     * a MatrixEvent object. If no particular conditions are needed, checkFn can\n     * be null/undefined. If no functions pass the checkFn, no action will be\n     * taken.\n     * @param {Function} fn The execution function.\n     * @param {Function} checkFn The test function.\n     */\n    private runActionOnFailedEv(fn: (ev: MatrixEvent) => void, checkFn?: (ev: MatrixEvent) => boolean): void {\n        if (!checkFn) checkFn = () => true;\n\n        const mxEvent = this.props.mxEvent;\n        const editEvent = mxEvent.replacingEvent();\n        const redactEvent = mxEvent.localRedactionEvent();\n        const tryOrder = [redactEvent, editEvent, mxEvent];\n        for (const ev of tryOrder) {\n            if (ev && checkFn(ev)) {\n                fn(ev);\n                break;\n            }\n        }\n    }\n\n    private onResendClick = (ev: ButtonEvent): void => {\n        // Don't open the regular browser or our context menu on right-click\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        this.runActionOnFailedEv((tarEv) => Resend.resend(MatrixClientPeg.safeGet(), tarEv));\n    };\n\n    private onCancelClick = (ev: ButtonEvent): void => {\n        this.runActionOnFailedEv(\n            (tarEv) => Resend.removeFromQueue(MatrixClientPeg.safeGet(), tarEv),\n            (testEv) => canCancel(testEv.status),\n        );\n    };\n\n    /**\n     * Pin or unpin the event.\n     */\n    private onPinClick = async (event: ButtonEvent, isPinned: boolean): Promise<void> => {\n        // Don't open the regular browser or our context menu on right-click\n        event.preventDefault();\n        event.stopPropagation();\n\n        await PinningUtils.pinOrUnpinEvent(MatrixClientPeg.safeGet(), this.props.mxEvent);\n        PosthogTrackers.trackPinUnpinMessage(isPinned ? \"Pin\" : \"Unpin\", \"Timeline\");\n    };\n\n    public render(): React.ReactNode {\n        const toolbarOpts: JSX.Element[] = [];\n        if (canEditContent(MatrixClientPeg.safeGet(), this.props.mxEvent)) {\n            toolbarOpts.push(\n                <RovingAccessibleButton\n                    className=\"mx_MessageActionBar_iconButton\"\n                    title={_t(\"action|edit\")}\n                    onClick={this.onEditClick}\n                    onContextMenu={this.onEditClick}\n                    key=\"edit\"\n                    placement=\"left\"\n                >\n                    <EditIcon />\n                </RovingAccessibleButton>,\n            );\n        }\n\n        if (\n            PinningUtils.canPin(MatrixClientPeg.safeGet(), this.props.mxEvent) ||\n            PinningUtils.canUnpin(MatrixClientPeg.safeGet(), this.props.mxEvent)\n        ) {\n            const isPinned = PinningUtils.isPinned(MatrixClientPeg.safeGet(), this.props.mxEvent);\n            toolbarOpts.push(\n                <RovingAccessibleButton\n                    className=\"mx_MessageActionBar_iconButton\"\n                    title={isPinned ? _t(\"action|unpin\") : _t(\"action|pin\")}\n                    onClick={(e: ButtonEvent) => this.onPinClick(e, isPinned)}\n                    onContextMenu={(e: ButtonEvent) => this.onPinClick(e, isPinned)}\n                    key=\"pin\"\n                    placement=\"left\"\n                >\n                    {isPinned ? <UnpinIcon /> : <PinIcon />}\n                </RovingAccessibleButton>,\n            );\n        }\n\n        const cancelSendingButton = (\n            <RovingAccessibleButton\n                className=\"mx_MessageActionBar_iconButton\"\n                title={_t(\"action|delete\")}\n                onClick={this.onCancelClick}\n                onContextMenu={this.onCancelClick}\n                key=\"cancel\"\n                placement=\"left\"\n            >\n                <DeleteIcon />\n            </RovingAccessibleButton>\n        );\n\n        const threadTooltipButton = <ReplyInThreadButton mxEvent={this.props.mxEvent} key=\"reply_thread\" />;\n\n        // We show a different toolbar for failed events, so detect that first.\n        const mxEvent = this.props.mxEvent;\n        const editStatus = mxEvent.replacingEvent()?.status;\n        const redactStatus = mxEvent.localRedactionEvent()?.status;\n        const allowCancel = canCancel(mxEvent.status) || canCancel(editStatus) || canCancel(redactStatus);\n        const isFailed = [mxEvent.status, editStatus, redactStatus].includes(EventStatus.NOT_SENT);\n        if (allowCancel && isFailed) {\n            // The resend button needs to appear ahead of the edit button, so insert to the\n            // start of the opts\n            toolbarOpts.splice(\n                0,\n                0,\n                <RovingAccessibleButton\n                    className=\"mx_MessageActionBar_iconButton mx_MessageActionBar_retryButton\"\n                    title={_t(\"action|retry\")}\n                    onClick={this.onResendClick}\n                    onContextMenu={this.onResendClick}\n                    key=\"resend\"\n                    placement=\"left\"\n                >\n                    <RestartIcon />\n                </RovingAccessibleButton>,\n            );\n\n            // The delete button should appear last, so we can just drop it at the end\n            toolbarOpts.push(cancelSendingButton);\n        } else {\n            if (isContentActionable(this.props.mxEvent)) {\n                // Like the resend button, the react and reply buttons need to appear before the edit.\n                // The only catch is we do the reply button first so that we can make sure the react\n                // button is the very first button without having to do length checks for `splice()`.\n\n                if (this.context.canSendMessages) {\n                    if (this.showReplyInThreadAction) {\n                        toolbarOpts.splice(0, 0, threadTooltipButton);\n                    }\n                    toolbarOpts.splice(\n                        0,\n                        0,\n                        <RovingAccessibleButton\n                            className=\"mx_MessageActionBar_iconButton\"\n                            title={_t(\"action|reply\")}\n                            onClick={this.onReplyClick}\n                            onContextMenu={this.onReplyClick}\n                            key=\"reply\"\n                            placement=\"left\"\n                        >\n                            <ReplyIcon />\n                        </RovingAccessibleButton>,\n                    );\n                }\n                // We hide the react button in search results as we don't show reactions in results\n                if (this.context.canReact && !this.context.search) {\n                    toolbarOpts.splice(\n                        0,\n                        0,\n                        <ReactButton\n                            mxEvent={this.props.mxEvent}\n                            reactions={this.props.reactions}\n                            onFocusChange={this.onFocusChange}\n                            key=\"react\"\n                        />,\n                    );\n                }\n\n                // XXX: Assuming that the underlying tile will be a media event if it is eligible media.\n                if (MediaEventHelper.isEligible(this.props.mxEvent)) {\n                    toolbarOpts.splice(\n                        0,\n                        0,\n                        <DownloadActionButton\n                            mxEvent={this.props.mxEvent}\n                            mediaEventHelperGet={() => this.props.getTile()?.getMediaHelper?.()}\n                            key=\"download\"\n                        />,\n                    );\n                }\n            } else if (\n                // Show thread icon even for deleted messages, but only within main timeline\n                this.context.timelineRenderingType === TimelineRenderingType.Room &&\n                this.props.mxEvent.getThread()\n            ) {\n                toolbarOpts.unshift(threadTooltipButton);\n            }\n\n            if (allowCancel) {\n                toolbarOpts.push(cancelSendingButton);\n            }\n\n            if (this.props.isQuoteExpanded !== undefined && shouldDisplayReply(this.props.mxEvent)) {\n                const expandClassName = classNames({\n                    mx_MessageActionBar_iconButton: true,\n                    mx_MessageActionBar_expandCollapseMessageButton: true,\n                });\n\n                toolbarOpts.push(\n                    <RovingAccessibleButton\n                        className={expandClassName}\n                        title={\n                            this.props.isQuoteExpanded\n                                ? _t(\"timeline|mab|collapse_reply_chain\")\n                                : _t(\"timeline|mab|expand_reply_chain\")\n                        }\n                        caption={_t(ALTERNATE_KEY_NAME[Key.SHIFT]) + \" + \" + _t(\"action|click\")}\n                        onClick={this.props.toggleThreadExpanded}\n                        key=\"expand\"\n                        placement=\"left\"\n                    >\n                        {this.props.isQuoteExpanded ? <CollapseMessageIcon /> : <ExpandMessageIcon />}\n                    </RovingAccessibleButton>,\n                );\n            }\n\n            // The menu button should be last, so dump it there.\n            toolbarOpts.push(\n                <OptionsButton\n                    mxEvent={this.props.mxEvent}\n                    getReplyChain={this.props.getReplyChain}\n                    getTile={this.props.getTile}\n                    permalinkCreator={this.props.permalinkCreator}\n                    onFocusChange={this.onFocusChange}\n                    key=\"menu\"\n                    getRelationsForEvent={this.props.getRelationsForEvent}\n                />,\n            );\n        }\n\n        // aria-live=off to not have this read out automatically as navigating around timeline, gets repetitive.\n        return (\n            <Toolbar className=\"mx_MessageActionBar\" aria-label={_t(\"timeline|mab|label\")} aria-live=\"off\">\n                {toolbarOpts}\n            </Toolbar>\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2019-2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { PropsWithChildren } from \"react\";\nimport { MatrixEvent } from \"matrix-js-sdk/src/matrix\";\nimport { Tooltip } from \"@vector-im/compound-web\";\n\nimport { unicodeToShortcode } from \"../../../HtmlUtils\";\nimport { _t } from \"../../../languageHandler\";\nimport { formatList } from \"../../../utils/FormattingUtils\";\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\nimport { REACTION_SHORTCODE_KEY } from \"./ReactionsRow\";\ninterface IProps {\n    // The event we're displaying reactions for\n    mxEvent: MatrixEvent;\n    // The reaction content / key / emoji\n    content: string;\n    // A list of Matrix reaction events for this key\n    reactionEvents: MatrixEvent[];\n    // Whether to render custom image reactions\n    customReactionImagesEnabled?: boolean;\n}\n\nexport default class ReactionsRowButtonTooltip extends React.PureComponent<PropsWithChildren<IProps>> {\n    public static contextType = MatrixClientContext;\n    declare public context: React.ContextType<typeof MatrixClientContext>;\n\n    public render(): React.ReactNode {\n        const { content, reactionEvents, mxEvent, children } = this.props;\n\n        const room = this.context.getRoom(mxEvent.getRoomId());\n        if (room) {\n            const senders: string[] = [];\n            let customReactionName: string | undefined;\n            for (const reactionEvent of reactionEvents) {\n                const member = room.getMember(reactionEvent.getSender()!);\n                const name = member?.name ?? reactionEvent.getSender()!;\n                senders.push(name);\n                customReactionName =\n                    (this.props.customReactionImagesEnabled &&\n                        REACTION_SHORTCODE_KEY.findIn(reactionEvent.getContent())) ||\n                    undefined;\n            }\n            const shortName = unicodeToShortcode(content) || customReactionName;\n            const formattedSenders = formatList(senders, 6);\n            const caption = shortName ? _t(\"timeline|reactions|tooltip_caption\", { shortName }) : undefined;\n\n            return (\n                <Tooltip description={formattedSenders} caption={caption} placement=\"right\">\n                    {children}\n                </Tooltip>\n            );\n        }\n\n        return children;\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2019-2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { EventType, MatrixEvent, RelationType } from \"matrix-js-sdk/src/matrix\";\n\nimport { mediaFromMxc } from \"../../../customisations/Media\";\nimport { _t } from \"../../../languageHandler\";\nimport { formatList } from \"../../../utils/FormattingUtils\";\nimport dis from \"../../../dispatcher/dispatcher\";\nimport ReactionsRowButtonTooltip from \"./ReactionsRowButtonTooltip\";\nimport AccessibleButton from \"../elements/AccessibleButton\";\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\nimport { REACTION_SHORTCODE_KEY } from \"./ReactionsRow\";\n\nexport interface IProps {\n    // The event we're displaying reactions for\n    mxEvent: MatrixEvent;\n    // The reaction content / key / emoji\n    content: string;\n    // The count of votes for this key\n    count: number;\n    // A list of Matrix reaction events for this key\n    reactionEvents: MatrixEvent[];\n    // A possible Matrix event if the current user has voted for this type\n    myReactionEvent?: MatrixEvent;\n    // Whether to prevent quick-reactions by clicking on this reaction\n    disabled?: boolean;\n    // Whether to render custom image reactions\n    customReactionImagesEnabled?: boolean;\n}\n\nexport default class ReactionsRowButton extends React.PureComponent<IProps> {\n    public static contextType = MatrixClientContext;\n    declare public context: React.ContextType<typeof MatrixClientContext>;\n\n    public onClick = (): void => {\n        const { mxEvent, myReactionEvent, content } = this.props;\n        if (myReactionEvent) {\n            this.context.redactEvent(mxEvent.getRoomId()!, myReactionEvent.getId()!);\n        } else {\n            this.context.sendEvent(mxEvent.getRoomId()!, EventType.Reaction, {\n                \"m.relates_to\": {\n                    rel_type: RelationType.Annotation,\n                    event_id: mxEvent.getId()!,\n                    key: content,\n                },\n            });\n            dis.dispatch({ action: \"message_sent\" });\n        }\n    };\n\n    public render(): React.ReactNode {\n        const { mxEvent, content, count, reactionEvents, myReactionEvent } = this.props;\n\n        const classes = classNames({\n            mx_ReactionsRowButton: true,\n            mx_ReactionsRowButton_selected: !!myReactionEvent,\n        });\n\n        const room = this.context.getRoom(mxEvent.getRoomId());\n        let label: string | undefined;\n        let customReactionName: string | undefined;\n        if (room) {\n            const senders: string[] = [];\n            for (const reactionEvent of reactionEvents) {\n                const member = room.getMember(reactionEvent.getSender()!);\n                senders.push(member?.name || reactionEvent.getSender()!);\n                customReactionName =\n                    (this.props.customReactionImagesEnabled &&\n                        REACTION_SHORTCODE_KEY.findIn(reactionEvent.getContent())) ||\n                    undefined;\n            }\n\n            const reactors = formatList(senders, 6);\n            if (content) {\n                label = _t(\"timeline|reactions|label\", {\n                    reactors,\n                    content: customReactionName || content,\n                });\n            } else {\n                label = reactors;\n            }\n        }\n\n        let reactionContent = (\n            <span className=\"mx_ReactionsRowButton_content\" aria-hidden=\"true\">\n                {content}\n            </span>\n        );\n        if (this.props.customReactionImagesEnabled && content.startsWith(\"mxc://\")) {\n            const imageSrc = mediaFromMxc(content).srcHttp;\n            if (imageSrc) {\n                reactionContent = (\n                    <img\n                        className=\"mx_ReactionsRowButton_content\"\n                        alt={customReactionName || _t(\"timeline|reactions|custom_reaction_fallback_label\")}\n                        src={imageSrc}\n                        width=\"16\"\n                        height=\"16\"\n                    />\n                );\n            }\n        }\n\n        return (\n            <ReactionsRowButtonTooltip\n                mxEvent={this.props.mxEvent}\n                content={content}\n                reactionEvents={reactionEvents}\n                customReactionImagesEnabled={this.props.customReactionImagesEnabled}\n            >\n                <AccessibleButton\n                    className={classes}\n                    aria-label={label}\n                    onClick={this.onClick}\n                    disabled={this.props.disabled}\n                >\n                    {reactionContent}\n                    <span className=\"mx_ReactionsRowButton_count\" aria-hidden=\"true\">\n                        {count}\n                    </span>\n                </AccessibleButton>\n            </ReactionsRowButtonTooltip>\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2019-2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { SyntheticEvent } from \"react\";\nimport classNames from \"classnames\";\nimport { MatrixEvent, MatrixEventEvent, Relations, RelationsEvent } from \"matrix-js-sdk/src/matrix\";\nimport { uniqBy } from \"lodash\";\nimport { UnstableValue } from \"matrix-js-sdk/src/NamespacedValue\";\n\nimport { _t } from \"../../../languageHandler\";\nimport { isContentActionable } from \"../../../utils/EventUtils\";\nimport { ContextMenuTooltipButton } from \"../../../accessibility/context_menu/ContextMenuTooltipButton\";\nimport ContextMenu, { aboveLeftOf, useContextMenu } from \"../../structures/ContextMenu\";\nimport ReactionPicker from \"../emojipicker/ReactionPicker\";\nimport ReactionsRowButton from \"./ReactionsRowButton\";\nimport RoomContext from \"../../../contexts/RoomContext\";\nimport AccessibleButton from \"../elements/AccessibleButton\";\nimport SettingsStore from \"../../../settings/SettingsStore\";\n\n// The maximum number of reactions to initially show on a message.\nconst MAX_ITEMS_WHEN_LIMITED = 8;\n\nexport const REACTION_SHORTCODE_KEY = new UnstableValue(\"shortcode\", \"com.beeper.reaction.shortcode\");\n\nconst ReactButton: React.FC<IProps> = ({ mxEvent, reactions }) => {\n    const [menuDisplayed, button, openMenu, closeMenu] = useContextMenu();\n\n    let contextMenu: JSX.Element | undefined;\n    if (menuDisplayed && button.current) {\n        const buttonRect = button.current.getBoundingClientRect();\n        contextMenu = (\n            <ContextMenu {...aboveLeftOf(buttonRect)} onFinished={closeMenu} managed={false}>\n                <ReactionPicker mxEvent={mxEvent} reactions={reactions} onFinished={closeMenu} />\n            </ContextMenu>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <ContextMenuTooltipButton\n                className={classNames(\"mx_ReactionsRow_addReactionButton\", {\n                    mx_ReactionsRow_addReactionButton_active: menuDisplayed,\n                })}\n                title={_t(\"timeline|reactions|add_reaction_prompt\")}\n                onClick={openMenu}\n                onContextMenu={(e: SyntheticEvent): void => {\n                    e.preventDefault();\n                    openMenu();\n                }}\n                isExpanded={menuDisplayed}\n                ref={button}\n            />\n\n            {contextMenu}\n        </React.Fragment>\n    );\n};\n\ninterface IProps {\n    // The event we're displaying reactions for\n    mxEvent: MatrixEvent;\n    // The Relations model from the JS SDK for reactions to `mxEvent`\n    reactions?: Relations | null | undefined;\n}\n\ninterface IState {\n    myReactions: MatrixEvent[] | null;\n    showAll: boolean;\n}\n\nexport default class ReactionsRow extends React.PureComponent<IProps, IState> {\n    public static contextType = RoomContext;\n    declare public context: React.ContextType<typeof RoomContext>;\n\n    public constructor(props: IProps, context: React.ContextType<typeof RoomContext>) {\n        super(props, context);\n\n        this.state = {\n            myReactions: this.getMyReactions(),\n            showAll: false,\n        };\n    }\n\n    public componentDidMount(): void {\n        const { mxEvent, reactions } = this.props;\n\n        if (mxEvent.isBeingDecrypted() || mxEvent.shouldAttemptDecryption()) {\n            mxEvent.once(MatrixEventEvent.Decrypted, this.onDecrypted);\n        }\n\n        if (reactions) {\n            reactions.on(RelationsEvent.Add, this.onReactionsChange);\n            reactions.on(RelationsEvent.Remove, this.onReactionsChange);\n            reactions.on(RelationsEvent.Redaction, this.onReactionsChange);\n        }\n    }\n\n    public componentWillUnmount(): void {\n        const { mxEvent, reactions } = this.props;\n\n        mxEvent.off(MatrixEventEvent.Decrypted, this.onDecrypted);\n\n        if (reactions) {\n            reactions.off(RelationsEvent.Add, this.onReactionsChange);\n            reactions.off(RelationsEvent.Remove, this.onReactionsChange);\n            reactions.off(RelationsEvent.Redaction, this.onReactionsChange);\n        }\n    }\n\n    public componentDidUpdate(prevProps: IProps): void {\n        if (this.props.reactions && prevProps.reactions !== this.props.reactions) {\n            this.props.reactions.on(RelationsEvent.Add, this.onReactionsChange);\n            this.props.reactions.on(RelationsEvent.Remove, this.onReactionsChange);\n            this.props.reactions.on(RelationsEvent.Redaction, this.onReactionsChange);\n            this.onReactionsChange();\n        }\n    }\n\n    private onDecrypted = (): void => {\n        // Decryption changes whether the event is actionable\n        this.forceUpdate();\n    };\n\n    private onReactionsChange = (): void => {\n        // TODO: Call `onHeightChanged` as needed\n        this.setState({\n            myReactions: this.getMyReactions(),\n        });\n        // Using `forceUpdate` for the moment, since we know the overall set of reactions\n        // has changed (this is triggered by events for that purpose only) and\n        // `PureComponent`s shallow state / props compare would otherwise filter this out.\n        this.forceUpdate();\n    };\n\n    private getMyReactions(): MatrixEvent[] | null {\n        const reactions = this.props.reactions;\n        if (!reactions) {\n            return null;\n        }\n        const userId = this.context.room?.client.getUserId();\n        if (!userId) return null;\n        const myReactions = reactions.getAnnotationsBySender()?.[userId];\n        if (!myReactions) {\n            return null;\n        }\n        return [...myReactions.values()];\n    }\n\n    private onShowAllClick = (): void => {\n        this.setState({\n            showAll: true,\n        });\n    };\n\n    public render(): React.ReactNode {\n        const { mxEvent, reactions } = this.props;\n        const { myReactions, showAll } = this.state;\n\n        if (!reactions || !isContentActionable(mxEvent)) {\n            return null;\n        }\n        const customReactionImagesEnabled = SettingsStore.getValue(\"feature_render_reaction_images\");\n\n        let items = reactions\n            .getSortedAnnotationsByKey()\n            ?.map(([content, events]) => {\n                const count = events.size;\n                if (!count) {\n                    return null;\n                }\n                // Deduplicate the events as per the spec https://spec.matrix.org/v1.7/client-server-api/#annotations-client-behaviour\n                // This isn't done by the underlying data model as applications may still need access to the whole list of events\n                // for moderation purposes.\n                const deduplicatedEvents = uniqBy([...events], (e) => e.getSender());\n                const myReactionEvent = myReactions?.find((mxEvent) => {\n                    if (mxEvent.isRedacted()) {\n                        return false;\n                    }\n                    return mxEvent.getRelation()?.key === content;\n                });\n                return (\n                    <ReactionsRowButton\n                        key={content}\n                        content={content}\n                        count={deduplicatedEvents.length}\n                        mxEvent={mxEvent}\n                        reactionEvents={deduplicatedEvents}\n                        myReactionEvent={myReactionEvent}\n                        customReactionImagesEnabled={customReactionImagesEnabled}\n                        disabled={\n                            !this.context.canReact ||\n                            (myReactionEvent && !myReactionEvent.isRedacted() && !this.context.canSelfRedact)\n                        }\n                    />\n                );\n            })\n            .filter((item) => !!item);\n\n        if (!items?.length) return null;\n\n        // Show the first MAX_ITEMS if there are MAX_ITEMS + 1 or more items.\n        // The \"+ 1\" ensure that the \"show all\" reveals something that takes up\n        // more space than the button itself.\n        let showAllButton: JSX.Element | undefined;\n        if (items.length > MAX_ITEMS_WHEN_LIMITED + 1 && !showAll) {\n            items = items.slice(0, MAX_ITEMS_WHEN_LIMITED);\n            showAllButton = (\n                <AccessibleButton kind=\"link_inline\" className=\"mx_ReactionsRow_showAll\" onClick={this.onShowAllClick}>\n                    {_t(\"action|show_all\")}\n                </AccessibleButton>\n            );\n        }\n\n        let addReactionButton: JSX.Element | undefined;\n        if (this.context.canReact) {\n            addReactionButton = <ReactButton mxEvent={mxEvent} reactions={reactions} />;\n        }\n\n        return (\n            <div className=\"mx_ReactionsRow\" role=\"toolbar\" aria-label={_t(\"common|reactions\")}>\n                {items}\n                {showAllButton}\n                {addReactionButton}\n            </div>\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020-2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport { MatrixEvent } from \"matrix-js-sdk/src/matrix\";\n\nimport { _t } from \"../../../languageHandler\";\nimport Modal from \"../../../Modal\";\nimport SdkConfig from \"../../../SdkConfig\";\nimport BugReportDialog from \"../dialogs/BugReportDialog\";\nimport AccessibleButton from \"../elements/AccessibleButton\";\nimport SettingsStore from \"../../../settings/SettingsStore\";\nimport ViewSource from \"../../structures/ViewSource\";\nimport { Layout } from \"../../../settings/enums/Layout\";\n\ninterface IProps {\n    mxEvent: MatrixEvent;\n    layout: Layout;\n    children: ReactNode;\n}\n\ninterface IState {\n    error?: Error;\n}\n\nexport default class TileErrorBoundary extends React.Component<IProps, IState> {\n    public constructor(props: IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    public static getDerivedStateFromError(error: Error): Partial<IState> {\n        // Side effects are not permitted here, so we only update the state so\n        // that the next render shows an error message.\n        return { error };\n    }\n\n    private onBugReport = (): void => {\n        Modal.createDialog(BugReportDialog, {\n            label: \"react-soft-crash-tile\",\n            error: this.state.error,\n        });\n    };\n\n    private onViewSource = (): void => {\n        Modal.createDialog(\n            ViewSource,\n            {\n                mxEvent: this.props.mxEvent,\n            },\n            \"mx_Dialog_viewsource\",\n        );\n    };\n\n    public render(): ReactNode {\n        if (this.state.error) {\n            const { mxEvent } = this.props;\n            const classes = {\n                mx_EventTile: true,\n                mx_EventTile_info: true,\n                mx_EventTile_content: true,\n                mx_EventTile_tileError: true,\n            };\n\n            let submitLogsButton;\n            if (SdkConfig.get().bug_report_endpoint_url) {\n                submitLogsButton = (\n                    <>\n                        &nbsp;\n                        <AccessibleButton kind=\"link\" onClick={this.onBugReport}>\n                            {_t(\"bug_reporting|submit_debug_logs\")}\n                        </AccessibleButton>\n                    </>\n                );\n            }\n\n            let viewSourceButton;\n            if (mxEvent && SettingsStore.getValue(\"developerMode\")) {\n                viewSourceButton = (\n                    <>\n                        &nbsp;\n                        <AccessibleButton onClick={this.onViewSource} kind=\"link\">\n                            {_t(\"action|view_source\")}\n                        </AccessibleButton>\n                    </>\n                );\n            }\n\n            return (\n                <li className={classNames(classes)} data-layout={this.props.layout}>\n                    <div className=\"mx_EventTile_line\">\n                        <span>\n                            {_t(\"timeline|error_rendering_message\")}\n                            {mxEvent && ` (${mxEvent.getType()})`}\n                            {submitLogsButton}\n                            {viewSourceButton}\n                        </span>\n                    </div>\n                </li>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { useContext } from \"react\";\nimport { Thread, ThreadEvent, MatrixEvent } from \"matrix-js-sdk/src/matrix\";\nimport { IndicatorIcon } from \"@vector-im/compound-web\";\nimport ThreadIconSolid from \"@vector-im/compound-design-tokens/assets/web/icons/threads-solid\";\n\nimport { _t } from \"../../../languageHandler\";\nimport { CardContext } from \"../right_panel/context\";\nimport AccessibleButton, { ButtonEvent } from \"../elements/AccessibleButton\";\nimport PosthogTrackers from \"../../../PosthogTrackers\";\nimport { useTypedEventEmitterState } from \"../../../hooks/useEventEmitter\";\nimport MemberAvatar from \"../avatars/MemberAvatar\";\nimport { Action } from \"../../../dispatcher/actions\";\nimport { ShowThreadPayload } from \"../../../dispatcher/payloads/ShowThreadPayload\";\nimport defaultDispatcher from \"../../../dispatcher/dispatcher\";\nimport { useUnreadNotifications } from \"../../../hooks/useUnreadNotifications\";\nimport { notificationLevelToIndicator } from \"../../../utils/notifications\";\nimport { EventPreviewTile, useEventPreview } from \"./EventPreview.tsx\";\nimport ExternalLink from \"../elements/ExternalLink\"; // :TCHAP: better-text-for-locked-messages\nimport TchapUrls from \"~tchap-web/src/tchap/util/TchapUrls\"; // :TCHAP: better-text-for-locked-messages\nimport { useScopedRoomContext } from \"../../../contexts/ScopedRoomContext.tsx\";\n\ninterface IProps {\n    mxEvent: MatrixEvent;\n    thread: Thread;\n}\n\nconst ThreadSummary: React.FC<IProps> = ({ mxEvent, thread, ...props }) => {\n    const roomContext = useScopedRoomContext(\"narrow\");\n    const cardContext = useContext(CardContext);\n    const count = useTypedEventEmitterState(thread, ThreadEvent.Update, () => thread.length);\n    const { level } = useUnreadNotifications(thread.room, thread.id);\n\n    if (!count) return null; // We don't want to show a thread summary if the thread doesn't have replies yet\n\n    let countSection: string | number = count;\n    if (!roomContext.narrow) {\n        countSection = _t(\"threads|count_of_reply\", { count });\n    }\n\n    return (\n        <AccessibleButton\n            {...props}\n            className=\"mx_ThreadSummary\"\n            onClick={(ev: ButtonEvent) => {\n                defaultDispatcher.dispatch<ShowThreadPayload>({\n                    action: Action.ShowThread,\n                    rootEvent: mxEvent,\n                    push: cardContext.isCard,\n                });\n                PosthogTrackers.trackInteraction(\"WebRoomTimelineThreadSummaryButton\", ev);\n            }}\n            aria-label={_t(\"threads|open_thread\")}\n        >\n            <IndicatorIcon size=\"24px\" indicator={notificationLevelToIndicator(level)}>\n                <ThreadIconSolid />\n            </IndicatorIcon>\n            <span className=\"mx_ThreadSummary_replies_amount\">{countSection}</span>\n            <ThreadMessagePreview thread={thread} showDisplayname={!roomContext.narrow} />\n            <div className=\"mx_ThreadSummary_chevron\" />\n        </AccessibleButton>\n    );\n};\n\ninterface IPreviewProps {\n    thread: Thread;\n    showDisplayname?: boolean;\n}\n\nexport const ThreadMessagePreview: React.FC<IPreviewProps> = ({ thread, showDisplayname = false }) => {\n    const lastReply = useTypedEventEmitterState(thread, ThreadEvent.Update, () => thread.replyToEvent) ?? undefined;\n    const preview = useEventPreview(lastReply);\n\n    if (!preview || !lastReply) {\n        return null;\n    }\n\n    return (\n        <>\n            <MemberAvatar\n                member={lastReply.sender}\n                fallbackUserId={lastReply.getSender()}\n                size=\"24px\"\n                className=\"mx_ThreadSummary_avatar\"\n            />\n            {showDisplayname && (\n                <div className=\"mx_ThreadSummary_sender\">{lastReply.sender?.name ?? lastReply.getSender()}</div>\n            )}\n\n            {lastReply.isDecryptionFailure() ? (\n                <div\n                    className=\"mx_ThreadSummary_content mx_DecryptionFailureBody\"\n                    title={_t(\"timeline|decryption_failure|unable_to_decrypt\")}\n                >\n                    { /* :TCHAP: better-text-for-locked-messages - <span className=\"mx_ThreadSummary_message-preview\">{_t(\"threads|unable_to_decrypt\")}</span>*/}\n                    <span className=\"mx_ThreadSummary_message-preview\">\n                        {_t(\"threads|unable_to_decrypt_with_info_message\", {},\n                            {\n                                a: (sub) => (\n                                    <ExternalLink href={TchapUrls.lockedMessagesPage}>\n                                        {sub}\n                                    </ExternalLink>\n                                ),\n                            },\n                        )}\n                    </span>\n                    {/** end :TCHAP: */}\n\n                </div>\n            ) : (\n                <EventPreviewTile preview={preview} className=\"mx_ThreadSummary_content\" />\n            )}\n        </>\n    );\n};\n\nexport default ThreadSummary;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { Key, MutableRefObject, ReactElement, RefCallback } from \"react\";\n\ninterface IChildProps {\n    style: React.CSSProperties;\n    ref: RefCallback<HTMLElement>;\n}\n\ninterface IProps {\n    // either a list of child nodes, or a single child.\n    children: React.ReactNode;\n\n    // a list of state objects to apply to each child node in turn\n    startStyles: React.CSSProperties[];\n\n    innerRef?: MutableRefObject<any>;\n}\n\nfunction isReactElement(c: ReturnType<(typeof React.Children)[\"toArray\"]>[number]): c is ReactElement {\n    return typeof c === \"object\" && \"type\" in c;\n}\n\n/**\n * The NodeAnimator contains components and animates transitions.\n * It will only pick up direct changes to properties ('left', currently), and so\n * will not work for animating positional changes where the position is implicit\n * from DOM order. This makes it a lot simpler and lighter: if you need fully\n * automatic positional animation, look at react-shuffle or similar libraries.\n */\nexport default class NodeAnimator extends React.Component<IProps> {\n    private nodes: Record<string, HTMLElement> = {};\n    private children: { [key: string]: ReactElement } = {};\n    public static defaultProps: Partial<IProps> = {\n        startStyles: [],\n    };\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.updateChildren(this.props.children);\n    }\n\n    public componentDidUpdate(): void {\n        this.updateChildren(this.props.children);\n    }\n\n    /**\n     *\n     * @param {HTMLElement} node element to apply styles to\n     * @param {React.CSSProperties} styles a key/value pair of CSS properties\n     * @returns {void}\n     */\n    private applyStyles(node: HTMLElement, styles: React.CSSProperties): void {\n        Object.entries(styles).forEach(([property, value]) => {\n            node.style[property as keyof Omit<CSSStyleDeclaration, \"length\" | \"parentRule\">] = value;\n        });\n    }\n\n    private updateChildren(newChildren: React.ReactNode): void {\n        const oldChildren = this.children || {};\n        this.children = {};\n        React.Children.toArray(newChildren).forEach((c) => {\n            if (!isReactElement(c)) return;\n            if (oldChildren[c.key!]) {\n                const old = oldChildren[c.key!];\n                const oldNode = this.nodes[old.key!];\n\n                if (oldNode && oldNode.style.left !== c.props.style.left) {\n                    this.applyStyles(oldNode, { left: c.props.style.left });\n                }\n                // clone the old element with the props (and children) of the new element\n                // so prop updates are still received by the children.\n                this.children[c.key!] = React.cloneElement(old, c.props, c.props.children);\n            } else {\n                // new element. If we have a startStyle, use that as the style and go through\n                // the enter animations\n                const newProps: Partial<IChildProps> = {};\n                const restingStyle = c.props.style;\n\n                const startStyles = this.props.startStyles;\n                if (startStyles.length > 0) {\n                    const startStyle = startStyles[0];\n                    newProps.style = startStyle;\n                }\n\n                newProps.ref = (n) => this.collectNode(c.key!, n, restingStyle);\n\n                this.children[c.key!] = React.cloneElement(c, newProps);\n            }\n        });\n    }\n\n    private collectNode(k: Key, domNode: HTMLElement | null, restingStyle: React.CSSProperties): void {\n        const key = typeof k === \"bigint\" ? Number(k) : k;\n        if (domNode && this.nodes[key] === undefined && this.props.startStyles.length > 0) {\n            const startStyles = this.props.startStyles;\n            // start from startStyle 1: 0 is the one we gave it\n            // to start with, so now we animate 1 etc.\n            for (let i = 1; i < startStyles.length; ++i) {\n                this.applyStyles(domNode, startStyles[i]);\n            }\n\n            // and then we animate to the resting state\n            window.setTimeout(() => {\n                this.applyStyles(domNode, restingStyle);\n            }, 0);\n        }\n        if (domNode) {\n            this.nodes[key] = domNode;\n        } else {\n            delete this.nodes[key];\n        }\n\n        if (this.props.innerRef) {\n            this.props.innerRef.current = domNode;\n        }\n    }\n\n    public render(): React.ReactNode {\n        return <>{Object.values(this.children)}</>;\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2019 The Matrix.org Foundation C.I.C.\nCopyright 2016 OpenMarket Ltd\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { createRef } from \"react\";\nimport { RoomMember } from \"matrix-js-sdk/src/matrix\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport NodeAnimator from \"../../../NodeAnimator\";\nimport { toPx } from \"../../../utils/units\";\nimport MemberAvatar from \"../avatars/MemberAvatar\";\nimport { READ_AVATAR_SIZE } from \"./ReadReceiptGroup\";\n\n// The top & right from the bounding client rect of each read receipt\nexport interface IReadReceiptPosition {\n    top?: number;\n    right?: number;\n}\n\ninterface IProps {\n    // the RoomMember to show the RR for\n    member?: RoomMember | null;\n    // userId to fallback the avatar to\n    // if the member hasn't been loaded yet\n    fallbackUserId: string;\n\n    // number of pixels to offset the avatar from the right of its parent;\n    // typically a negative value.\n    offset: number;\n\n    // true to hide the avatar (it will still be animated)\n    hidden?: boolean;\n\n    // don't animate this RR into position\n    suppressAnimation?: boolean;\n\n    // an opaque object for storing information about this user's RR in this room\n    readReceiptPosition?: IReadReceiptPosition;\n\n    // A function which is used to check if the parent panel is being\n    // unmounted, to avoid unnecessary work. Should return true if we\n    // are being unmounted.\n    checkUnmounting?: () => boolean;\n\n    // Timestamp when the receipt was read\n    timestamp?: number;\n\n    // True to show twelve hour format, false otherwise\n    showTwelveHour?: boolean;\n}\n\ninterface IState {\n    suppressDisplay: boolean;\n    startStyles?: IReadReceiptMarkerStyle[];\n}\n\ninterface IReadReceiptMarkerStyle {\n    top: number;\n    right: number;\n}\n\nexport default class ReadReceiptMarker extends React.PureComponent<IProps, IState> {\n    private avatar = createRef<HTMLDivElement>();\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            // if we are going to animate the RR, we don't show it on first render,\n            // and instead just add a placeholder to the DOM; once we've been\n            // mounted, we start an animation which moves the RR from its old\n            // position.\n            suppressDisplay: !this.props.suppressAnimation,\n        };\n    }\n\n    public componentWillUnmount(): void {\n        // before we remove the rr, store its location in the map, so that if\n        // it reappears, it can be animated from the right place.\n        const rrInfo = this.props.readReceiptPosition;\n        if (!rrInfo) {\n            return;\n        }\n\n        // checking the DOM properties can force a re-layout, which can be\n        // quite expensive; so if the parent messagepanel is being unmounted,\n        // then don't bother with this.\n        if (this.props.checkUnmounting && this.props.checkUnmounting()) {\n            return;\n        }\n\n        this.buildReadReceiptInfo(rrInfo);\n    }\n\n    public componentDidMount(): void {\n        if (!this.state.suppressDisplay) {\n            // we've already done our display - nothing more to do.\n            return;\n        }\n        this.animateMarker();\n    }\n\n    public componentDidUpdate(prevProps: IProps): void {\n        const differentOffset = prevProps.offset !== this.props.offset;\n        const visibilityChanged = prevProps.hidden !== this.props.hidden;\n        if (differentOffset || visibilityChanged) {\n            this.animateMarker();\n        }\n    }\n\n    private buildReadReceiptInfo(target: IReadReceiptPosition = {}): IReadReceiptPosition {\n        const element = this.avatar.current;\n        // this is the mx_ReadReceiptsGroup_container\n        const horizontalContainer = element?.offsetParent;\n        if (!horizontalContainer || !horizontalContainer.getBoundingClientRect) {\n            // this seems to happen sometimes for reasons I don't understand\n            // the docs for `offsetParent` say it may be null if `display` is\n            // `none`, but I can't see why that would happen.\n            logger.warn(`ReadReceiptMarker for ${this.props.fallbackUserId} has no valid horizontalContainer`);\n\n            target.top = 0;\n            target.right = 0;\n            return target;\n        }\n\n        const elementRect = element.getBoundingClientRect();\n\n        target.top = elementRect.top;\n        target.right = elementRect.right - horizontalContainer.getBoundingClientRect().right;\n        return target;\n    }\n\n    private animateMarker(): void {\n        const oldInfo = this.props.readReceiptPosition;\n        const newInfo = this.buildReadReceiptInfo();\n\n        const newPosition = newInfo.top ?? 0;\n        const oldPosition =\n            oldInfo && oldInfo.top !== undefined\n                ? // start at the old height and in the old h pos\n                  oldInfo.top\n                : // treat new RRs as though they were off the top of the screen\n                  -READ_AVATAR_SIZE;\n\n        const startStyles: IReadReceiptMarkerStyle[] = [];\n        if (oldInfo?.right) {\n            startStyles.push({\n                top: oldPosition - newPosition,\n                right: oldInfo.right,\n            });\n        }\n        startStyles.push({\n            top: oldPosition - newPosition,\n            right: 0,\n        });\n\n        this.setState({\n            suppressDisplay: false,\n            startStyles,\n        });\n    }\n\n    public render(): React.ReactNode {\n        if (this.state.suppressDisplay) {\n            return <div ref={this.avatar} />;\n        }\n\n        const style = {\n            right: toPx(this.props.offset),\n            top: \"0px\",\n        };\n\n        return (\n            <NodeAnimator startStyles={this.state.startStyles} innerRef={this.avatar}>\n                <MemberAvatar\n                    member={this.props.member ?? null}\n                    fallbackUserId={this.props.fallbackUserId}\n                    aria-hidden=\"true\"\n                    aria-live=\"off\"\n                    size=\"14px\"\n                    style={style}\n                    hideTitle\n                    tabIndex={-1}\n                />\n            </NodeAnimator>\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { PropsWithChildren } from \"react\";\nimport { User } from \"matrix-js-sdk/src/matrix\";\nimport { Tooltip } from \"@vector-im/compound-web\";\n\nimport ReadReceiptMarker, { IReadReceiptPosition } from \"./ReadReceiptMarker\";\nimport { IReadReceiptProps } from \"./EventTile\";\nimport AccessibleButton from \"../elements/AccessibleButton\";\nimport MemberAvatar from \"../avatars/MemberAvatar\";\nimport AutoHideScrollbar from \"../../structures/AutoHideScrollbar\";\nimport { formatDate } from \"../../../DateUtils\";\nimport { Action } from \"../../../dispatcher/actions\";\nimport dis from \"../../../dispatcher/dispatcher\";\nimport ContextMenu, { aboveLeftOf, MenuItem, useContextMenu } from \"../../structures/ContextMenu\";\nimport { _t } from \"../../../languageHandler\";\nimport { useRovingTabIndex } from \"../../../accessibility/RovingTabIndex\";\nimport { formatList } from \"../../../utils/FormattingUtils\";\n\n// #20547 Design specified that we should show the three latest read receipts\nconst MAX_READ_AVATARS_PLUS_N = 3;\n// #21935 If we’ve got just 4, don’t show +1, just show all of them\nconst MAX_READ_AVATARS = MAX_READ_AVATARS_PLUS_N + 1;\n\nconst READ_AVATAR_OFFSET = 10;\nexport const READ_AVATAR_SIZE = 16;\n\ninterface Props {\n    readReceipts: IReadReceiptProps[];\n    readReceiptMap: { [userId: string]: IReadReceiptPosition };\n    checkUnmounting?: () => boolean;\n    suppressAnimation: boolean;\n    isTwelveHour?: boolean;\n}\n\ninterface IAvatarPosition {\n    hidden: boolean;\n    position: number;\n}\n\nexport function determineAvatarPosition(index: number, max: number): IAvatarPosition {\n    if (index < max) {\n        return {\n            hidden: false,\n            position: index,\n        };\n    } else {\n        return {\n            hidden: true,\n            position: 0,\n        };\n    }\n}\n\nexport function readReceiptTooltip(members: string[], maxAvatars: number): string | undefined {\n    return formatList(members, maxAvatars);\n}\n\nexport function ReadReceiptGroup({\n    readReceipts,\n    readReceiptMap,\n    checkUnmounting,\n    suppressAnimation,\n    isTwelveHour,\n}: Props): JSX.Element {\n    const [menuDisplayed, button, openMenu, closeMenu] = useContextMenu();\n\n    // If we are above MAX_READ_AVATARS, we’ll have to remove a few to have space for the +n count.\n    const hasMore = readReceipts.length > MAX_READ_AVATARS;\n    const maxAvatars = hasMore ? MAX_READ_AVATARS_PLUS_N : MAX_READ_AVATARS;\n\n    const tooltipMembers: string[] = readReceipts.map((it) => it.roomMember?.name ?? it.userId);\n    const tooltipText = readReceiptTooltip(tooltipMembers, maxAvatars);\n\n    // return early if there are no read receipts\n    if (readReceipts.length === 0) {\n        // We currently must include `mx_ReadReceiptGroup_container` in\n        // the DOM of all events, as it is the positioned parent of the\n        // animated read receipts. We can't let it unmount when a receipt\n        // moves events, so for now we mount it for all events. Without\n        // it, the animation will start from the top of the timeline\n        // (because it lost its container).\n        // See also https://github.com/vector-im/element-web/issues/17561\n        return (\n            <div className=\"mx_EventTile_msgOption\">\n                <div className=\"mx_ReadReceiptGroup\">\n                    <div className=\"mx_ReadReceiptGroup_button\">\n                        <span className=\"mx_ReadReceiptGroup_container\" />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    const avatars = readReceipts\n        .map((receipt, index) => {\n            const { hidden, position } = determineAvatarPosition(index, maxAvatars);\n\n            const userId = receipt.userId;\n            let readReceiptPosition: IReadReceiptPosition | undefined;\n\n            if (readReceiptMap) {\n                readReceiptPosition = readReceiptMap[userId];\n                if (!readReceiptPosition) {\n                    readReceiptPosition = {};\n                    readReceiptMap[userId] = readReceiptPosition;\n                }\n            }\n\n            return (\n                <ReadReceiptMarker\n                    key={userId}\n                    member={receipt.roomMember}\n                    fallbackUserId={userId}\n                    offset={position * READ_AVATAR_OFFSET}\n                    hidden={hidden}\n                    readReceiptPosition={readReceiptPosition}\n                    checkUnmounting={checkUnmounting}\n                    suppressAnimation={suppressAnimation}\n                    timestamp={receipt.ts}\n                    showTwelveHour={isTwelveHour}\n                />\n            );\n        })\n        .reverse();\n\n    let remText: JSX.Element | undefined;\n    const remainder = readReceipts.length - maxAvatars;\n    if (remainder > 0) {\n        remText = (\n            <span className=\"mx_ReadReceiptGroup_remainder\" aria-live=\"off\">\n                +{remainder}\n            </span>\n        );\n    }\n\n    let contextMenu: JSX.Element | undefined;\n    if (menuDisplayed && button.current) {\n        const buttonRect = button.current.getBoundingClientRect();\n        contextMenu = (\n            <ContextMenu menuClassName=\"mx_ReadReceiptGroup_popup\" onFinished={closeMenu} {...aboveLeftOf(buttonRect)}>\n                <AutoHideScrollbar>\n                    <SectionHeader className=\"mx_ReadReceiptGroup_title\">\n                        {_t(\"timeline|read_receipt_title\", { count: readReceipts.length })}\n                    </SectionHeader>\n                    {readReceipts.map((receipt) => (\n                        <ReadReceiptPerson\n                            key={receipt.userId}\n                            {...receipt}\n                            isTwelveHour={isTwelveHour}\n                            onAfterClick={closeMenu}\n                        />\n                    ))}\n                </AutoHideScrollbar>\n            </ContextMenu>\n        );\n    }\n\n    return (\n        <div className=\"mx_EventTile_msgOption\">\n            <Tooltip\n                label={_t(\"timeline|read_receipt_title\", { count: readReceipts.length })}\n                caption={tooltipText}\n                placement=\"top-end\"\n            >\n                <div className=\"mx_ReadReceiptGroup\" role=\"group\" aria-label={_t(\"timeline|read_receipts_label\")}>\n                    <AccessibleButton\n                        className=\"mx_ReadReceiptGroup_button\"\n                        ref={button}\n                        aria-label={tooltipText}\n                        aria-haspopup=\"true\"\n                        onClick={openMenu}\n                    >\n                        {remText}\n                        <span\n                            className=\"mx_ReadReceiptGroup_container\"\n                            style={{\n                                width:\n                                    Math.min(maxAvatars, readReceipts.length) * READ_AVATAR_OFFSET +\n                                    READ_AVATAR_SIZE -\n                                    READ_AVATAR_OFFSET,\n                            }}\n                        >\n                            {avatars}\n                        </span>\n                    </AccessibleButton>\n                    {contextMenu}\n                </div>\n            </Tooltip>\n        </div>\n    );\n}\n\ninterface ReadReceiptPersonProps extends IReadReceiptProps {\n    isTwelveHour?: boolean;\n    onAfterClick?: () => void;\n}\n\n// Export for testing\nexport function ReadReceiptPerson({\n    userId,\n    roomMember,\n    ts,\n    isTwelveHour,\n    onAfterClick,\n}: ReadReceiptPersonProps): JSX.Element {\n    return (\n        <Tooltip description={roomMember?.rawDisplayName ?? userId} caption={userId} placement=\"top\">\n            <div>\n                <MenuItem\n                    className=\"mx_ReadReceiptGroup_person\"\n                    onClick={() => {\n                        dis.dispatch({\n                            action: Action.ViewUser,\n                            // XXX: We should be using a real member object and not assuming what the receiver wants.\n                            // The ViewUser action leads to the RightPanelStore, and RightPanelStoreIPanelState defines the\n                            // member property of IRightPanelCardState as `RoomMember | User`, so we’re fine for now, but we\n                            // should definitely clean this up later\n                            member: roomMember ?? ({ userId } as User),\n                            push: false,\n                        });\n                        onAfterClick?.();\n                    }}\n                >\n                    <MemberAvatar\n                        member={roomMember}\n                        fallbackUserId={userId}\n                        size=\"24px\"\n                        aria-hidden=\"true\"\n                        aria-live=\"off\"\n                        resizeMethod=\"crop\"\n                        hideTitle\n                    />\n                    <div className=\"mx_ReadReceiptGroup_name\">\n                        <p>{roomMember?.name ?? userId}</p>\n                        <p className=\"mx_ReadReceiptGroup_secondary\">{formatDate(new Date(ts), isTwelveHour)}</p>\n                    </div>\n                </MenuItem>\n            </div>\n        </Tooltip>\n    );\n}\n\ninterface ISectionHeaderProps {\n    className?: string;\n}\n\nfunction SectionHeader({ className, children }: PropsWithChildren<ISectionHeaderProps>): JSX.Element {\n    const [onFocus, , ref] = useRovingTabIndex<HTMLHeadingElement>();\n\n    return (\n        <h3 className={className} role=\"menuitem\" onFocus={onFocus} tabIndex={-1} ref={ref}>\n            {children}\n        </h3>\n    );\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { Room } from \"matrix-js-sdk/src/matrix\";\nimport React from \"react\";\n\nimport { useUnreadNotifications } from \"../../../../hooks/useUnreadNotifications\";\nimport { StatelessNotificationBadge } from \"./StatelessNotificationBadge\";\n\ninterface Props {\n    room?: Room;\n    threadId?: string;\n    /**\n     * If true, where we would normally show a badge, we instead show a dot. No numeric count will\n     * be displayed.\n     */\n    forceDot?: boolean;\n}\n\nexport function UnreadNotificationBadge({ room, threadId, forceDot }: Props): JSX.Element {\n    const { symbol, count, level } = useUnreadNotifications(room, threadId);\n\n    return <StatelessNotificationBadge symbol={symbol} count={count} level={level} forceDot={forceDot} />;\n}\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgViewInRoom = function SvgViewInRoom(props, ref) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 16 16\",\n    role: \"presentation\",\n    \"aria-hidden\": true,\n    ref: ref\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M1 2.75A.75.75 0 0 1 1.75 2h.005a.75.75 0 0 1 0 1.5H1.75A.75.75 0 0 1 1 2.75m2.495 0a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 0 1.5h-.01a.75.75 0 0 1-.75-.75m2.5 0a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 0 1.5h-.01a.75.75 0 0 1-.75-.75m2.5 0a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 0 1.5h-.01a.75.75 0 0 1-.75-.75m2.5 0a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 0 1.5h-.01a.75.75 0 0 1-.75-.75m2.5 0a.75.75 0 0 1 .75-.75h.005a.75.75 0 0 1 0 1.5h-.005a.75.75 0 0 1-.75-.75M1 6.75A.75.75 0 0 1 1.75 6h8.5a.75.75 0 0 1 0 1.5h-8.5A.75.75 0 0 1 1 6.75m0 3A.75.75 0 0 1 1.75 9h4.5a.75.75 0 0 1 0 1.5h-4.5A.75.75 0 0 1 1 9.75m0 4a.75.75 0 0 1 .75-.75h.005a.75.75 0 0 1 0 1.5H1.75a.75.75 0 0 1-.75-.75m2.495 0a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 0 1.5h-.01a.75.75 0 0 1-.75-.75m2.5 0a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 0 1.5h-.01a.75.75 0 0 1-.75-.75m2.5 0a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 0 1.5h-.01a.75.75 0 0 1-.75-.75m2.5 0a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 0 1.5h-.01a.75.75 0 0 1-.75-.75m2.5 0a.75.75 0 0 1 .75-.75h.005a.75.75 0 0 1 0 1.5h-.005a.75.75 0 0 1-.75-.75\",\n    clipRule: \"evenodd\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgViewInRoom);\nexport { ForwardRef as Icon };\nexport default \"img/element-icons/view-in-room.afeddb7.svg\";","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\nimport LinkIcon from \"@vector-im/compound-design-tokens/assets/web/icons/link\";\n\nimport { RovingAccessibleButton } from \"../../../../accessibility/RovingTabIndex\";\nimport Toolbar from \"../../../../accessibility/Toolbar\";\nimport { _t } from \"../../../../languageHandler\";\nimport { Icon as ViewInRoomIcon } from \"../../../../../res/img/element-icons/view-in-room.svg\";\nimport { ButtonEvent } from \"../../elements/AccessibleButton\";\n\nexport function EventTileThreadToolbar({\n    viewInRoom,\n    copyLinkToThread,\n}: {\n    viewInRoom: (evt: ButtonEvent) => void;\n    copyLinkToThread: (evt: ButtonEvent) => void;\n}): JSX.Element {\n    return (\n        <Toolbar className=\"mx_MessageActionBar\" aria-label={_t(\"timeline|mab|label\")} aria-live=\"off\">\n            <RovingAccessibleButton\n                className=\"mx_MessageActionBar_iconButton\"\n                onClick={viewInRoom}\n                title={_t(\"timeline|mab|view_in_room\")}\n                key=\"view_in_room\"\n            >\n                <ViewInRoomIcon />\n            </RovingAccessibleButton>\n            <RovingAccessibleButton\n                className=\"mx_MessageActionBar_iconButton\"\n                onClick={copyLinkToThread}\n                title={_t(\"timeline|mab|copy_link_thread\")}\n                key=\"copy_link_to_thread\"\n            >\n                <LinkIcon />\n            </RovingAccessibleButton>\n        </Toolbar>\n    );\n}\n","/*\n * Copyright 2024 New Vector Ltd.\n *\n * SPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\n * Please see LICENSE files in the repository root for full details.\n *\n */\n\nimport React, { JSX } from \"react\";\nimport PinIcon from \"@vector-im/compound-design-tokens/assets/web/icons/pin-solid\";\n\nimport { _t } from \"../../../languageHandler\";\n\n/**\n * A badge to indicate that a message is pinned.\n */\nexport function PinnedMessageBadge(): JSX.Element {\n    return (\n        <div className=\"mx_PinnedMessageBadge\">\n            <PinIcon width=\"16px\" height=\"16px\" />\n            {_t(\"room|pinned_message_badge\")}\n        </div>\n    );\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2015-2023 The Matrix.org Foundation C.I.C.\nCopyright 2019 Michael Telatynski <7t3chguy@gmail.com>\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { createRef, forwardRef, JSX, MouseEvent, ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport {\n    EventStatus,\n    EventType,\n    MatrixEvent,\n    MatrixEventEvent,\n    MsgType,\n    NotificationCountType,\n    Relations,\n    RelationType,\n    Room,\n    RoomEvent,\n    RoomMember,\n    Thread,\n    ThreadEvent,\n} from \"matrix-js-sdk/src/matrix\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\nimport { CallErrorCode } from \"matrix-js-sdk/src/webrtc/call\";\nimport {\n    CryptoEvent,\n    DecryptionFailureCode,\n    EventShieldColour,\n    EventShieldReason,\n    UserVerificationStatus,\n} from \"matrix-js-sdk/src/crypto-api\";\nimport { Tooltip } from \"@vector-im/compound-web\";\n\nimport ReplyChain from \"../elements/ReplyChain\";\nimport { _t } from \"../../../languageHandler\";\nimport dis from \"../../../dispatcher/dispatcher\";\nimport { Layout } from \"../../../settings/enums/Layout\";\nimport { formatTime } from \"../../../DateUtils\";\nimport { MatrixClientPeg } from \"../../../MatrixClientPeg\";\nimport { DecryptionFailureBody } from \"../messages/DecryptionFailureBody\";\nimport RoomAvatar from \"../avatars/RoomAvatar\";\nimport MessageContextMenu from \"../context_menus/MessageContextMenu\";\nimport { aboveRightOf } from \"../../structures/ContextMenu\";\nimport { objectHasDiff } from \"../../../utils/objects\";\nimport EditorStateTransfer from \"../../../utils/EditorStateTransfer\";\nimport { RoomPermalinkCreator } from \"../../../utils/permalinks/Permalinks\";\nimport { StaticNotificationState } from \"../../../stores/notifications/StaticNotificationState\";\nimport NotificationBadge from \"./NotificationBadge\";\nimport LegacyCallEventGrouper from \"../../structures/LegacyCallEventGrouper\";\nimport { ComposerInsertPayload } from \"../../../dispatcher/payloads/ComposerInsertPayload\";\nimport { Action } from \"../../../dispatcher/actions\";\nimport PlatformPeg from \"../../../PlatformPeg\";\nimport MemberAvatar from \"../avatars/MemberAvatar\";\nimport SenderProfile from \"../messages/SenderProfile\";\nimport MessageTimestamp from \"../messages/MessageTimestamp\";\nimport { IReadReceiptPosition } from \"./ReadReceiptMarker\";\nimport MessageActionBar from \"../messages/MessageActionBar\";\nimport ReactionsRow from \"../messages/ReactionsRow\";\nimport { getEventDisplayInfo } from \"../../../utils/EventRenderingUtils\";\nimport RoomContext, { TimelineRenderingType } from \"../../../contexts/RoomContext\";\nimport { MediaEventHelper } from \"../../../utils/MediaEventHelper\";\nimport { ButtonEvent } from \"../elements/AccessibleButton\";\nimport { copyPlaintext, getSelectedText } from \"../../../utils/strings\";\nimport { DecryptionFailureTracker } from \"../../../DecryptionFailureTracker\";\nimport RedactedBody from \"../messages/RedactedBody\";\nimport { ViewRoomPayload } from \"../../../dispatcher/payloads/ViewRoomPayload\";\nimport { shouldDisplayReply } from \"../../../utils/Reply\";\nimport PosthogTrackers from \"../../../PosthogTrackers\";\nimport TileErrorBoundary from \"../messages/TileErrorBoundary\";\nimport { haveRendererForEvent, isMessageEvent, renderTile } from \"../../../events/EventTileFactory\";\nimport ThreadSummary, { ThreadMessagePreview } from \"./ThreadSummary\";\nimport { ReadReceiptGroup } from \"./ReadReceiptGroup\";\nimport { ShowThreadPayload } from \"../../../dispatcher/payloads/ShowThreadPayload\";\nimport { isLocalRoom } from \"../../../utils/localRoom/isLocalRoom\";\nimport { ElementCall } from \"../../../models/Call\";\nimport { UnreadNotificationBadge } from \"./NotificationBadge/UnreadNotificationBadge\";\nimport { EventTileThreadToolbar } from \"./EventTile/EventTileThreadToolbar\";\nimport { getLateEventInfo } from \"../../structures/grouper/LateEventGrouper\";\nimport PinningUtils from \"../../../utils/PinningUtils\";\nimport { PinnedMessageBadge } from \"../messages/PinnedMessageBadge\";\nimport { EventPreview } from \"./EventPreview\";\n\nexport type GetRelationsForEvent = (\n    eventId: string,\n    relationType: RelationType | string,\n    eventType: EventType | string,\n) => Relations | null | undefined;\n\n// Our component structure for EventTiles on the timeline is:\n//\n// .-EventTile------------------------------------------------.\n// | MemberAvatar (SenderProfile)                   TimeStamp |\n// |    .-{Message,Textual}Event---------------. Read Avatars |\n// |    |   .-MFooBody-------------------.     |              |\n// |    |   |  (only if MessageEvent)    |     |              |\n// |    |   '----------------------------'     |              |\n// |    '--------------------------------------'              |\n// '----------------------------------------------------------'\n\nexport interface IReadReceiptProps {\n    userId: string;\n    roomMember: RoomMember | null;\n    ts: number;\n}\n\nexport interface IEventTileOps {\n    isWidgetHidden(): boolean;\n    unhideWidget(): void;\n}\n\nexport interface IEventTileType extends React.Component {\n    getEventTileOps?(): IEventTileOps;\n    getMediaHelper(): MediaEventHelper | undefined;\n}\n\nexport interface EventTileProps {\n    // the MatrixEvent to show\n    mxEvent: MatrixEvent;\n\n    // true if mxEvent is redacted. This is a prop because using mxEvent.isRedacted()\n    // might not be enough when deciding shouldComponentUpdate - prevProps.mxEvent\n    // references the same this.props.mxEvent.\n    isRedacted?: boolean;\n\n    // true if this is a continuation of the previous event (which has the\n    // effect of not showing another avatar/displayname\n    continuation?: boolean;\n\n    // true if this is the last event in the timeline (which has the effect\n    // of always showing the timestamp)\n    last?: boolean;\n\n    // true if the event is the last event in a section (adds a css class for\n    // targeting)\n    lastInSection?: boolean;\n\n    // True if the event is the last successful (sent) event.\n    lastSuccessful?: boolean;\n\n    // true if this is search context (which has the effect of greying out\n    // the text\n    contextual?: boolean;\n\n    // a list of words to highlight, ordered by longest first\n    highlights?: string[];\n\n    // link URL for the highlights\n    highlightLink?: string;\n\n    // should show URL previews for this event\n    showUrlPreview?: boolean;\n\n    // is this the focused event\n    isSelectedEvent?: boolean;\n\n    // callback called when dynamic content in events are loaded\n    onHeightChanged?: () => void;\n\n    // a list of read-receipts we should show. Each object has a 'roomMember' and 'ts'.\n    readReceipts?: IReadReceiptProps[];\n\n    // opaque readreceipt info for each userId; used by ReadReceiptMarker\n    // to manage its animations. Should be an empty object when the room\n    // first loads\n    readReceiptMap?: { [userId: string]: IReadReceiptPosition };\n\n    // A function which is used to check if the parent panel is being\n    // unmounted, to avoid unnecessary work. Should return true if we\n    // are being unmounted.\n    checkUnmounting?: () => boolean;\n\n    // the status of this event - ie, mxEvent.status. Denormalised to here so\n    // that we can tell when it changes.\n    eventSendStatus?: string;\n\n    forExport?: boolean;\n\n    // show twelve hour timestamps\n    isTwelveHour?: boolean;\n\n    // helper function to access relations for this event\n    getRelationsForEvent?: GetRelationsForEvent;\n\n    // whether to show reactions for this event\n    showReactions?: boolean;\n\n    // which layout to use\n    layout?: Layout;\n\n    // whether or not to show read receipts\n    showReadReceipts?: boolean;\n\n    // Used while editing, to pass the event, and to preserve editor state\n    // from one editor instance to another when remounting the editor\n    // upon receiving the remote echo for an unsent event.\n    editState?: EditorStateTransfer;\n\n    // Event ID of the event replacing the content of this event, if any\n    replacingEventId?: string;\n\n    // Helper to build permalinks for the room\n    permalinkCreator?: RoomPermalinkCreator;\n\n    // LegacyCallEventGrouper for this event\n    callEventGrouper?: LegacyCallEventGrouper;\n\n    // Symbol of the root node\n    as?: string;\n\n    // whether or not to always show timestamps\n    alwaysShowTimestamps?: boolean;\n\n    // whether or not to display the sender\n    hideSender?: boolean;\n\n    // whether or not to display thread info\n    showThreadInfo?: boolean;\n\n    // if specified and `true`, the message is being\n    // hidden for moderation from other users but is\n    // displayed to the current user either because they're\n    // the author or they are a moderator\n    isSeeingThroughMessageHiddenForModeration?: boolean;\n\n    // The following properties are used by EventTilePreview to disable tab indexes within the event tile\n    hideTimestamp?: boolean;\n    inhibitInteraction?: boolean;\n}\n\ninterface IState {\n    // Whether the action bar is focused.\n    actionBarFocused: boolean;\n\n    /**\n     * E2EE shield we should show for decryption problems.\n     *\n     * Note this will be `EventShieldColour.NONE` for all unencrypted events, **including those in encrypted rooms**.\n     */\n    shieldColour: EventShieldColour;\n\n    /**\n     * Reason code for the E2EE shield. `null` if `shieldColour` is `EventShieldColour.NONE`\n     */\n    shieldReason: EventShieldReason | null;\n\n    // The Relations model from the JS SDK for reactions to `mxEvent`\n    reactions?: Relations | null | undefined;\n\n    hover: boolean;\n\n    // Position of the context menu\n    contextMenu?: {\n        position: Pick<DOMRect, \"top\" | \"left\" | \"bottom\">;\n        link?: string;\n    };\n\n    isQuoteExpanded?: boolean;\n\n    thread: Thread | null;\n    threadNotification?: NotificationCountType;\n}\n\n/**\n * When true, the tile qualifies for some sort of special read receipt.\n * This could be a 'sending' or 'sent' receipt, for example.\n * @returns {boolean}\n */\nexport function isEligibleForSpecialReceipt(event: MatrixEvent): boolean {\n    // Determine if the type is relevant to the user.\n    // This notably excludes state events and pretty much anything that can't be sent by the composer as a message.\n    // For those we rely on local echo giving the impression of things changing, and expect them to be quick.\n    if (!isMessageEvent(event) && event.getType() !== EventType.RoomMessageEncrypted) return false;\n\n    // Default case\n    return true;\n}\n\n// MUST be rendered within a RoomContext with a set timelineRenderingType\nexport class UnwrappedEventTile extends React.Component<EventTileProps, IState> {\n    private suppressReadReceiptAnimation: boolean;\n    private isListeningForReceipts: boolean;\n    private tile = createRef<IEventTileType>();\n    private replyChain = createRef<ReplyChain>();\n\n    public readonly ref = createRef<HTMLElement>();\n\n    public static defaultProps = {\n        // no-op function because onHeightChanged is optional yet some sub-components assume its existence\n        onHeightChanged: function () {},\n        forExport: false,\n        layout: Layout.Group,\n    };\n\n    public static contextType = RoomContext;\n    declare public context: React.ContextType<typeof RoomContext>;\n\n    private unmounted = false;\n\n    public constructor(props: EventTileProps, context: React.ContextType<typeof RoomContext>) {\n        super(props, context);\n\n        const thread = this.thread;\n\n        this.state = {\n            // Whether the action bar is focused.\n            actionBarFocused: false,\n\n            shieldColour: EventShieldColour.NONE,\n            shieldReason: null,\n\n            // The Relations model from the JS SDK for reactions to `mxEvent`\n            reactions: this.getReactions(),\n\n            hover: false,\n\n            thread,\n        };\n\n        // don't do RR animations until we are mounted\n        this.suppressReadReceiptAnimation = true;\n\n        // Throughout the component we manage a read receipt listener to see if our tile still\n        // qualifies for a \"sent\" or \"sending\" state (based on their relevant conditions). We\n        // don't want to over-subscribe to the read receipt events being fired, so we use a flag\n        // to determine if we've already subscribed and use a combination of other flags to find\n        // out if we should even be subscribed at all.\n        this.isListeningForReceipts = false;\n    }\n\n    /**\n     * When true, the tile qualifies for some sort of special read receipt. This could be a 'sending'\n     * or 'sent' receipt, for example.\n     * @returns {boolean}\n     */\n    private get isEligibleForSpecialReceipt(): boolean {\n        // First, if there are other read receipts then just short-circuit this.\n        if (this.props.readReceipts && this.props.readReceipts.length > 0) return false;\n        if (!this.props.mxEvent) return false;\n\n        // Sanity check (should never happen, but we shouldn't explode if it does)\n        const room = MatrixClientPeg.safeGet().getRoom(this.props.mxEvent.getRoomId());\n        if (!room) return false;\n\n        // Quickly check to see if the event was sent by us. If it wasn't, it won't qualify for\n        // special read receipts.\n        const myUserId = MatrixClientPeg.safeGet().getSafeUserId();\n        // Check to see if the event was sent by us. If it wasn't, it won't qualify for special read receipts.\n        if (this.props.mxEvent.getSender() !== myUserId) return false;\n        return isEligibleForSpecialReceipt(this.props.mxEvent);\n    }\n\n    private get shouldShowSentReceipt(): boolean {\n        // If we're not even eligible, don't show the receipt.\n        if (!this.isEligibleForSpecialReceipt) return false;\n\n        // We only show the 'sent' receipt on the last successful event.\n        if (!this.props.lastSuccessful) return false;\n\n        // Check to make sure the sending state is appropriate. A null/undefined send status means\n        // that the message is 'sent', so we're just double checking that it's explicitly not sent.\n        if (this.props.eventSendStatus && this.props.eventSendStatus !== EventStatus.SENT) return false;\n\n        // If anyone has read the event besides us, we don't want to show a sent receipt.\n        const receipts = this.props.readReceipts || [];\n        const myUserId = MatrixClientPeg.safeGet().getUserId();\n        if (receipts.some((r) => r.userId !== myUserId)) return false;\n\n        // Finally, we should show a receipt.\n        return true;\n    }\n\n    private get shouldShowSendingReceipt(): boolean {\n        // If we're not even eligible, don't show the receipt.\n        if (!this.isEligibleForSpecialReceipt) return false;\n\n        // Check the event send status to see if we are pending. Null/undefined status means the\n        // message was sent, so check for that and 'sent' explicitly.\n        if (!this.props.eventSendStatus || this.props.eventSendStatus === EventStatus.SENT) return false;\n\n        // Default to showing - there's no other event properties/behaviours we care about at\n        // this point.\n        return true;\n    }\n\n    public componentDidMount(): void {\n        this.unmounted = false;\n        this.suppressReadReceiptAnimation = false;\n        const client = MatrixClientPeg.safeGet();\n        if (!this.props.forExport) {\n            client.on(CryptoEvent.UserTrustStatusChanged, this.onUserVerificationChanged);\n            this.props.mxEvent.on(MatrixEventEvent.Decrypted, this.onDecrypted);\n            this.props.mxEvent.on(MatrixEventEvent.Replaced, this.onReplaced);\n            DecryptionFailureTracker.instance.addVisibleEvent(this.props.mxEvent);\n            if (this.props.showReactions) {\n                this.props.mxEvent.on(MatrixEventEvent.RelationsCreated, this.onReactionsCreated);\n            }\n\n            if (this.shouldShowSentReceipt || this.shouldShowSendingReceipt) {\n                client.on(RoomEvent.Receipt, this.onRoomReceipt);\n                this.isListeningForReceipts = true;\n            }\n        }\n\n        this.props.mxEvent.on(ThreadEvent.Update, this.updateThread);\n\n        client.decryptEventIfNeeded(this.props.mxEvent);\n\n        const room = client.getRoom(this.props.mxEvent.getRoomId());\n        room?.on(ThreadEvent.New, this.onNewThread);\n\n        this.verifyEvent();\n    }\n\n    private updateThread = (thread: Thread): void => {\n        this.setState({ thread });\n    };\n\n    public shouldComponentUpdate(nextProps: EventTileProps, nextState: IState): boolean {\n        if (objectHasDiff(this.state, nextState)) {\n            return true;\n        }\n\n        return !this.propsEqual(this.props, nextProps);\n    }\n\n    public componentWillUnmount(): void {\n        const client = MatrixClientPeg.get();\n        if (client) {\n            client.removeListener(CryptoEvent.UserTrustStatusChanged, this.onUserVerificationChanged);\n            client.removeListener(RoomEvent.Receipt, this.onRoomReceipt);\n            const room = client.getRoom(this.props.mxEvent.getRoomId());\n            room?.off(ThreadEvent.New, this.onNewThread);\n        }\n        this.isListeningForReceipts = false;\n        this.props.mxEvent.removeListener(MatrixEventEvent.Decrypted, this.onDecrypted);\n        this.props.mxEvent.removeListener(MatrixEventEvent.Replaced, this.onReplaced);\n        if (this.props.showReactions) {\n            this.props.mxEvent.removeListener(MatrixEventEvent.RelationsCreated, this.onReactionsCreated);\n        }\n        this.props.mxEvent.off(ThreadEvent.Update, this.updateThread);\n        this.unmounted = false;\n    }\n\n    public componentDidUpdate(prevProps: Readonly<EventTileProps>, prevState: Readonly<IState>): void {\n        // If the shield state changed, the height might have changed.\n        // XXX: does the shield *actually* cause a change in height? Not sure.\n        if (prevState.shieldColour !== this.state.shieldColour && this.props.onHeightChanged) {\n            this.props.onHeightChanged();\n        }\n        // If we're not listening for receipts and expect to be, register a listener.\n        if (!this.isListeningForReceipts && (this.shouldShowSentReceipt || this.shouldShowSendingReceipt)) {\n            MatrixClientPeg.safeGet().on(RoomEvent.Receipt, this.onRoomReceipt);\n            this.isListeningForReceipts = true;\n        }\n        // re-check the sender verification as outgoing events progress through the send process.\n        if (prevProps.eventSendStatus !== this.props.eventSendStatus) {\n            this.verifyEvent();\n        }\n    }\n\n    private onNewThread = (thread: Thread): void => {\n        if (thread.id === this.props.mxEvent.getId()) {\n            this.updateThread(thread);\n            const room = MatrixClientPeg.safeGet().getRoom(this.props.mxEvent.getRoomId());\n            room?.off(ThreadEvent.New, this.onNewThread);\n        }\n    };\n\n    private get thread(): Thread | null {\n        let thread: Thread | undefined = this.props.mxEvent.getThread();\n        /**\n         * Accessing the threads value through the room due to a race condition\n         * that will be solved when there are proper backend support for threads\n         * We currently have no reliable way to discover than an event is a thread\n         * when we are at the sync stage\n         */\n        if (!thread) {\n            const room = MatrixClientPeg.safeGet().getRoom(this.props.mxEvent.getRoomId());\n            thread = room?.findThreadForEvent(this.props.mxEvent) ?? undefined;\n        }\n        return thread ?? null;\n    }\n\n    private renderThreadPanelSummary(): JSX.Element | null {\n        if (!this.state.thread) {\n            return null;\n        }\n\n        return (\n            <div className=\"mx_ThreadPanel_replies\">\n                <span className=\"mx_ThreadPanel_replies_amount\">{this.state.thread.length}</span>\n                <ThreadMessagePreview thread={this.state.thread} />\n            </div>\n        );\n    }\n\n    private renderThreadInfo(): React.ReactNode {\n        if (this.state.thread && this.state.thread.id === this.props.mxEvent.getId()) {\n            return (\n                <ThreadSummary mxEvent={this.props.mxEvent} thread={this.state.thread} data-testid=\"thread-summary\" />\n            );\n        }\n\n        if (this.context.timelineRenderingType === TimelineRenderingType.Search && this.props.mxEvent.threadRootId) {\n            if (this.props.highlightLink) {\n                return (\n                    <a className=\"mx_ThreadSummary_icon\" href={this.props.highlightLink}>\n                        {_t(\"timeline|thread_info_basic\")}\n                    </a>\n                );\n            }\n\n            return <p className=\"mx_ThreadSummary_icon\">{_t(\"timeline|thread_info_basic\")}</p>;\n        }\n    }\n\n    private viewInRoom = (evt: ButtonEvent): void => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        dis.dispatch<ViewRoomPayload>({\n            action: Action.ViewRoom,\n            event_id: this.props.mxEvent.getId(),\n            highlighted: true,\n            room_id: this.props.mxEvent.getRoomId(),\n            metricsTrigger: undefined, // room doesn't change\n        });\n    };\n\n    private copyLinkToThread = async (evt: ButtonEvent): Promise<void> => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        const { permalinkCreator, mxEvent } = this.props;\n        if (!permalinkCreator) return;\n        const matrixToUrl = permalinkCreator.forEvent(mxEvent.getId()!);\n        await copyPlaintext(matrixToUrl);\n    };\n\n    private onRoomReceipt = (ev: MatrixEvent, room: Room): void => {\n        // ignore events for other rooms\n        const tileRoom = MatrixClientPeg.safeGet().getRoom(this.props.mxEvent.getRoomId());\n        if (room !== tileRoom) return;\n\n        if (!this.shouldShowSentReceipt && !this.shouldShowSendingReceipt && !this.isListeningForReceipts) {\n            return;\n        }\n\n        // We force update because we have no state or prop changes to queue up, instead relying on\n        // the getters we use here to determine what needs rendering.\n        this.forceUpdate(() => {\n            // Per elsewhere in this file, we can remove the listener once we will have no further purpose for it.\n            if (!this.shouldShowSentReceipt && !this.shouldShowSendingReceipt) {\n                MatrixClientPeg.safeGet().removeListener(RoomEvent.Receipt, this.onRoomReceipt);\n                this.isListeningForReceipts = false;\n            }\n        });\n    };\n\n    /** called when the event is decrypted after we show it.\n     */\n    private onDecrypted = (): void => {\n        // we need to re-verify the sending device.\n        this.verifyEvent();\n        // decryption might, of course, trigger a height change, so call onHeightChanged after the re-render\n        this.forceUpdate(this.props.onHeightChanged);\n    };\n\n    private onUserVerificationChanged = (userId: string, _trustStatus: UserVerificationStatus): void => {\n        if (userId === this.props.mxEvent.getSender()) {\n            this.verifyEvent();\n        }\n    };\n\n    /** called when the event is edited after we show it. */\n    private onReplaced = (): void => {\n        // re-verify the event if it is replaced (the edit may not be verified)\n        this.verifyEvent();\n    };\n\n    private verifyEvent(): void {\n        this.doVerifyEvent().catch((e) => {\n            const event = this.props.mxEvent;\n            logger.error(`Error getting encryption info on event ${event.getId()} in room ${event.getRoomId()}`, e);\n        });\n    }\n\n    private async doVerifyEvent(): Promise<void> {\n        // if the event was edited, show the verification info for the edit, not\n        // the original\n        const mxEvent = this.props.mxEvent.replacingEvent() ?? this.props.mxEvent;\n\n        if (!mxEvent.isEncrypted() || mxEvent.isRedacted()) {\n            this.setState({ shieldColour: EventShieldColour.NONE, shieldReason: null });\n            return;\n        }\n\n        const encryptionInfo =\n            (await MatrixClientPeg.safeGet().getCrypto()?.getEncryptionInfoForEvent(mxEvent)) ?? null;\n        if (this.unmounted) return;\n        if (encryptionInfo === null) {\n            // likely a decryption error\n            this.setState({ shieldColour: EventShieldColour.NONE, shieldReason: null });\n            return;\n        }\n\n        this.setState({ shieldColour: encryptionInfo.shieldColour, shieldReason: encryptionInfo.shieldReason });\n    }\n\n    private propsEqual(objA: EventTileProps, objB: EventTileProps): boolean {\n        const keysA = Object.keys(objA) as Array<keyof EventTileProps>;\n        const keysB = Object.keys(objB) as Array<keyof EventTileProps>;\n\n        if (keysA.length !== keysB.length) {\n            return false;\n        }\n\n        for (let i = 0; i < keysA.length; i++) {\n            const key = keysA[i];\n\n            if (!objB.hasOwnProperty(key)) {\n                return false;\n            }\n\n            // need to deep-compare readReceipts\n            if (key === \"readReceipts\") {\n                const rA = objA[key];\n                const rB = objB[key];\n                if (rA === rB) {\n                    continue;\n                }\n\n                if (!rA || !rB) {\n                    return false;\n                }\n\n                if (rA.length !== rB.length) {\n                    return false;\n                }\n                for (let j = 0; j < rA.length; j++) {\n                    if (rA[j].userId !== rB[j].userId) {\n                        return false;\n                    }\n                    // one has a member set and the other doesn't?\n                    if (rA[j].roomMember !== rB[j].roomMember) {\n                        return false;\n                    }\n                }\n            } else {\n                if (objA[key] !== objB[key]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Determine whether an event should be highlighted\n     * For edited events, if a previous version of the event was highlighted\n     * the event should remain highlighted as the user may have been notified\n     * (Clearer explanation of why an event is highlighted is planned -\n     * https://github.com/vector-im/element-web/issues/24927)\n     * @returns boolean\n     */\n    private shouldHighlight(): boolean {\n        if (this.props.forExport) return false;\n        if (this.context.timelineRenderingType === TimelineRenderingType.Notification) return false;\n        if (this.context.timelineRenderingType === TimelineRenderingType.ThreadsList) return false;\n\n        const cli = MatrixClientPeg.safeGet();\n        const actions = cli.getPushActionsForEvent(this.props.mxEvent.replacingEvent() || this.props.mxEvent);\n        // get the actions for the previous version of the event too if it is an edit\n        const previousActions = this.props.mxEvent.replacingEvent()\n            ? cli.getPushActionsForEvent(this.props.mxEvent)\n            : undefined;\n        if (!actions?.tweaks && !previousActions?.tweaks) {\n            return false;\n        }\n\n        // don't show self-highlights from another of our clients\n        if (this.props.mxEvent.getSender() === cli.credentials.userId) {\n            return false;\n        }\n\n        return !!(actions?.tweaks.highlight || previousActions?.tweaks.highlight);\n    }\n\n    private onSenderProfileClick = (): void => {\n        dis.dispatch<ComposerInsertPayload>({\n            action: Action.ComposerInsert,\n            userId: this.props.mxEvent.getSender()!,\n            timelineRenderingType: this.context.timelineRenderingType,\n        });\n    };\n\n    private onPermalinkClicked = (e: MouseEvent): void => {\n        // This allows the permalink to be opened in a new tab/window or copied as\n        // matrix.to, but also for it to enable routing within Element when clicked.\n        e.preventDefault();\n        dis.dispatch<ViewRoomPayload>({\n            action: Action.ViewRoom,\n            event_id: this.props.mxEvent.getId(),\n            highlighted: true,\n            room_id: this.props.mxEvent.getRoomId(),\n            metricsTrigger:\n                this.context.timelineRenderingType === TimelineRenderingType.Search ? \"MessageSearch\" : undefined,\n        });\n    };\n\n    private renderE2EPadlock(): ReactNode {\n        // if the event was edited, show the verification info for the edit, not\n        // the original\n        const ev = this.props.mxEvent.replacingEvent() ?? this.props.mxEvent;\n\n        // no icon for local rooms\n        if (isLocalRoom(ev.getRoomId()!)) return null;\n\n        // event could not be decrypted\n        if (ev.isDecryptionFailure()) {\n            switch (ev.decryptionFailureReason) {\n                // These two errors get icons from DecryptionFailureBody, so we hide the padlock icon\n                case DecryptionFailureCode.SENDER_IDENTITY_PREVIOUSLY_VERIFIED:\n                case DecryptionFailureCode.UNSIGNED_SENDER_DEVICE:\n                    return null;\n                default:\n                    return <E2ePadlockDecryptionFailure />;\n            }\n        }\n\n        if (this.state.shieldColour !== EventShieldColour.NONE) {\n            let shieldReasonMessage: string;\n            switch (this.state.shieldReason) {\n                case null:\n                case EventShieldReason.UNKNOWN:\n                    shieldReasonMessage = _t(\"error|unknown\");\n                    break;\n\n                case EventShieldReason.UNVERIFIED_IDENTITY:\n                    shieldReasonMessage = _t(\"encryption|event_shield_reason_unverified_identity\");\n                    break;\n\n                case EventShieldReason.UNSIGNED_DEVICE:\n                    shieldReasonMessage = _t(\"encryption|event_shield_reason_unsigned_device\");\n                    break;\n\n                case EventShieldReason.UNKNOWN_DEVICE:\n                    shieldReasonMessage = _t(\"encryption|event_shield_reason_unknown_device\");\n                    break;\n\n                case EventShieldReason.AUTHENTICITY_NOT_GUARANTEED:\n                    shieldReasonMessage = _t(\"encryption|event_shield_reason_authenticity_not_guaranteed\");\n                    break;\n\n                case EventShieldReason.MISMATCHED_SENDER_KEY:\n                    shieldReasonMessage = _t(\"encryption|event_shield_reason_mismatched_sender_key\");\n                    break;\n\n                case EventShieldReason.SENT_IN_CLEAR:\n                    shieldReasonMessage = _t(\"common|unencrypted\");\n                    break;\n\n                case EventShieldReason.VERIFICATION_VIOLATION:\n                    shieldReasonMessage = _t(\"timeline|decryption_failure|sender_identity_previously_verified\");\n                    break;\n            }\n\n            if (this.state.shieldColour === EventShieldColour.GREY) {\n                return <E2ePadlock icon={E2ePadlockIcon.Normal} title={shieldReasonMessage} />;\n            } else {\n                // red, by elimination\n                return <E2ePadlock icon={E2ePadlockIcon.Warning} title={shieldReasonMessage} />;\n            }\n        }\n\n        if (this.context.isRoomEncrypted) {\n            // else if room is encrypted\n            // and event is being encrypted or is not_sent (Unknown Devices/Network Error)\n            if (ev.status === EventStatus.ENCRYPTING) {\n                return null;\n            }\n            if (ev.status === EventStatus.NOT_SENT) {\n                return null;\n            }\n            if (ev.isState()) {\n                return null; // we expect this to be unencrypted\n            }\n            if (ev.isRedacted()) {\n                return null; // we expect this to be unencrypted\n            }\n            if (!ev.isEncrypted()) {\n                // if the event is not encrypted, but it's an e2e room, show a warning\n                return <E2ePadlockUnencrypted />;\n            }\n        }\n\n        // no padlock needed\n        return null;\n    }\n\n    private onActionBarFocusChange = (actionBarFocused: boolean): void => {\n        this.setState({ actionBarFocused });\n    };\n\n    private getTile: () => IEventTileType | null = () => this.tile.current;\n\n    private getReplyChain = (): ReplyChain | null => this.replyChain.current;\n\n    private getReactions = (): Relations | null => {\n        if (!this.props.showReactions || !this.props.getRelationsForEvent) {\n            return null;\n        }\n        const eventId = this.props.mxEvent.getId()!;\n        return this.props.getRelationsForEvent(eventId, \"m.annotation\", \"m.reaction\") ?? null;\n    };\n\n    private onReactionsCreated = (relationType: string, eventType: string): void => {\n        if (relationType !== \"m.annotation\" || eventType !== \"m.reaction\") {\n            return;\n        }\n        this.setState({\n            reactions: this.getReactions(),\n        });\n    };\n\n    private onContextMenu = (ev: React.MouseEvent): void => {\n        this.showContextMenu(ev);\n    };\n\n    private onTimestampContextMenu = (ev: React.MouseEvent): void => {\n        this.showContextMenu(ev, this.props.permalinkCreator?.forEvent(this.props.mxEvent.getId()!));\n    };\n\n    private showContextMenu(ev: React.MouseEvent, permalink?: string): void {\n        const clickTarget = ev.target as HTMLElement;\n\n        // Try to find an anchor element\n        const anchorElement = clickTarget instanceof HTMLAnchorElement ? clickTarget : clickTarget.closest(\"a\");\n\n        // There is no way to copy non-PNG images into clipboard, so we can't\n        // have our own handling for copying images, so we leave it to the\n        // Electron layer (webcontents-handler.ts)\n        if (clickTarget instanceof HTMLImageElement) return;\n\n        // Return if we're in a browser and click either an a tag or we have\n        // selected text, as in those cases we want to use the native browser\n        // menu\n        if (!PlatformPeg.get()?.allowOverridingNativeContextMenus() && (getSelectedText() || anchorElement)) return;\n\n        // We don't want to show the menu when editing a message\n        if (this.props.editState) return;\n\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.setState({\n            contextMenu: {\n                position: {\n                    left: ev.clientX,\n                    top: ev.clientY,\n                    bottom: ev.clientY,\n                },\n                link: anchorElement?.href || permalink,\n            },\n            actionBarFocused: true,\n        });\n    }\n\n    private onCloseMenu = (): void => {\n        this.setState({\n            contextMenu: undefined,\n            actionBarFocused: false,\n        });\n    };\n\n    private setQuoteExpanded = (expanded: boolean): void => {\n        this.setState({\n            isQuoteExpanded: expanded,\n        });\n    };\n\n    /**\n     * In some cases we can't use shouldHideEvent() since whether or not we hide\n     * an event depends on other things that the event itself\n     * @returns {boolean} true if event should be hidden\n     */\n    private shouldHideEvent(): boolean {\n        // If the call was replaced we don't render anything since we render the other call\n        if (this.props.callEventGrouper?.hangupReason === CallErrorCode.Replaced) return true;\n\n        return false;\n    }\n\n    private renderContextMenu(): ReactNode {\n        if (!this.state.contextMenu) return null;\n\n        const tile = this.getTile();\n        const replyChain = this.getReplyChain();\n        const eventTileOps = tile?.getEventTileOps ? tile.getEventTileOps() : undefined;\n        const collapseReplyChain = replyChain?.canCollapse() ? replyChain.collapse : undefined;\n\n        return (\n            <MessageContextMenu\n                {...aboveRightOf(this.state.contextMenu.position)}\n                mxEvent={this.props.mxEvent}\n                permalinkCreator={this.props.permalinkCreator}\n                eventTileOps={eventTileOps}\n                collapseReplyChain={collapseReplyChain}\n                onFinished={this.onCloseMenu}\n                rightClick={true}\n                reactions={this.state.reactions}\n                link={this.state.contextMenu.link}\n                getRelationsForEvent={this.props.getRelationsForEvent}\n            />\n        );\n    }\n\n    public render(): ReactNode {\n        const msgtype = this.props.mxEvent.getContent().msgtype;\n        const eventType = this.props.mxEvent.getType();\n        const {\n            hasRenderer,\n            isBubbleMessage,\n            isInfoMessage,\n            isLeftAlignedBubbleMessage,\n            noBubbleEvent,\n            isSeeingThroughMessageHiddenForModeration,\n        } = getEventDisplayInfo(\n            MatrixClientPeg.safeGet(),\n            this.props.mxEvent,\n            this.context.showHiddenEvents,\n            this.shouldHideEvent(),\n        );\n        const { isQuoteExpanded } = this.state;\n        // This shouldn't happen: the caller should check we support this type\n        // before trying to instantiate us\n        if (!hasRenderer) {\n            const { mxEvent } = this.props;\n            logger.warn(`Event type not supported: type:${eventType} isState:${mxEvent.isState()}`);\n            return (\n                <div className=\"mx_EventTile mx_EventTile_info mx_MNoticeBody\">\n                    <div className=\"mx_EventTile_line\">{_t(\"timeline|error_no_renderer\")}</div>\n                </div>\n            );\n        }\n\n        const isProbablyMedia = MediaEventHelper.isEligible(this.props.mxEvent);\n\n        const lineClasses = classNames(\"mx_EventTile_line\", {\n            mx_EventTile_mediaLine: isProbablyMedia,\n            mx_EventTile_image:\n                this.props.mxEvent.getType() === EventType.RoomMessage &&\n                this.props.mxEvent.getContent().msgtype === MsgType.Image,\n            mx_EventTile_sticker: this.props.mxEvent.getType() === EventType.Sticker,\n            mx_EventTile_emote:\n                this.props.mxEvent.getType() === EventType.RoomMessage &&\n                this.props.mxEvent.getContent().msgtype === MsgType.Emote,\n        });\n\n        const isSending = [\"sending\", \"queued\", \"encrypting\"].includes(this.props.eventSendStatus!);\n        const isRedacted = isMessageEvent(this.props.mxEvent) && this.props.isRedacted;\n        const isEncryptionFailure = this.props.mxEvent.isDecryptionFailure();\n\n        let isContinuation = this.props.continuation;\n        if (\n            this.context.timelineRenderingType !== TimelineRenderingType.Room &&\n            this.context.timelineRenderingType !== TimelineRenderingType.Search &&\n            this.context.timelineRenderingType !== TimelineRenderingType.Thread &&\n            this.props.layout !== Layout.Bubble\n        ) {\n            isContinuation = false;\n        }\n\n        const isRenderingNotification = this.context.timelineRenderingType === TimelineRenderingType.Notification;\n\n        const isEditing = !!this.props.editState;\n        const classes = classNames({\n            mx_EventTile_bubbleContainer: isBubbleMessage,\n            mx_EventTile_leftAlignedBubble: isLeftAlignedBubbleMessage,\n            mx_EventTile: true,\n            mx_EventTile_isEditing: isEditing,\n            mx_EventTile_info: isInfoMessage,\n            mx_EventTile_12hr: this.props.isTwelveHour,\n            // Note: we keep the `sending` state class for tests, not for our styles\n            mx_EventTile_sending: !isEditing && isSending,\n            mx_EventTile_highlight: this.shouldHighlight(),\n            mx_EventTile_selected: this.props.isSelectedEvent || this.state.contextMenu,\n            mx_EventTile_continuation:\n                isContinuation || eventType === EventType.CallInvite || ElementCall.CALL_EVENT_TYPE.matches(eventType),\n            mx_EventTile_last: this.props.last,\n            mx_EventTile_lastInSection: this.props.lastInSection,\n            mx_EventTile_contextual: this.props.contextual,\n            mx_EventTile_actionBarFocused: this.state.actionBarFocused,\n            mx_EventTile_bad: isEncryptionFailure,\n            mx_EventTile_emote: msgtype === MsgType.Emote,\n            mx_EventTile_noSender: this.props.hideSender,\n            mx_EventTile_clamp:\n                this.context.timelineRenderingType === TimelineRenderingType.ThreadsList || isRenderingNotification,\n            mx_EventTile_noBubble: noBubbleEvent,\n        });\n\n        // If the tile is in the Sending state, don't speak the message.\n        const ariaLive = this.props.eventSendStatus !== null ? \"off\" : undefined;\n\n        let permalink = \"#\";\n        if (this.props.permalinkCreator) {\n            permalink = this.props.permalinkCreator.forEvent(this.props.mxEvent.getId()!);\n        }\n\n        // we can't use local echoes as scroll tokens, because their event IDs change.\n        // Local echos have a send \"status\".\n        const scrollToken = this.props.mxEvent.status ? undefined : this.props.mxEvent.getId();\n\n        let avatar: JSX.Element | null = null;\n        let sender: JSX.Element | null = null;\n        let avatarSize: string | null;\n        let needsSenderProfile: boolean;\n\n        if (isRenderingNotification) {\n            avatarSize = \"24px\";\n            needsSenderProfile = true;\n        } else if (isInfoMessage) {\n            // a small avatar, with no sender profile, for\n            // joins/parts/etc\n            avatarSize = \"14px\";\n            needsSenderProfile = false;\n        } else if (\n            this.context.timelineRenderingType === TimelineRenderingType.ThreadsList ||\n            (this.context.timelineRenderingType === TimelineRenderingType.Thread && !this.props.continuation)\n        ) {\n            avatarSize = \"32px\";\n            needsSenderProfile = true;\n        } else if (eventType === EventType.RoomCreate || isBubbleMessage) {\n            avatarSize = null;\n            needsSenderProfile = false;\n        } else if (this.props.layout == Layout.IRC) {\n            avatarSize = \"14px\";\n            needsSenderProfile = true;\n        } else if (\n            (this.props.continuation && this.context.timelineRenderingType !== TimelineRenderingType.File) ||\n            eventType === EventType.CallInvite ||\n            ElementCall.CALL_EVENT_TYPE.matches(eventType)\n        ) {\n            // no avatar or sender profile for continuation messages and call tiles\n            avatarSize = null;\n            needsSenderProfile = false;\n        } else if (this.context.timelineRenderingType === TimelineRenderingType.File) {\n            avatarSize = \"20px\";\n            needsSenderProfile = true;\n        } else {\n            avatarSize = \"30px\";\n            needsSenderProfile = true;\n        }\n\n        if (this.props.mxEvent.sender && avatarSize !== null) {\n            let member: RoomMember | null = null;\n            // set member to receiver (target) if it is a 3PID invite\n            // so that the correct avatar is shown as the text is\n            // `$target accepted the invitation for $email`\n            if (this.props.mxEvent.getContent().third_party_invite) {\n                member = this.props.mxEvent.target;\n            } else {\n                member = this.props.mxEvent.sender;\n            }\n            // In the ThreadsList view we use the entire EventTile as a click target to open the thread instead\n            const viewUserOnClick =\n                !this.props.inhibitInteraction &&\n                ![TimelineRenderingType.ThreadsList, TimelineRenderingType.Notification].includes(\n                    this.context.timelineRenderingType,\n                );\n            avatar = (\n                <div className=\"mx_EventTile_avatar\">\n                    <MemberAvatar\n                        member={member}\n                        size={avatarSize}\n                        viewUserOnClick={viewUserOnClick}\n                        forceHistorical={this.props.mxEvent.getType() === EventType.RoomMember}\n                    />\n                </div>\n            );\n        }\n\n        if (needsSenderProfile && this.props.hideSender !== true) {\n            if (\n                this.context.timelineRenderingType === TimelineRenderingType.Room ||\n                this.context.timelineRenderingType === TimelineRenderingType.Search ||\n                this.context.timelineRenderingType === TimelineRenderingType.Pinned ||\n                this.context.timelineRenderingType === TimelineRenderingType.Thread\n            ) {\n                sender = <SenderProfile onClick={this.onSenderProfileClick} mxEvent={this.props.mxEvent} />;\n            } else if (this.context.timelineRenderingType === TimelineRenderingType.ThreadsList) {\n                sender = <SenderProfile mxEvent={this.props.mxEvent} withTooltip />;\n            } else {\n                sender = <SenderProfile mxEvent={this.props.mxEvent} />;\n            }\n        }\n\n        const showMessageActionBar = !isEditing && !this.props.forExport;\n        const actionBar = showMessageActionBar ? (\n            <MessageActionBar\n                mxEvent={this.props.mxEvent}\n                reactions={this.state.reactions}\n                permalinkCreator={this.props.permalinkCreator}\n                getTile={this.getTile}\n                getReplyChain={this.getReplyChain}\n                onFocusChange={this.onActionBarFocusChange}\n                isQuoteExpanded={isQuoteExpanded}\n                toggleThreadExpanded={() => this.setQuoteExpanded(!isQuoteExpanded)}\n                getRelationsForEvent={this.props.getRelationsForEvent}\n            />\n        ) : undefined;\n\n        const showTimestamp =\n            this.props.mxEvent.getTs() &&\n            !this.props.hideTimestamp &&\n            (this.props.alwaysShowTimestamps ||\n                this.props.last ||\n                this.state.hover ||\n                this.state.actionBarFocused ||\n                Boolean(this.state.contextMenu));\n\n        // Thread panel shows the timestamp of the last reply in that thread\n        let ts =\n            this.context.timelineRenderingType !== TimelineRenderingType.ThreadsList\n                ? this.props.mxEvent.getTs()\n                : this.state.thread?.replyToEvent?.getTs();\n        if (typeof ts !== \"number\") {\n            // Fall back to something we can use\n            ts = this.props.mxEvent.getTs();\n        }\n\n        const messageTimestamp = (\n            <MessageTimestamp\n                showRelative={this.context.timelineRenderingType === TimelineRenderingType.ThreadsList}\n                showTwelveHour={this.props.isTwelveHour}\n                ts={ts}\n                receivedTs={getLateEventInfo(this.props.mxEvent)?.received_ts}\n            />\n        );\n\n        const timestamp = showTimestamp && ts ? messageTimestamp : null;\n\n        let pinnedMessageBadge: JSX.Element | undefined;\n        if (PinningUtils.isPinned(MatrixClientPeg.safeGet(), this.props.mxEvent)) {\n            pinnedMessageBadge = <PinnedMessageBadge />;\n        }\n\n        let reactionsRow: JSX.Element | undefined;\n        if (!isRedacted) {\n            reactionsRow = (\n                <ReactionsRow\n                    mxEvent={this.props.mxEvent}\n                    reactions={this.state.reactions}\n                    key=\"mx_EventTile_reactionsRow\"\n                />\n            );\n        }\n\n        // If we have reactions or a pinned message badge, we need a footer\n        const hasFooter = Boolean((reactionsRow && this.state.reactions) || pinnedMessageBadge);\n\n        const linkedTimestamp = !this.props.hideTimestamp ? (\n            <a\n                href={permalink}\n                onClick={this.onPermalinkClicked}\n                aria-label={formatTime(new Date(this.props.mxEvent.getTs()), this.props.isTwelveHour)}\n                onContextMenu={this.onTimestampContextMenu}\n            >\n                {timestamp}\n            </a>\n        ) : null;\n\n        const useIRCLayout = this.props.layout === Layout.IRC;\n        const groupTimestamp = !useIRCLayout ? linkedTimestamp : null;\n        const ircTimestamp = useIRCLayout ? linkedTimestamp : null;\n        const bubbleTimestamp = this.props.layout === Layout.Bubble ? messageTimestamp : undefined;\n        const groupPadlock = !useIRCLayout && !isBubbleMessage && this.renderE2EPadlock();\n        const ircPadlock = useIRCLayout && !isBubbleMessage && this.renderE2EPadlock();\n\n        let msgOption: JSX.Element | undefined;\n        if (this.shouldShowSentReceipt || this.shouldShowSendingReceipt) {\n            msgOption = <SentReceipt messageState={this.props.mxEvent.getAssociatedStatus()} />;\n        } else if (this.props.showReadReceipts) {\n            msgOption = (\n                <ReadReceiptGroup\n                    readReceipts={this.props.readReceipts ?? []}\n                    readReceiptMap={this.props.readReceiptMap ?? {}}\n                    checkUnmounting={this.props.checkUnmounting}\n                    suppressAnimation={this.suppressReadReceiptAnimation}\n                    isTwelveHour={this.props.isTwelveHour}\n                />\n            );\n        }\n\n        let replyChain: JSX.Element | undefined;\n        if (\n            haveRendererForEvent(this.props.mxEvent, MatrixClientPeg.safeGet(), this.context.showHiddenEvents) &&\n            shouldDisplayReply(this.props.mxEvent)\n        ) {\n            replyChain = (\n                <ReplyChain\n                    parentEv={this.props.mxEvent}\n                    onHeightChanged={this.props.onHeightChanged}\n                    ref={this.replyChain}\n                    forExport={this.props.forExport}\n                    permalinkCreator={this.props.permalinkCreator}\n                    layout={this.props.layout}\n                    alwaysShowTimestamps={this.props.alwaysShowTimestamps || this.state.hover}\n                    isQuoteExpanded={isQuoteExpanded}\n                    setQuoteExpanded={this.setQuoteExpanded}\n                    getRelationsForEvent={this.props.getRelationsForEvent}\n                />\n            );\n        }\n\n        // Use `getSender()` because searched events might not have a proper `sender`.\n        const isOwnEvent = this.props.mxEvent?.getSender() === MatrixClientPeg.safeGet().getUserId();\n\n        switch (this.context.timelineRenderingType) {\n            case TimelineRenderingType.Thread: {\n                return React.createElement(\n                    this.props.as || \"li\",\n                    {\n                        \"ref\": this.ref,\n                        \"className\": classes,\n                        \"aria-live\": ariaLive,\n                        \"aria-atomic\": true,\n                        \"data-scroll-tokens\": scrollToken,\n                        \"data-has-reply\": !!replyChain,\n                        \"data-layout\": this.props.layout,\n                        \"data-self\": isOwnEvent,\n                        \"data-event-id\": this.props.mxEvent.getId(),\n                        \"onMouseEnter\": () => this.setState({ hover: true }),\n                        \"onMouseLeave\": () => this.setState({ hover: false }),\n                    },\n                    [\n                        <div className=\"mx_EventTile_senderDetails\" key=\"mx_EventTile_senderDetails\">\n                            {avatar}\n                            {sender}\n                        </div>,\n                        <div className={lineClasses} key=\"mx_EventTile_line\" onContextMenu={this.onContextMenu}>\n                            {this.renderContextMenu()}\n                            {replyChain}\n                            {renderTile(\n                                TimelineRenderingType.Thread,\n                                {\n                                    ...this.props,\n\n                                    // overrides\n                                    ref: this.tile,\n                                    isSeeingThroughMessageHiddenForModeration,\n\n                                    // appease TS\n                                    highlights: this.props.highlights,\n                                    highlightLink: this.props.highlightLink,\n                                    onHeightChanged: () => this.props.onHeightChanged,\n                                    permalinkCreator: this.props.permalinkCreator!,\n                                },\n                                this.context.showHiddenEvents,\n                            )}\n                            {actionBar}\n                            <a href={permalink} onClick={this.onPermalinkClicked}>\n                                {timestamp}\n                            </a>\n                            {msgOption}\n                        </div>,\n                        hasFooter && (\n                            <div className=\"mx_EventTile_footer\" key=\"mx_EventTile_footer\">\n                                {(this.props.layout === Layout.Group || !isOwnEvent) && pinnedMessageBadge}\n                                {reactionsRow}\n                                {this.props.layout === Layout.Bubble && isOwnEvent && pinnedMessageBadge}\n                            </div>\n                        ),\n                    ],\n                );\n            }\n            case TimelineRenderingType.Notification:\n            case TimelineRenderingType.ThreadsList: {\n                const room = MatrixClientPeg.safeGet().getRoom(this.props.mxEvent.getRoomId());\n                // tab-index=-1 to allow it to be focusable but do not add tab stop for it, primarily for screen readers\n                return React.createElement(\n                    this.props.as || \"li\",\n                    {\n                        \"ref\": this.ref,\n                        \"className\": classes,\n                        \"tabIndex\": -1,\n                        \"aria-live\": ariaLive,\n                        \"aria-atomic\": \"true\",\n                        \"data-scroll-tokens\": scrollToken,\n                        \"data-layout\": this.props.layout,\n                        \"data-shape\": this.context.timelineRenderingType,\n                        \"data-self\": isOwnEvent,\n                        \"data-has-reply\": !!replyChain,\n                        \"onMouseEnter\": () => this.setState({ hover: true }),\n                        \"onMouseLeave\": () => this.setState({ hover: false }),\n                        \"onClick\": (ev: MouseEvent) => {\n                            const target = ev.currentTarget as HTMLElement;\n                            let index = -1;\n                            if (target.parentElement) index = Array.from(target.parentElement.children).indexOf(target);\n                            switch (this.context.timelineRenderingType) {\n                                case TimelineRenderingType.Notification:\n                                    this.viewInRoom(ev);\n                                    break;\n                                case TimelineRenderingType.ThreadsList:\n                                    dis.dispatch<ShowThreadPayload>({\n                                        action: Action.ShowThread,\n                                        rootEvent: this.props.mxEvent,\n                                        push: true,\n                                    });\n                                    PosthogTrackers.trackInteraction(\"WebThreadsPanelThreadItem\", ev, index ?? -1);\n                                    break;\n                            }\n                        },\n                    },\n                    <>\n                        <div className=\"mx_EventTile_details\">\n                            {sender}\n                            {isRenderingNotification && room ? (\n                                <span className=\"mx_EventTile_truncated\">\n                                    {\" \"}\n                                    {_t(\n                                        \"timeline|in_room_name\",\n                                        { room: room.name },\n                                        { strong: (sub) => <strong>{sub}</strong> },\n                                    )}\n                                </span>\n                            ) : (\n                                \"\"\n                            )}\n                            {timestamp}\n                            <UnreadNotificationBadge\n                                room={room || undefined}\n                                threadId={this.props.mxEvent.getId()}\n                                forceDot={true}\n                            />\n                        </div>\n                        {isRenderingNotification && room ? (\n                            <div className=\"mx_EventTile_avatar\">\n                                <RoomAvatar room={room} size=\"28px\" />\n                            </div>\n                        ) : (\n                            avatar\n                        )}\n                        <div className={lineClasses} key=\"mx_EventTile_line\">\n                            <div className=\"mx_EventTile_body\">\n                                {this.props.mxEvent.isRedacted() ? (\n                                    <RedactedBody mxEvent={this.props.mxEvent} />\n                                ) : this.props.mxEvent.isDecryptionFailure() ? (\n                                    <DecryptionFailureBody mxEvent={this.props.mxEvent} />\n                                ) : (\n                                    <EventPreview mxEvent={this.props.mxEvent} />\n                                )}\n                            </div>\n                            {this.renderThreadPanelSummary()}\n                        </div>\n                        {this.context.timelineRenderingType === TimelineRenderingType.ThreadsList && (\n                            <EventTileThreadToolbar\n                                viewInRoom={this.viewInRoom}\n                                copyLinkToThread={this.copyLinkToThread}\n                            />\n                        )}\n\n                        {msgOption}\n                    </>,\n                );\n            }\n            case TimelineRenderingType.File: {\n                return React.createElement(\n                    this.props.as || \"li\",\n                    {\n                        \"className\": classes,\n                        \"aria-live\": ariaLive,\n                        \"aria-atomic\": true,\n                        \"data-scroll-tokens\": scrollToken,\n                    },\n                    [\n                        <a\n                            className=\"mx_EventTile_senderDetailsLink\"\n                            key=\"mx_EventTile_senderDetailsLink\"\n                            href={permalink}\n                            onClick={this.onPermalinkClicked}\n                        >\n                            <div className=\"mx_EventTile_senderDetails\" onContextMenu={this.onTimestampContextMenu}>\n                                {avatar}\n                                {sender}\n                                {timestamp}\n                            </div>\n                        </a>,\n                        <div className={lineClasses} key=\"mx_EventTile_line\" onContextMenu={this.onContextMenu}>\n                            {this.renderContextMenu()}\n                            {renderTile(\n                                TimelineRenderingType.File,\n                                {\n                                    ...this.props,\n\n                                    // overrides\n                                    ref: this.tile,\n                                    isSeeingThroughMessageHiddenForModeration,\n\n                                    // appease TS\n                                    highlights: this.props.highlights,\n                                    highlightLink: this.props.highlightLink,\n                                    onHeightChanged: this.props.onHeightChanged,\n                                    permalinkCreator: this.props.permalinkCreator,\n                                },\n                                this.context.showHiddenEvents,\n                            )}\n                        </div>,\n                    ],\n                );\n            }\n\n            default: {\n                // Pinned, Room, Search\n                // tab-index=-1 to allow it to be focusable but do not add tab stop for it, primarily for screen readers\n                return React.createElement(\n                    this.props.as || \"li\",\n                    {\n                        \"ref\": this.ref,\n                        \"className\": classes,\n                        \"tabIndex\": -1,\n                        \"aria-live\": ariaLive,\n                        \"aria-atomic\": \"true\",\n                        \"data-scroll-tokens\": scrollToken,\n                        \"data-layout\": this.props.layout,\n                        \"data-self\": isOwnEvent,\n                        \"data-event-id\": this.props.mxEvent.getId(),\n                        \"data-has-reply\": !!replyChain,\n                        \"onMouseEnter\": () => this.setState({ hover: true }),\n                        \"onMouseLeave\": () => this.setState({ hover: false }),\n                    },\n                    <>\n                        {ircTimestamp}\n                        {sender}\n                        {ircPadlock}\n                        {avatar}\n                        <div className={lineClasses} key=\"mx_EventTile_line\" onContextMenu={this.onContextMenu}>\n                            {this.renderContextMenu()}\n                            {groupTimestamp}\n                            {groupPadlock}\n                            {replyChain}\n                            {renderTile(\n                                this.context.timelineRenderingType,\n                                {\n                                    ...this.props,\n\n                                    // overrides\n                                    ref: this.tile,\n                                    isSeeingThroughMessageHiddenForModeration,\n                                    timestamp: bubbleTimestamp,\n\n                                    // appease TS\n                                    highlights: this.props.highlights,\n                                    highlightLink: this.props.highlightLink,\n                                    onHeightChanged: this.props.onHeightChanged,\n                                    permalinkCreator: this.props.permalinkCreator,\n                                },\n                                this.context.showHiddenEvents,\n                            )}\n                            {actionBar}\n                            {this.props.layout === Layout.IRC && (\n                                <>\n                                    {hasFooter && (\n                                        <div className=\"mx_EventTile_footer\">\n                                            {pinnedMessageBadge}\n                                            {reactionsRow}\n                                        </div>\n                                    )}\n                                    {this.renderThreadInfo()}\n                                </>\n                            )}\n                        </div>\n                        {this.props.layout !== Layout.IRC && (\n                            <>\n                                {hasFooter && (\n                                    <div className=\"mx_EventTile_footer\">\n                                        {(this.props.layout === Layout.Group || !isOwnEvent) && pinnedMessageBadge}\n                                        {reactionsRow}\n                                        {this.props.layout === Layout.Bubble && isOwnEvent && pinnedMessageBadge}\n                                    </div>\n                                )}\n                                {this.renderThreadInfo()}\n                            </>\n                        )}\n                        {msgOption}\n                    </>,\n                );\n            }\n        }\n    }\n}\n\n// Wrap all event tiles with the tile error boundary so that any throws even during construction are captured\nconst SafeEventTile = forwardRef<UnwrappedEventTile, EventTileProps>((props, ref) => {\n    return (\n        <>\n            <TileErrorBoundary mxEvent={props.mxEvent} layout={props.layout ?? Layout.Group}>\n                <UnwrappedEventTile ref={ref} {...props} />\n            </TileErrorBoundary>\n        </>\n    );\n});\nexport default SafeEventTile;\n\nfunction E2ePadlockUnencrypted(props: Omit<IE2ePadlockProps, \"title\" | \"icon\">): JSX.Element {\n    return <E2ePadlock title={_t(\"common|unencrypted\")} icon={E2ePadlockIcon.Warning} {...props} />;\n}\n\nfunction E2ePadlockDecryptionFailure(props: Omit<IE2ePadlockProps, \"title\" | \"icon\">): JSX.Element {\n    return (\n        <E2ePadlock title={_t(\"timeline|undecryptable_tooltip\")} icon={E2ePadlockIcon.DecryptionFailure} {...props} />\n    );\n}\n\nenum E2ePadlockIcon {\n    /** grey shield */\n    Normal = \"normal\",\n\n    /** red shield with (!) */\n    Warning = \"warning\",\n\n    /** key in grey circle */\n    DecryptionFailure = \"decryption_failure\",\n}\n\ninterface IE2ePadlockProps {\n    icon: E2ePadlockIcon;\n    title: string;\n}\n\nclass E2ePadlock extends React.Component<IE2ePadlockProps> {\n    public constructor(props: IE2ePadlockProps) {\n        super(props);\n\n        this.state = {\n            hover: false,\n        };\n    }\n\n    public render(): ReactNode {\n        const classes = `mx_EventTile_e2eIcon mx_EventTile_e2eIcon_${this.props.icon}`;\n        // We specify isTriggerInteractive=true and make the div interactive manually as a workaround for\n        // https://github.com/element-hq/compound/issues/294\n        return (\n            <Tooltip label={this.props.title} isTriggerInteractive={true}>\n                <div className={classes} tabIndex={0} aria-label={_t(\"timeline|e2e_state\")} />\n            </Tooltip>\n        );\n    }\n}\n\ninterface ISentReceiptProps {\n    messageState: EventStatus | null;\n}\n\nfunction SentReceipt({ messageState }: ISentReceiptProps): JSX.Element {\n    const isSent = !messageState || messageState === \"sent\";\n    const isFailed = messageState === \"not_sent\";\n    const receiptClasses = classNames({\n        mx_EventTile_receiptSent: isSent,\n        mx_EventTile_receiptSending: !isSent && !isFailed,\n    });\n\n    let nonCssBadge: JSX.Element | undefined;\n    if (isFailed) {\n        nonCssBadge = <NotificationBadge notification={StaticNotificationState.RED_EXCLAMATION} />;\n    }\n\n    let label = _t(\"timeline|send_state_sending\");\n    if (messageState === \"encrypting\") {\n        label = _t(\"timeline|send_state_encrypting\");\n    } else if (isSent) {\n        label = _t(\"timeline|send_state_sent\");\n    } else if (isFailed) {\n        label = _t(\"timeline|send_state_failed\");\n    }\n\n    return (\n        <div className=\"mx_EventTile_msgOption\">\n            <div className=\"mx_ReadReceiptGroup\">\n                <Tooltip label={label} placement=\"top-end\">\n                    <div className=\"mx_ReadReceiptGroup_button\" role=\"status\">\n                        <span className=\"mx_ReadReceiptGroup_container\">\n                            <span className={receiptClasses}>{nonCssBadge}</span>\n                        </span>\n                    </div>\n                </Tooltip>\n            </div>\n        </div>\n    );\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020, 2021 Tulir Asokan <tulir@maunium.net>\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\nimport { ImageContent } from \"matrix-js-sdk/src/types\";\n\nimport MImageBody from \"~tchap-web/src/tchap/components/views/messages/OriginalImageBody\"; // :TCHAP: content-scanner\n// import MImageBody from \"./MImageBody\"; // :TCHAP: content-scanner\n\nconst FORCED_IMAGE_HEIGHT = 44;\n\nexport default class MImageReplyBody extends MImageBody {\n    public onClick = (ev: React.MouseEvent): void => {\n        ev.preventDefault();\n    };\n\n    public wrapImage(contentUrl: string, children: JSX.Element): JSX.Element {\n        return children;\n    }\n\n    public render(): React.ReactNode {\n        if (this.state.error) {\n            return super.render();\n        }\n\n        const content = this.props.mxEvent.getContent<ImageContent>();\n        const thumbnail = this.state.contentUrl\n            ? this.messageContent(this.state.contentUrl, this.state.thumbUrl, content, FORCED_IMAGE_HEIGHT)\n            : undefined;\n\n        return <div className=\"mx_MImageReplyBody\">{thumbnail}</div>;\n    }\n}\n","/*\n * Copyright 2022 New Vector Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport Spinner from \"~tchap-web/src/components/views/elements/Spinner\";\nimport { IBodyProps } from \"~tchap-web/src/components/views/messages/IBodyProps\";\nimport { IMediaEventContent } from \"~tchap-web/src/customisations/models/IMediaEventContent\";\nimport { _t } from \"~tchap-web/src/languageHandler\";\nimport { presentableTextForFile } from \"~tchap-web/src/utils/FileUtils\";\n\nimport OriginalImageReplyBody from \"../../../../components/views/messages/OriginalImageReplyBody\";\nimport { BlockedIcon } from \"../../../../components/views/elements/BlockedIcon\";\nimport { ContentScanningStatus } from \"../../../../components/views/elements/ContentScanningStatus\";\nimport { Media } from \"../../../ContentScanningMedia\";\n\nconst FORCED_IMAGE_HEIGHT = 44;\n\ninterface State {\n    isScanning: boolean;\n    isSafe: boolean;\n    hasError: boolean;\n}\n\nexport default class ContentScanningImageReplyBody extends React.PureComponent<IBodyProps, State> {\n    public constructor(props: IBodyProps) {\n        super(props);\n        this.state = {\n            isScanning: true,\n            isSafe: false,\n            hasError: false,\n        };\n\n        Promise.all([this.media.scanSource(), this.media.scanThumbnail()])\n            .then(async ([ok1, ok2]) => {\n                const isSafe = ok1 && ok2;\n                this.setState({\n                    isScanning: false,\n                    isSafe,\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    isScanning: false,\n                    hasError: true,\n                });\n            });\n    }\n\n    public render() {\n        if (this.state.isScanning) {\n            return (\n                <>\n                    <div className=\"mx_MImageBody mx_MImageBody_pending\" style={{ height: FORCED_IMAGE_HEIGHT }}>\n                        <Spinner />\n                    </div>\n                    <ContentScanningStatus fileName={this.fileName} status=\"scanning\" />\n                </>\n            );\n        } else if (this.state.hasError) {\n            return (\n                <>\n                    <div className=\"mx_MImageBody mx_MImageBody_error\" style={{ height: FORCED_IMAGE_HEIGHT }}>\n                        <BlockedIcon className=\"mx_MImageBody_BlockedIcon\" />\n                    </div>\n                    <ContentScanningStatus fileName={this.fileName} status=\"error\" />\n                </>\n            );\n        } else if (!this.state.isSafe) {\n            return (\n                <>\n                    <div className=\"mx_MImageBody mx_MImageBody_unsafe\" style={{ height: FORCED_IMAGE_HEIGHT }}>\n                        <BlockedIcon className=\"mx_MImageBody_BlockedIcon\" />\n                    </div>\n                    <ContentScanningStatus fileName={this.fileName} status=\"unsafe\" />\n                </>\n            );\n        }\n\n        return (\n            <>\n                {this.renderOriginal()}\n                <ContentScanningStatus status=\"done\" />\n            </>\n        );\n    }\n\n    protected renderOriginal() {\n        return <OriginalImageReplyBody {...this.props} />;\n    }\n\n    private get media(): Media {\n        return this.props.mediaEventHelper.media as any as Media;\n    }\n\n    private get fileName() {\n        return presentableTextForFile(this.content, _t(\"common|image\"), true, false);\n    }\n\n    private get content(): IMediaEventContent {\n        return this.props.mxEvent.getContent<IMediaEventContent>();\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020, 2021 Tulir Asokan <tulir@maunium.net>\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { createRef } from \"react\";\nimport classNames from \"classnames\";\nimport { MatrixEvent, MatrixEventEvent, EventType, MsgType } from \"matrix-js-sdk/src/matrix\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport { _t } from \"../../../languageHandler\";\nimport dis from \"../../../dispatcher/dispatcher\";\nimport { Action } from \"../../../dispatcher/actions\";\nimport { RoomPermalinkCreator } from \"../../../utils/permalinks/Permalinks\";\nimport SenderProfile from \"../messages/SenderProfile\";\nimport MImageReplyBody from \"../messages/MImageReplyBody\";\nimport { isVoiceMessage } from \"../../../utils/EventUtils\";\nimport { getEventDisplayInfo } from \"../../../utils/EventRenderingUtils\";\nimport MFileBody from \"../messages/MFileBody\";\nimport MemberAvatar from \"../avatars/MemberAvatar\";\nimport MVoiceMessageBody from \"../messages/MVoiceMessageBody\";\nimport { ViewRoomPayload } from \"../../../dispatcher/payloads/ViewRoomPayload\";\nimport { renderReplyTile } from \"../../../events/EventTileFactory\";\nimport { GetRelationsForEvent } from \"../rooms/EventTile\";\nimport { MatrixClientPeg } from \"../../../MatrixClientPeg\";\n\ninterface IProps {\n    mxEvent: MatrixEvent;\n    permalinkCreator?: RoomPermalinkCreator;\n    highlights?: string[];\n    highlightLink?: string;\n    onHeightChanged?(): void;\n    toggleExpandedQuote?: () => void;\n    getRelationsForEvent?: GetRelationsForEvent;\n}\n\nexport default class ReplyTile extends React.PureComponent<IProps> {\n    private anchorElement = createRef<HTMLAnchorElement>();\n\n    public static defaultProps = {\n        onHeightChanged: () => {},\n    };\n\n    public componentDidMount(): void {\n        this.props.mxEvent.on(MatrixEventEvent.Decrypted, this.onDecrypted);\n        this.props.mxEvent.on(MatrixEventEvent.BeforeRedaction, this.onEventRequiresUpdate);\n        this.props.mxEvent.on(MatrixEventEvent.Replaced, this.onEventRequiresUpdate);\n    }\n\n    public componentWillUnmount(): void {\n        this.props.mxEvent.removeListener(MatrixEventEvent.Decrypted, this.onDecrypted);\n        this.props.mxEvent.removeListener(MatrixEventEvent.BeforeRedaction, this.onEventRequiresUpdate);\n        this.props.mxEvent.removeListener(MatrixEventEvent.Replaced, this.onEventRequiresUpdate);\n    }\n\n    private onDecrypted = (): void => {\n        this.forceUpdate();\n        if (this.props.onHeightChanged) {\n            this.props.onHeightChanged();\n        }\n    };\n\n    private onEventRequiresUpdate = (): void => {\n        // Force update when necessary - redactions and edits\n        this.forceUpdate();\n    };\n\n    private onClick = (e: React.MouseEvent): void => {\n        const clickTarget = e.target as HTMLElement;\n        // Following a link within a reply should not dispatch the `view_room` action\n        // so that the browser can direct the user to the correct location\n        // The exception being the link wrapping the reply\n        if (\n            clickTarget.tagName.toLowerCase() !== \"a\" ||\n            clickTarget.closest(\"a\") === null ||\n            clickTarget === this.anchorElement.current\n        ) {\n            // This allows the permalink to be opened in a new tab/window or copied as\n            // matrix.to, but also for it to enable routing within Riot when clicked.\n            e.preventDefault();\n            // Expand thread on shift key\n            if (this.props.toggleExpandedQuote && e.shiftKey) {\n                this.props.toggleExpandedQuote();\n            } else {\n                dis.dispatch<ViewRoomPayload>({\n                    action: Action.ViewRoom,\n                    event_id: this.props.mxEvent.getId(),\n                    highlighted: true,\n                    room_id: this.props.mxEvent.getRoomId(),\n                    metricsTrigger: undefined, // room doesn't change\n                });\n            }\n        }\n    };\n\n    public render(): React.ReactNode {\n        const mxEvent = this.props.mxEvent;\n        const msgType = mxEvent.getContent().msgtype;\n        const evType = mxEvent.getType();\n\n        const { hasRenderer, isInfoMessage, isSeeingThroughMessageHiddenForModeration } = getEventDisplayInfo(\n            MatrixClientPeg.safeGet(),\n            mxEvent,\n            false /* Replies are never hidden, so this should be fine */,\n        );\n        // This shouldn't happen: the caller should check we support this type\n        // before trying to instantiate us\n        if (!hasRenderer) {\n            const { mxEvent } = this.props;\n            logger.warn(`Event type not supported: type:${mxEvent.getType()} isState:${mxEvent.isState()}`);\n            return (\n                <div className=\"mx_ReplyTile mx_ReplyTile_info mx_MNoticeBody\">{_t(\"timeline|error_no_renderer\")}</div>\n            );\n        }\n\n        const classes = classNames(\"mx_ReplyTile\", {\n            mx_ReplyTile_inline: msgType === MsgType.Emote,\n            mx_ReplyTile_info: isInfoMessage && !mxEvent.isRedacted(),\n            mx_ReplyTile_audio: msgType === MsgType.Audio,\n            mx_ReplyTile_video: msgType === MsgType.Video,\n        });\n\n        let permalink = \"#\";\n        if (this.props.permalinkCreator) {\n            permalink = this.props.permalinkCreator.forEvent(mxEvent.getId()!);\n        }\n\n        let sender;\n        const hasOwnSender = isInfoMessage || evType === EventType.RoomCreate;\n        if (!hasOwnSender) {\n            sender = (\n                <div className=\"mx_ReplyTile_sender\">\n                    <MemberAvatar member={mxEvent.sender} fallbackUserId={mxEvent.getSender()} size=\"16px\" />\n                    <SenderProfile mxEvent={mxEvent} />\n                </div>\n            );\n        }\n\n        const msgtypeOverrides: Record<string, typeof React.Component> = {\n            [MsgType.Image]: MImageReplyBody,\n            // Override audio and video body with file body. We also hide the download/decrypt button using CSS\n            [MsgType.Audio]: isVoiceMessage(mxEvent) ? MVoiceMessageBody : MFileBody,\n            [MsgType.Video]: MFileBody,\n        };\n        const evOverrides: Record<string, typeof React.Component> = {\n            // Use MImageReplyBody so that the sticker isn't taking up a lot of space\n            [EventType.Sticker]: MImageReplyBody,\n        };\n\n        return (\n            <div className={classes}>\n                <a href={permalink} onClick={this.onClick} ref={this.anchorElement}>\n                    {sender}\n                    {renderReplyTile(\n                        {\n                            ...this.props,\n\n                            // overrides\n                            ref: undefined,\n                            showUrlPreview: false,\n                            overrideBodyTypes: msgtypeOverrides,\n                            overrideEventTypes: evOverrides,\n                            maxImageHeight: 96,\n                            isSeeingThroughMessageHiddenForModeration,\n\n                            // appease TS\n                            highlights: this.props.highlights,\n                            highlightLink: this.props.highlightLink,\n                            onHeightChanged: this.props.onHeightChanged,\n                            permalinkCreator: this.props.permalinkCreator,\n                        },\n                        false /* showHiddenEvents shouldn't be relevant */,\n                    )}\n                </a>\n            </div>\n        );\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { Room } from \"matrix-js-sdk/src/matrix\";\nimport React, { HTMLAttributes, ReactHTML } from \"react\";\n\nimport { roomContextDetails } from \"../../../utils/i18n-helpers\";\n\ntype Props<T extends keyof ReactHTML> = HTMLAttributes<T> & {\n    component?: T;\n    room: Room;\n};\n\nexport function RoomContextDetails<T extends keyof ReactHTML>({ room, component, ...other }: Props<T>): JSX.Element {\n    const contextDetails = roomContextDetails(room);\n    if (contextDetails) {\n        return React.createElement(\n            component ?? \"div\",\n            {\n                ...other,\n                \"aria-label\": contextDetails.ariaLabel,\n            },\n            [contextDetails.details],\n        );\n    }\n\n    return <></>;\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { Room } from \"matrix-js-sdk/src/matrix\";\n\nimport SpaceStore from \"../stores/spaces/SpaceStore\";\nimport { _t } from \"../languageHandler\";\nimport DMRoomMap from \"./DMRoomMap\";\nimport { formatList } from \"./FormattingUtils\";\n\nexport interface RoomContextDetails {\n    details: string | null;\n    ariaLabel?: string;\n}\n\nexport function roomContextDetails(room: Room): RoomContextDetails | null {\n    const dmPartner = DMRoomMap.shared().getUserIdForRoomId(room.roomId);\n    // if we’ve got more than 2 users, don’t treat it like a regular DM\n    const isGroupDm = room.getMembers().length > 2;\n    if (!room.isSpaceRoom() && dmPartner && !isGroupDm) {\n        return { details: dmPartner };\n    }\n\n    const [parent, secondParent, ...otherParents] = SpaceStore.instance.getKnownParents(room.roomId);\n    if (secondParent && !otherParents?.length) {\n        // exactly 2 edge case for improved i18n\n        const space1Name = room.client.getRoom(parent)?.name;\n        const space2Name = room.client.getRoom(secondParent)?.name;\n        return {\n            details: formatList([space1Name ?? \"\", space2Name ?? \"\"]),\n            ariaLabel: _t(\"in_space1_and_space2\", { space1Name, space2Name }),\n        };\n    } else if (parent) {\n        const spaceName = room.client.getRoom(parent)?.name ?? \"\";\n        const count = otherParents.length;\n        if (count > 0) {\n            return {\n                details: formatList([spaceName, ...otherParents], 1),\n                ariaLabel: _t(\"in_space_and_n_other_spaces\", { spaceName, count }),\n            };\n        }\n        return {\n            details: spaceName,\n            ariaLabel: _t(\"in_space\", { spaceName }),\n        };\n    }\n\n    return { details: room.getCanonicalAlias() };\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { Fragment } from \"react\";\n\nimport { Icon as InactiveIcon } from \"../../../../../res/img/element-icons/settings/inactive.svg\";\nimport { INACTIVE_DEVICE_AGE_DAYS, isDeviceInactive } from \"../../../../components/views/settings/devices/filter\";\nimport { ExtendedDevice } from \"../../../../components/views/settings/devices/types\";\nimport { formatDate, formatRelativeTime } from \"../../../../DateUtils\";\nimport { _t } from \"../../../../languageHandler\";\n\ninterface Props {\n    device: ExtendedDevice;\n}\n\nconst MS_DAY = 24 * 60 * 60 * 1000;\nconst MS_6_DAYS = 6 * MS_DAY;\nconst formatLastActivity = (timestamp: number, now = new Date().getTime()): string => {\n    // less than a week ago\n    if (timestamp + MS_6_DAYS >= now) {\n        const date = new Date(timestamp);\n        // Tue 20:15\n        return formatDate(date);\n    }\n    return formatRelativeTime(new Date(timestamp));\n};\n\nconst getInactiveMetadata = (device: ExtendedDevice): { id: string; value: React.ReactNode } | undefined => {\n    const isInactive = isDeviceInactive(device);\n\n    if (!isInactive || !device.last_seen_ts) {\n        return undefined;\n    }\n\n    return {\n        id: \"inactive\",\n        value: (\n            <>\n                <InactiveIcon className=\"mx_DeviceTile_inactiveIcon\" />\n                {_t(\"settings|sessions|inactive_days\", { inactiveAgeDays: INACTIVE_DEVICE_AGE_DAYS }) +\n                    ` (${formatLastActivity(device.last_seen_ts)})`}\n            </>\n        ),\n    };\n};\n\nconst DeviceMetaDatum: React.FC<{ value: string | React.ReactNode; id: string }> = ({ value, id }) =>\n    value ? <span data-testid={`device-metadata-${id}`}>{value}</span> : null;\n\nexport const DeviceMetaData: React.FC<Props> = ({ device }) => {\n    const inactive = getInactiveMetadata(device);\n    const lastActivity =\n        device.last_seen_ts && `${_t(\"settings|sessions|last_activity\")} ${formatLastActivity(device.last_seen_ts)}`;\n    const verificationStatus = device.isVerified ? _t(\"common|verified\") : _t(\"common|unverified\");\n    // if device is inactive, don't display last activity or verificationStatus\n    const metadata = inactive\n        ? [inactive, { id: \"lastSeenIp\", value: device.last_seen_ip }]\n        : [\n              { id: \"isVerified\", value: verificationStatus },\n              { id: \"lastActivity\", value: lastActivity },\n              { id: \"lastSeenIp\", value: device.last_seen_ip },\n              { id: \"deviceId\", value: device.device_id },\n          ];\n\n    return (\n        <>\n            {metadata.map(({ id, value }, index) =>\n                !!value ? (\n                    <Fragment key={id}>\n                        {!!index && \" · \"}\n                        <DeviceMetaDatum id={id} value={value} />\n                    </Fragment>\n                ) : null,\n            )}\n        </>\n    );\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { ExtendedDevice, DeviceSecurityVariation } from \"./types\";\n\ntype DeviceFilterCondition = (device: ExtendedDevice) => boolean;\n\nconst MS_DAY = 24 * 60 * 60 * 1000;\nexport const INACTIVE_DEVICE_AGE_MS = 7.776e9; // 90 days\nexport const INACTIVE_DEVICE_AGE_DAYS = INACTIVE_DEVICE_AGE_MS / MS_DAY;\n\nexport type FilterVariation =\n    | DeviceSecurityVariation.Verified\n    | DeviceSecurityVariation.Inactive\n    | DeviceSecurityVariation.Unverified;\n\nexport const isDeviceInactive: DeviceFilterCondition = (device) =>\n    !!device.last_seen_ts && device.last_seen_ts < Date.now() - INACTIVE_DEVICE_AGE_MS;\n\nconst filters: Record<FilterVariation, DeviceFilterCondition> = {\n    [DeviceSecurityVariation.Verified]: (device) => !!device.isVerified,\n    [DeviceSecurityVariation.Unverified]: (device) => !device.isVerified,\n    [DeviceSecurityVariation.Inactive]: isDeviceInactive,\n};\n\nexport const filterDevicesBySecurityRecommendation = (\n    devices: ExtendedDevice[],\n    securityVariations: FilterVariation[],\n): ExtendedDevice[] => {\n    const activeFilters = securityVariations.map((variation) => filters[variation]);\n    if (!activeFilters.length) {\n        return devices;\n    }\n    return devices.filter((device) => activeFilters.every((filter) => filter(device)));\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { IMyDevice } from \"matrix-js-sdk/src/matrix\";\n\nimport { ExtendedDeviceInformation } from \"../../../../utils/device/parseUserAgent\";\n\nexport type DeviceWithVerification = IMyDevice & {\n    /**\n     * `null` if the device is unknown or has not published encryption keys; otherwise a boolean\n     * indicating whether the device has been cross-signed by a cross-signing key we trust.\n     */\n    isVerified: boolean | null;\n};\nexport type ExtendedDeviceAppInfo = {\n    // eg Element Web\n    appName?: string;\n    appVersion?: string;\n    url?: string;\n};\nexport type ExtendedDevice = DeviceWithVerification & ExtendedDeviceAppInfo & ExtendedDeviceInformation;\nexport type DevicesDictionary = Record<ExtendedDevice[\"device_id\"], ExtendedDevice>;\n\nexport enum DeviceSecurityVariation {\n    Verified = \"Verified\",\n    Unverified = \"Unverified\",\n    Inactive = \"Inactive\",\n    // sessions that do not support encryption\n    // eg a session that logged in via api to get an access token\n    Unverifiable = \"Unverifiable\",\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { useEffect, useState } from \"react\";\nimport {\n    EventType,\n    MatrixEvent,\n    Room,\n    RoomStateEvent,\n    ContentHelpers,\n    MRoomTopicEventContent,\n} from \"matrix-js-sdk/src/matrix\";\nimport { Optional } from \"matrix-events-sdk\";\n\nimport { useTypedEventEmitter } from \"../useEventEmitter\";\n\nexport const getTopic = (room?: Room): Optional<ContentHelpers.TopicState> => {\n    const content = room?.currentState?.getStateEvents(EventType.RoomTopic, \"\")?.getContent<MRoomTopicEventContent>();\n    return !!content ? ContentHelpers.parseTopicContent(content) : null;\n};\n\n/**\n * Helper to retrieve the room topic for given room\n * @param room\n * @returns the raw text and an html parsion version of the room topic\n */\nexport function useTopic(room?: Room): Optional<ContentHelpers.TopicState> {\n    const [topic, setTopic] = useState(getTopic(room));\n    useTypedEventEmitter(room?.currentState, RoomStateEvent.Events, (ev: MatrixEvent) => {\n        if (ev.getType() !== EventType.RoomTopic) return;\n        setTopic(getTopic(room));\n    });\n    useEffect(() => {\n        setTopic(getTopic(room));\n    }, [room]);\n\n    return topic;\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2019-2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { EventEmitter } from \"events\";\nimport {\n    RoomMember,\n    Room,\n    RoomEvent,\n    RoomState,\n    RoomStateEvent,\n    MatrixEvent,\n    Direction,\n    EventTimeline,\n    EventTimelineSet,\n    IRoomTimelineData,\n    EventType,\n    ClientEvent,\n    MatrixClient,\n    HTTPError,\n    IEventWithRoomId,\n    IMatrixProfile,\n    IResultRoomEvents,\n    SyncStateData,\n    SyncState,\n    TimelineIndex,\n    TimelineWindow,\n} from \"matrix-js-sdk/src/matrix\";\nimport { KnownMembership } from \"matrix-js-sdk/src/types\";\nimport { sleep } from \"matrix-js-sdk/src/utils\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport PlatformPeg from \"../PlatformPeg\";\nimport { MatrixClientPeg } from \"../MatrixClientPeg\";\nimport SettingsStore from \"../settings/SettingsStore\";\nimport { SettingLevel } from \"../settings/SettingLevel\";\nimport { ICrawlerCheckpoint, IEventAndProfile, IIndexStats, ILoadArgs, ISearchArgs } from \"./BaseEventIndexManager\";\nimport { asyncFilter } from \"../utils/arrays.ts\";\n\n// The time in ms that the crawler will wait loop iterations if there\n// have not been any checkpoints to consume in the last iteration.\nconst CRAWLER_IDLE_TIME = 5000;\n\n// The maximum number of events our crawler should fetch in a single crawl.\nconst EVENTS_PER_CRAWL = 100;\n\ninterface ICrawler {\n    cancel(): void;\n}\n\n/*\n * Event indexing class that wraps the platform specific event indexing.\n */\nexport default class EventIndex extends EventEmitter {\n    private crawlerCheckpoints: ICrawlerCheckpoint[] = [];\n    private crawler: ICrawler | null = null;\n    private currentCheckpoint: ICrawlerCheckpoint | null = null;\n\n    public async init(): Promise<void> {\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        if (!indexManager) return;\n\n        this.crawlerCheckpoints = await indexManager.loadCheckpoints();\n        logger.log(\"EventIndex: Loaded checkpoints\", this.crawlerCheckpoints);\n\n        this.registerListeners();\n    }\n\n    /**\n     * Register event listeners that are necessary for the event index to work.\n     */\n    public registerListeners(): void {\n        const client = MatrixClientPeg.safeGet();\n\n        client.on(ClientEvent.Sync, this.onSync);\n        client.on(RoomEvent.Timeline, this.onRoomTimeline);\n        client.on(RoomEvent.TimelineReset, this.onTimelineReset);\n        client.on(RoomStateEvent.Events, this.onRoomStateEvent);\n    }\n\n    /**\n     * Remove the event index specific event listeners.\n     */\n    public removeListeners(): void {\n        const client = MatrixClientPeg.get();\n        if (client === null) return;\n\n        client.removeListener(ClientEvent.Sync, this.onSync);\n        client.removeListener(RoomEvent.Timeline, this.onRoomTimeline);\n        client.removeListener(RoomEvent.TimelineReset, this.onTimelineReset);\n        client.removeListener(RoomStateEvent.Events, this.onRoomStateEvent);\n    }\n\n    /**\n     * Get crawler checkpoints for the encrypted rooms and store them in the index.\n     */\n    public async addInitialCheckpoints(): Promise<void> {\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        if (!indexManager) return;\n        const client = MatrixClientPeg.safeGet();\n        const rooms = client.getRooms();\n\n        // We only care to crawl the encrypted rooms, non-encrypted\n        // rooms can use the search provided by the homeserver.\n        const encryptedRooms = await asyncFilter(rooms, async (room) =>\n            Boolean(await client.getCrypto()?.isEncryptionEnabledInRoom(room.roomId)),\n        );\n\n        logger.log(\"EventIndex: Adding initial crawler checkpoints\");\n\n        // Gather the prev_batch tokens and create checkpoints for\n        // our message crawler.\n        await Promise.all(\n            encryptedRooms.map(async (room): Promise<void> => {\n                const timeline = room.getLiveTimeline();\n                const token = timeline.getPaginationToken(Direction.Backward);\n\n                const backCheckpoint: ICrawlerCheckpoint = {\n                    roomId: room.roomId,\n                    token: token,\n                    direction: Direction.Backward,\n                    fullCrawl: true,\n                };\n\n                const forwardCheckpoint: ICrawlerCheckpoint = {\n                    roomId: room.roomId,\n                    token: token,\n                    direction: Direction.Forward,\n                };\n\n                try {\n                    if (backCheckpoint.token) {\n                        await indexManager.addCrawlerCheckpoint(backCheckpoint);\n                        this.crawlerCheckpoints.push(backCheckpoint);\n                    }\n\n                    if (forwardCheckpoint.token) {\n                        await indexManager.addCrawlerCheckpoint(forwardCheckpoint);\n                        this.crawlerCheckpoints.push(forwardCheckpoint);\n                    }\n                } catch (e) {\n                    logger.log(\n                        \"EventIndex: Error adding initial checkpoints for room\",\n                        room.roomId,\n                        backCheckpoint,\n                        forwardCheckpoint,\n                        e,\n                    );\n                }\n            }),\n        );\n    }\n\n    /*\n     * The sync event listener.\n     *\n     * The listener has two cases:\n     *     - First sync after start up, check if the index is empty, add\n     *         initial checkpoints, if so. Start the crawler background task.\n     *     - Every other sync, tell the event index to commit all the queued up\n     *         live events\n     */\n    private onSync = async (state: SyncState, prevState: SyncState | null, data?: SyncStateData): Promise<void> => {\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        if (!indexManager) return;\n\n        if (prevState === \"PREPARED\" && state === \"SYNCING\") {\n            // If our indexer is empty we're most likely running Element the\n            // first time with indexing support or running it with an\n            // initial sync. Add checkpoints to crawl our encrypted rooms.\n            const eventIndexWasEmpty = await indexManager.isEventIndexEmpty();\n            if (eventIndexWasEmpty) await this.addInitialCheckpoints();\n\n            this.startCrawler();\n            return;\n        }\n\n        if (prevState === \"SYNCING\" && state === \"SYNCING\") {\n            // A sync was done, presumably we queued up some live events,\n            // commit them now.\n            await indexManager.commitLiveEvents();\n        }\n    };\n\n    /*\n     * The Room.timeline listener.\n     *\n     * This listener waits for live events in encrypted rooms, if they are\n     * decrypted or unencrypted we queue them to be added to the index,\n     * otherwise we save their event id and wait for them in the Event.decrypted\n     * listener.\n     */\n    private onRoomTimeline = async (\n        ev: MatrixEvent,\n        room: Room | undefined,\n        toStartOfTimeline: boolean | undefined,\n        removed: boolean,\n        data: IRoomTimelineData,\n    ): Promise<void> => {\n        if (!room) return; // notification timeline, we'll get this event again with a room specific timeline\n\n        const client = MatrixClientPeg.safeGet();\n\n        // We only index encrypted rooms locally.\n        if (!client.isRoomEncrypted(ev.getRoomId()!)) return;\n\n        if (ev.isRedaction()) {\n            return this.redactEvent(ev);\n        }\n\n        // If it isn't a live event or if it's redacted there's nothing to do.\n        if (toStartOfTimeline || !data || !data.liveEvent || ev.isRedacted()) {\n            return;\n        }\n\n        await client.decryptEventIfNeeded(ev);\n\n        await this.addLiveEventToIndex(ev);\n    };\n\n    private onRoomStateEvent = async (ev: MatrixEvent, state: RoomState): Promise<void> => {\n        if (!MatrixClientPeg.safeGet().isRoomEncrypted(state.roomId)) return;\n\n        if (ev.getType() === EventType.RoomEncryption && !(await this.isRoomIndexed(state.roomId))) {\n            logger.log(\"EventIndex: Adding a checkpoint for a newly encrypted room\", state.roomId);\n            this.addRoomCheckpoint(state.roomId, true);\n        }\n    };\n\n    /*\n     * Removes a redacted event from our event index.\n     * We cannot rely on Room.redaction as this only fires if the redaction applied to an event the js-sdk has loaded.\n     */\n    private redactEvent = async (ev: MatrixEvent): Promise<void> => {\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        if (!indexManager) return;\n\n        const associatedId = ev.getAssociatedId();\n        if (!associatedId) return;\n\n        try {\n            await indexManager.deleteEvent(associatedId);\n        } catch (e) {\n            logger.log(\"EventIndex: Error deleting event from index\", e);\n        }\n    };\n\n    /*\n     * The Room.timelineReset listener.\n     *\n     * Listens for timeline resets that are caused by a limited timeline to\n     * re-add checkpoints for rooms that need to be crawled again.\n     */\n    private onTimelineReset = async (room: Room | undefined): Promise<void> => {\n        if (!room) return;\n        if (!MatrixClientPeg.safeGet().isRoomEncrypted(room.roomId)) return;\n\n        logger.log(\"EventIndex: Adding a checkpoint because of a limited timeline\", room.roomId);\n\n        this.addRoomCheckpoint(room.roomId, false);\n    };\n\n    /**\n     * Check if an event should be added to the event index.\n     *\n     * Most notably we filter events for which decryption failed, are redacted\n     * or aren't of a type that we know how to index.\n     *\n     * @param {MatrixEvent} ev The event that should be checked.\n     * @returns {bool} Returns true if the event can be indexed, false\n     * otherwise.\n     */\n    private isValidEvent(ev: MatrixEvent): boolean {\n        const isUsefulType = [EventType.RoomMessage, EventType.RoomName, EventType.RoomTopic].includes(\n            ev.getType() as EventType,\n        );\n        const validEventType = isUsefulType && !ev.isRedacted() && !ev.isDecryptionFailure();\n\n        let validMsgType = true;\n        let hasContentValue = true;\n\n        if (ev.getType() === EventType.RoomMessage && !ev.isRedacted()) {\n            // Expand this if there are more invalid msgtypes.\n            const msgtype = ev.getContent().msgtype;\n\n            if (!msgtype) validMsgType = false;\n            else validMsgType = !msgtype.startsWith(\"m.key.verification\");\n\n            if (!ev.getContent().body) hasContentValue = false;\n        } else if (ev.getType() === EventType.RoomTopic && !ev.isRedacted()) {\n            if (!ev.getContent().topic) hasContentValue = false;\n        } else if (ev.getType() === EventType.RoomName && !ev.isRedacted()) {\n            if (!ev.getContent().name) hasContentValue = false;\n        }\n\n        return validEventType && validMsgType && hasContentValue;\n    }\n\n    private eventToJson(ev: MatrixEvent): IEventWithRoomId {\n        const e = ev.getEffectiveEvent() as any;\n\n        if (ev.isEncrypted()) {\n            // Let us store some additional data so we can re-verify the event.\n            // The js-sdk checks if an event is encrypted using the algorithm,\n            // the sender key and ed25519 signing key are used to find the\n            // correct device that sent the event which allows us to check the\n            // verification state of the event, either directly or using cross\n            // signing.\n            e.curve25519Key = ev.getSenderKey();\n            e.ed25519Key = ev.getClaimedEd25519Key();\n            e.algorithm = ev.getWireContent().algorithm;\n            e.forwardingCurve25519KeyChain = ev.getForwardingCurve25519KeyChain();\n        } else {\n            // Make sure that unencrypted events don't contain any of that data,\n            // despite what the server might give to us.\n            delete e.curve25519Key;\n            delete e.ed25519Key;\n            delete e.algorithm;\n            delete e.forwardingCurve25519KeyChain;\n        }\n\n        return e;\n    }\n\n    /**\n     * Queue up live events to be added to the event index.\n     *\n     * @param {MatrixEvent} ev The event that should be added to the index.\n     */\n    private async addLiveEventToIndex(ev: MatrixEvent): Promise<void> {\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n\n        if (!indexManager || !this.isValidEvent(ev)) return;\n\n        const e = this.eventToJson(ev);\n\n        const profile = {\n            displayname: ev.sender?.rawDisplayName,\n            avatar_url: ev.sender?.getMxcAvatarUrl(),\n        };\n\n        await indexManager.addEventToIndex(e, profile);\n    }\n\n    /**\n     * Emmit that the crawler has changed the checkpoint that it's currently\n     * handling.\n     */\n    private emitNewCheckpoint(): void {\n        this.emit(\"changedCheckpoint\", this.currentRoom());\n    }\n\n    private async addEventsFromLiveTimeline(timeline: EventTimeline): Promise<void> {\n        const events = timeline.getEvents();\n\n        for (let i = 0; i < events.length; i++) {\n            const ev = events[i];\n            await this.addLiveEventToIndex(ev);\n        }\n    }\n\n    private async addRoomCheckpoint(roomId: string, fullCrawl = false): Promise<void> {\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        if (!indexManager) return;\n        const client = MatrixClientPeg.safeGet();\n        const room = client.getRoom(roomId);\n\n        if (!room) return;\n\n        const timeline = room.getLiveTimeline();\n        const token = timeline.getPaginationToken(Direction.Backward);\n\n        if (!token) {\n            // The room doesn't contain any tokens, meaning the live timeline\n            // contains all the events, add those to the index.\n            await this.addEventsFromLiveTimeline(timeline);\n            return;\n        }\n\n        const checkpoint = {\n            roomId: room.roomId,\n            token: token,\n            fullCrawl: fullCrawl,\n            direction: Direction.Backward,\n        };\n\n        logger.log(\"EventIndex: Adding checkpoint\", checkpoint);\n\n        try {\n            await indexManager.addCrawlerCheckpoint(checkpoint);\n        } catch (e) {\n            logger.log(\"EventIndex: Error adding new checkpoint for room\", room.roomId, checkpoint, e);\n        }\n\n        this.crawlerCheckpoints.push(checkpoint);\n    }\n\n    /**\n     * The main crawler loop.\n     *\n     * Goes through crawlerCheckpoints and fetches events from the server to be\n     * added to the EventIndex.\n     *\n     * If a /room/{roomId}/messages request doesn't contain any events, stop the\n     * crawl, otherwise create a new checkpoint and push it to the\n     * crawlerCheckpoints queue, so we go through them in a round-robin way.\n     */\n    private async crawlerFunc(): Promise<void> {\n        let cancelled = false;\n\n        const client = MatrixClientPeg.safeGet();\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        if (!indexManager) return;\n\n        this.crawler = {\n            cancel: () => {\n                cancelled = true;\n            },\n        };\n\n        let idle = false;\n\n        while (!cancelled) {\n            let sleepTime = SettingsStore.getValueAt(SettingLevel.DEVICE, \"crawlerSleepTime\");\n\n            // Don't let the user configure a lower sleep time than 100 ms.\n            sleepTime = Math.max(sleepTime, 100);\n\n            if (idle) {\n                sleepTime = CRAWLER_IDLE_TIME;\n            }\n\n            if (this.currentCheckpoint !== null) {\n                this.currentCheckpoint = null;\n                this.emitNewCheckpoint();\n            }\n\n            await sleep(sleepTime);\n\n            if (cancelled) {\n                break;\n            }\n\n            const checkpoint = this.crawlerCheckpoints.shift();\n\n            /// There is no checkpoint available currently, one may appear if\n            // a sync with limited room timelines happens, so go back to sleep.\n            if (checkpoint === undefined) {\n                idle = true;\n                continue;\n            }\n\n            this.currentCheckpoint = checkpoint;\n            this.emitNewCheckpoint();\n\n            idle = false;\n\n            // We have a checkpoint, let us fetch some messages, again, very\n            // conservatively to not bother our homeserver too much.\n            const eventMapper = client.getEventMapper({ preventReEmit: true });\n            // TODO we need to ensure to use member lazy loading with this\n            // request so we get the correct profiles.\n            let res: Awaited<ReturnType<MatrixClient[\"createMessagesRequest\"]>>;\n\n            try {\n                res = await client.createMessagesRequest(\n                    checkpoint.roomId,\n                    checkpoint.token,\n                    EVENTS_PER_CRAWL,\n                    checkpoint.direction,\n                );\n            } catch (e) {\n                if (e instanceof HTTPError && e.httpStatus === 403) {\n                    logger.log(\n                        \"EventIndex: Removing checkpoint as we don't have \",\n                        \"permissions to fetch messages from this room.\",\n                        checkpoint,\n                    );\n                    try {\n                        await indexManager.removeCrawlerCheckpoint(checkpoint);\n                    } catch (e) {\n                        logger.log(\"EventIndex: Error removing checkpoint\", checkpoint, e);\n                        // We don't push the checkpoint here back, it will\n                        // hopefully be removed after a restart. But let us\n                        // ignore it for now as we don't want to hammer the\n                        // endpoint.\n                    }\n                    continue;\n                }\n\n                logger.log(\"EventIndex: Error crawling using checkpoint:\", checkpoint, \",\", e);\n                this.crawlerCheckpoints.push(checkpoint);\n                continue;\n            }\n\n            if (cancelled) {\n                this.crawlerCheckpoints.push(checkpoint);\n                break;\n            }\n\n            if (res.chunk.length === 0) {\n                logger.log(\"EventIndex: Done with the checkpoint\", checkpoint);\n                // We got to the start/end of our timeline, lets just\n                // delete our checkpoint and go back to sleep.\n                try {\n                    await indexManager.removeCrawlerCheckpoint(checkpoint);\n                } catch (e) {\n                    logger.log(\"EventIndex: Error removing checkpoint\", checkpoint, e);\n                }\n                continue;\n            }\n\n            // Convert the plain JSON events into Matrix events so they get\n            // decrypted if necessary.\n            const matrixEvents = res.chunk.map(eventMapper);\n            let stateEvents: MatrixEvent[] = [];\n            if (res.state !== undefined) {\n                stateEvents = res.state.map(eventMapper);\n            }\n\n            const profiles: Record<string, IMatrixProfile> = {};\n\n            stateEvents.forEach((ev) => {\n                if (ev.getContent().membership === KnownMembership.Join) {\n                    profiles[ev.getSender()!] = {\n                        displayname: ev.getContent().displayname,\n                        avatar_url: ev.getContent().avatar_url,\n                    };\n                }\n            });\n\n            const decryptionPromises = matrixEvents\n                .filter((event) => event.isEncrypted())\n                .map((event) => {\n                    return client.decryptEventIfNeeded(event, { emit: false });\n                });\n\n            // Let us wait for all the events to get decrypted.\n            await Promise.all(decryptionPromises);\n\n            // TODO if there are no events at this point we're missing a lot\n            // decryption keys, do we want to retry this checkpoint at a later\n            // stage?\n            const filteredEvents = matrixEvents.filter(this.isValidEvent);\n\n            // Collect the redaction events, so we can delete the redacted events from the index.\n            const redactionEvents = matrixEvents.filter((ev) => ev.isRedaction());\n\n            // Let us convert the events back into a format that EventIndex can\n            // consume.\n            const events = filteredEvents.map((ev) => {\n                const e = this.eventToJson(ev);\n\n                let profile: IMatrixProfile = {};\n                if (e.sender in profiles) profile = profiles[e.sender];\n                const object = {\n                    event: e,\n                    profile: profile,\n                };\n                return object;\n            });\n\n            let newCheckpoint: ICrawlerCheckpoint | null = null;\n\n            // The token can be null for some reason. Don't create a checkpoint\n            // in that case since adding it to the db will fail.\n            if (res.end) {\n                // Create a new checkpoint so we can continue crawling the room\n                // for messages.\n                newCheckpoint = {\n                    roomId: checkpoint.roomId,\n                    token: res.end,\n                    fullCrawl: checkpoint.fullCrawl,\n                    direction: checkpoint.direction,\n                };\n            }\n\n            try {\n                for (let i = 0; i < redactionEvents.length; i++) {\n                    const ev = redactionEvents[i];\n                    const eventId = ev.getAssociatedId();\n\n                    if (eventId) {\n                        await indexManager.deleteEvent(eventId);\n                    } else {\n                        logger.warn(\"EventIndex: Redaction event doesn't contain a valid associated event id\", ev);\n                    }\n                }\n\n                const eventsAlreadyAdded = await indexManager.addHistoricEvents(events, newCheckpoint, checkpoint);\n\n                // We didn't get a valid new checkpoint from the server, nothing\n                // to do here anymore.\n                if (!newCheckpoint) {\n                    logger.log(\n                        \"EventIndex: The server didn't return a valid \",\n                        \"new checkpoint, not continuing the crawl.\",\n                        checkpoint,\n                    );\n                    continue;\n                }\n\n                // If all events were already indexed we assume that we caught\n                // up with our index and don't need to crawl the room further.\n                // Let us delete the checkpoint in that case, otherwise push\n                // the new checkpoint to be used by the crawler.\n                if (eventsAlreadyAdded === true && newCheckpoint.fullCrawl !== true) {\n                    logger.log(\n                        \"EventIndex: Checkpoint had already all events\",\n                        \"added, stopping the crawl\",\n                        checkpoint,\n                    );\n                    await indexManager.removeCrawlerCheckpoint(newCheckpoint);\n                } else {\n                    if (eventsAlreadyAdded === true) {\n                        logger.log(\n                            \"EventIndex: Checkpoint had already all events\",\n                            \"added, but continuing due to a full crawl\",\n                            checkpoint,\n                        );\n                    }\n                    this.crawlerCheckpoints.push(newCheckpoint);\n                }\n            } catch (e) {\n                logger.log(\"EventIndex: Error during a crawl\", e);\n                // An error occurred, put the checkpoint back so we\n                // can retry.\n                this.crawlerCheckpoints.push(checkpoint);\n            }\n        }\n\n        this.crawler = null;\n    }\n\n    /**\n     * Start the crawler background task.\n     */\n    public startCrawler(): void {\n        if (this.crawler !== null) return;\n        this.crawlerFunc();\n    }\n\n    /**\n     * Stop the crawler background task.\n     */\n    public stopCrawler(): void {\n        if (this.crawler === null) return;\n        this.crawler.cancel();\n    }\n\n    /**\n     * Close the event index.\n     *\n     * This removes all the MatrixClient event listeners, stops the crawler\n     * task, and closes the index.\n     */\n    public async close(): Promise<void> {\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        this.removeListeners();\n        this.stopCrawler();\n        await indexManager?.closeEventIndex();\n    }\n\n    /**\n     * Search the event index using the given term for matching events.\n     *\n     * @param {ISearchArgs} searchArgs The search configuration for the search,\n     * sets the search term and determines the search result contents.\n     *\n     * @return {Promise<IResultRoomEvents[]>} A promise that will resolve to an array\n     * of search results once the search is done.\n     */\n    public async search(searchArgs: ISearchArgs): Promise<IResultRoomEvents | undefined> {\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        return indexManager?.searchEventIndex(searchArgs);\n    }\n\n    /**\n     * Load events that contain URLs from the event index.\n     *\n     * @param {Room} room The room for which we should fetch events containing\n     * URLs\n     *\n     * @param {number} limit The maximum number of events to fetch.\n     *\n     * @param {string} fromEvent From which event should we continue fetching\n     * events from the index. This is only needed if we're continuing to fill\n     * the timeline, e.g. if we're paginating. This needs to be set to a event\n     * id of an event that was previously fetched with this function.\n     *\n     * @param {string} direction The direction in which we will continue\n     * fetching events. EventTimeline.BACKWARDS to continue fetching events that\n     * are older than the event given in fromEvent, EventTimeline.FORWARDS to\n     * fetch newer events.\n     *\n     * @returns {Promise<MatrixEvent[]>} Resolves to an array of events that\n     * contain URLs.\n     */\n    public async loadFileEvents(\n        room: Room,\n        limit = 10,\n        fromEvent?: string,\n        direction: string = EventTimeline.BACKWARDS,\n    ): Promise<MatrixEvent[]> {\n        const client = MatrixClientPeg.safeGet();\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        if (!indexManager) return [];\n\n        const loadArgs: ILoadArgs = {\n            roomId: room.roomId,\n            limit: limit,\n        };\n\n        if (fromEvent) {\n            loadArgs.fromEvent = fromEvent;\n            loadArgs.direction = direction;\n        }\n\n        let events: IEventAndProfile[];\n\n        // Get our events from the event index.\n        try {\n            events = await indexManager.loadFileEvents(loadArgs);\n        } catch (e) {\n            logger.log(\"EventIndex: Error getting file events\", e);\n            return [];\n        }\n\n        const eventMapper = client.getEventMapper();\n\n        // Turn the events into MatrixEvent objects.\n        const matrixEvents = events.map((e) => {\n            const matrixEvent = eventMapper(e.event);\n\n            const member = new RoomMember(room.roomId, matrixEvent.getSender()!);\n\n            // We can't really reconstruct the whole room state from our\n            // EventIndex to calculate the correct display name. Use the\n            // disambiguated form always instead.\n            member.name = e.profile.displayname + \" (\" + matrixEvent.getSender() + \")\";\n\n            // This is sets the avatar URL.\n            const memberEvent = eventMapper({\n                content: {\n                    membership: KnownMembership.Join,\n                    avatar_url: e.profile.avatar_url,\n                    displayname: e.profile.displayname,\n                },\n                type: EventType.RoomMember,\n                event_id: matrixEvent.getId() + \":eventIndex\",\n                room_id: matrixEvent.getRoomId(),\n                sender: matrixEvent.getSender(),\n                origin_server_ts: matrixEvent.getTs(),\n                state_key: matrixEvent.getSender(),\n            });\n\n            // We set this manually to avoid emitting RoomMember.membership and\n            // RoomMember.name events.\n            member.events.member = memberEvent;\n            matrixEvent.sender = member;\n\n            return matrixEvent;\n        });\n\n        return matrixEvents;\n    }\n\n    /**\n     * Fill a timeline with events that contain URLs.\n     *\n     * @param {TimelineSet} timelineSet The TimelineSet the Timeline belongs to,\n     * used to check if we're adding duplicate events.\n     *\n     * @param {Timeline} timeline The Timeline which should be filed with\n     * events.\n     *\n     * @param {Room} room The room for which we should fetch events containing\n     * URLs\n     *\n     * @param {number} limit The maximum number of events to fetch.\n     *\n     * @param {string} fromEvent From which event should we continue fetching\n     * events from the index. This is only needed if we're continuing to fill\n     * the timeline, e.g. if we're paginating. This needs to be set to a event\n     * id of an event that was previously fetched with this function.\n     *\n     * @param {string} direction The direction in which we will continue\n     * fetching events. EventTimeline.BACKWARDS to continue fetching events that\n     * are older than the event given in fromEvent, EventTimeline.FORWARDS to\n     * fetch newer events.\n     *\n     * @returns {Promise<boolean>} Resolves to true if events were added to the\n     * timeline, false otherwise.\n     */\n    public async populateFileTimeline(\n        timelineSet: EventTimelineSet,\n        timeline: EventTimeline,\n        room: Room,\n        limit = 10,\n        fromEvent?: string,\n        direction: string = EventTimeline.BACKWARDS,\n    ): Promise<boolean> {\n        const matrixEvents = await this.loadFileEvents(room, limit, fromEvent, direction);\n\n        // If this is a normal fill request, not a pagination request, we need\n        // to get our events in the BACKWARDS direction but populate them in the\n        // forwards direction.\n        // This needs to happen because a fill request might come with an\n        // existing timeline e.g. if you close and re-open the FilePanel.\n        if (fromEvent === null) {\n            matrixEvents.reverse();\n            direction = direction == EventTimeline.BACKWARDS ? EventTimeline.FORWARDS : EventTimeline.BACKWARDS;\n        }\n\n        // Add the events to the timeline of the file panel.\n        matrixEvents.forEach((e) => {\n            if (!timelineSet.eventIdToTimeline(e.getId()!)) {\n                timelineSet.addEventToTimeline(e, timeline, {\n                    toStartOfTimeline: direction == EventTimeline.BACKWARDS,\n                    fromCache: false,\n                    addToState: false,\n                });\n            }\n        });\n\n        let ret = false;\n        let paginationToken = \"\";\n\n        // Set the pagination token to the oldest event that we retrieved.\n        if (matrixEvents.length > 0) {\n            paginationToken = matrixEvents[matrixEvents.length - 1].getId()!;\n            ret = true;\n        }\n\n        logger.log(\n            \"EventIndex: Populating file panel with\",\n            matrixEvents.length,\n            \"events and setting the pagination token to\",\n            paginationToken,\n        );\n\n        timeline.setPaginationToken(paginationToken, EventTimeline.BACKWARDS);\n        return ret;\n    }\n\n    /**\n     * Emulate a TimelineWindow pagination() request with the event index as the event source\n     *\n     * Might not fetch events from the index if the timeline already contains\n     * events that the window isn't showing.\n     *\n     * @param {Room} room The room for which we should fetch events containing\n     * URLs\n     *\n     * @param {TimelineWindow} timelineWindow The timeline window that should be\n     * populated with new events.\n     *\n     * @param {string} direction The direction in which we should paginate.\n     * EventTimeline.BACKWARDS to paginate back, EventTimeline.FORWARDS to\n     * paginate forwards.\n     *\n     * @param {number} limit The maximum number of events to fetch while\n     * paginating.\n     *\n     * @returns {Promise<boolean>} Resolves to a boolean which is true if more\n     * events were successfully retrieved.\n     */\n    public paginateTimelineWindow(\n        room: Room,\n        timelineWindow: TimelineWindow,\n        direction: Direction,\n        limit: number,\n    ): Promise<boolean> {\n        const tl = timelineWindow.getTimelineIndex(direction);\n\n        if (!tl) return Promise.resolve(false);\n        if (tl.pendingPaginate) return tl.pendingPaginate;\n\n        if (timelineWindow.extend(direction, limit)) {\n            return Promise.resolve(true);\n        }\n\n        const paginationMethod = async (\n            timelineWindow: TimelineWindow,\n            timelineIndex: TimelineIndex,\n            room: Room,\n            direction: Direction,\n            limit: number,\n        ): Promise<boolean> => {\n            const timeline = timelineIndex.timeline;\n            const timelineSet = timeline.getTimelineSet();\n            const token = timeline.getPaginationToken(direction) ?? undefined;\n\n            const ret = await this.populateFileTimeline(timelineSet, timeline, room, limit, token, direction);\n\n            timelineIndex.pendingPaginate = undefined;\n            timelineWindow.extend(direction, limit);\n\n            return ret;\n        };\n\n        const paginationPromise = paginationMethod(timelineWindow, tl, room, direction, limit);\n        tl.pendingPaginate = paginationPromise;\n\n        return paginationPromise;\n    }\n\n    /**\n     * Get statistical information of the index.\n     *\n     * @return {Promise<IIndexStats>} A promise that will resolve to the index\n     * statistics.\n     */\n    public async getStats(): Promise<IIndexStats | undefined> {\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        return indexManager?.getStats();\n    }\n\n    /**\n     * Check if the room with the given id is already indexed.\n     *\n     * @param {string} roomId The ID of the room which we want to check if it\n     * has been already indexed.\n     *\n     * @return {Promise<boolean>} Returns true if the index contains events for\n     * the given room, false otherwise.\n     */\n    public async isRoomIndexed(roomId: string): Promise<boolean | undefined> {\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        return indexManager?.isRoomIndexed(roomId);\n    }\n\n    /**\n     * Get the room that we are currently crawling.\n     *\n     * @returns {Room} A MatrixRoom that is being currently crawled, null\n     * if no room is currently being crawled.\n     */\n    public currentRoom(): Room | null {\n        if (this.currentCheckpoint === null && this.crawlerCheckpoints.length === 0) {\n            return null;\n        }\n\n        const client = MatrixClientPeg.safeGet();\n\n        if (this.currentCheckpoint !== null) {\n            return client.getRoom(this.currentCheckpoint.roomId);\n        } else {\n            return client.getRoom(this.crawlerCheckpoints[0].roomId);\n        }\n    }\n\n    public crawlingRooms(): {\n        crawlingRooms: Set<string>;\n        totalRooms: Set<string>;\n    } {\n        const totalRooms = new Set<string>();\n        const crawlingRooms = new Set<string>();\n\n        this.crawlerCheckpoints.forEach((checkpoint, index) => {\n            crawlingRooms.add(checkpoint.roomId);\n        });\n\n        if (this.currentCheckpoint !== null) {\n            crawlingRooms.add(this.currentCheckpoint.roomId);\n        }\n\n        const client = MatrixClientPeg.safeGet();\n        const rooms = client.getRooms();\n\n        const isRoomEncrypted = (room: Room): boolean => {\n            return client.isRoomEncrypted(room.roomId);\n        };\n\n        const encryptedRooms = rooms.filter(isRoomEncrypted);\n        encryptedRooms.forEach((room, index) => {\n            totalRooms.add(room.roomId);\n        });\n\n        return { crawlingRooms, totalRooms };\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2019-2021 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\n/*\n * Object holding the global EventIndex object. Can only be initialized if the\n * platform supports event indexing.\n */\n\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport PlatformPeg from \"../PlatformPeg\";\nimport EventIndex from \"../indexing/EventIndex\";\nimport { MatrixClientPeg } from \"../MatrixClientPeg\";\nimport SettingsStore from \"../settings/SettingsStore\";\nimport { SettingLevel } from \"../settings/SettingLevel\";\n\nconst INDEX_VERSION = 1;\n\n/**\n * Holds the current instance of the `EventIndex` to use across the codebase.\n * Looking for an `EventIndex`? Just look for the `EventIndexPeg` on the peg\n * board. \"Peg\" is the literal meaning of something you hang something on. So\n * you'll find a `EventIndex` hanging on the `EventIndexPeg`.\n */\nexport class EventIndexPeg {\n    public index: EventIndex | null = null;\n    public error: unknown;\n\n    private _supportIsInstalled = false;\n\n    /**\n     * Initialize the EventIndexPeg and if event indexing is enabled initialize\n     * the event index.\n     *\n     * @return {Promise<boolean>} A promise that will resolve to true if an\n     * EventIndex was successfully initialized, false otherwise.\n     */\n    public async init(): Promise<boolean> {\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        if (!indexManager) {\n            logger.log(\"EventIndex: Platform doesn't support event indexing, not initializing.\");\n            return false;\n        }\n\n        this._supportIsInstalled = await indexManager.supportsEventIndexing();\n\n        if (!this.supportIsInstalled()) {\n            logger.log(\"EventIndex: Event indexing isn't installed for the platform, not initializing.\");\n            return false;\n        }\n\n        if (!SettingsStore.getValueAt(SettingLevel.DEVICE, \"enableEventIndexing\")) {\n            logger.log(\"EventIndex: Event indexing is disabled, not initializing\");\n            return false;\n        }\n\n        return this.initEventIndex();\n    }\n\n    /**\n     * Initialize the event index.\n     *\n     * @returns {boolean} True if the event index was successfully initialized,\n     * false otherwise.\n     */\n    public async initEventIndex(): Promise<boolean> {\n        const index = new EventIndex();\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n        const client = MatrixClientPeg.get();\n        if (!indexManager || !client) {\n            throw new Error(\"Unable to init event index\");\n        }\n\n        const userId = client.getUserId()!;\n        const deviceId = client.getDeviceId()!;\n\n        try {\n            await indexManager.initEventIndex(userId, deviceId);\n\n            const userVersion = await indexManager.getUserVersion();\n            const eventIndexIsEmpty = await indexManager.isEventIndexEmpty();\n\n            if (eventIndexIsEmpty) {\n                await indexManager.setUserVersion(INDEX_VERSION);\n            } else if (userVersion === 0 && !eventIndexIsEmpty) {\n                await indexManager.closeEventIndex();\n                await this.deleteEventIndex();\n\n                await indexManager.initEventIndex(userId, deviceId);\n                await indexManager.setUserVersion(INDEX_VERSION);\n            }\n\n            logger.log(\"EventIndex: Successfully initialized the event index\");\n            await index.init();\n        } catch (e) {\n            logger.log(\"EventIndex: Error initializing the event index\", e);\n            this.error = e;\n            return false;\n        }\n\n        this.index = index;\n\n        return true;\n    }\n\n    /**\n     * Check if the current platform has support for event indexing.\n     *\n     * @return {boolean} True if it has support, false otherwise. Note that this\n     * does not mean that support is installed.\n     */\n    public platformHasSupport(): boolean {\n        return PlatformPeg.get()?.getEventIndexingManager() != null;\n    }\n\n    /**\n     * Check if event indexing support is installed for the platform.\n     *\n     * Event indexing might require additional optional modules to be installed,\n     * this tells us if those are installed. Note that this should only be\n     * called after the init() method was called.\n     *\n     * @return {boolean} True if support is installed, false otherwise.\n     */\n    public supportIsInstalled(): boolean {\n        return this._supportIsInstalled;\n    }\n\n    /**\n     * Get the current event index.\n     *\n     * @return {EventIndex} The current event index.\n     */\n    public get(): EventIndex | null {\n        return this.index;\n    }\n\n    public start(): void {\n        if (this.index === null) return;\n        this.index.startCrawler();\n    }\n\n    public stop(): void {\n        if (this.index === null) return;\n        this.index.stopCrawler();\n    }\n\n    /**\n     * Unset our event store\n     *\n     * After a call to this the init() method will need to be called again.\n     *\n     * @return {Promise} A promise that will resolve once the event index is\n     * closed.\n     */\n    public async unset(): Promise<void> {\n        if (this.index === null) return;\n        await this.index.close();\n        this.index = null;\n    }\n\n    /**\n     * Delete our event indexer.\n     *\n     * After a call to this the init() method will need to be called again.\n     *\n     * @return {Promise} A promise that will resolve once the event index is\n     * deleted.\n     */\n    public async deleteEventIndex(): Promise<void> {\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\n\n        if (indexManager) {\n            await this.unset();\n            logger.log(\"EventIndex: Deleting event index.\");\n            await indexManager.deleteEventIndex();\n        }\n    }\n}\n\nif (!window.mxEventIndexPeg) {\n    window.mxEventIndexPeg = new EventIndexPeg();\n}\nexport default window.mxEventIndexPeg;\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020-2024 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport EventEmitter from \"events\";\nimport {\n    KeyBackupInfo,\n    VerificationPhase,\n    VerificationRequest,\n    VerificationRequestEvent,\n    CryptoEvent,\n} from \"matrix-js-sdk/src/crypto-api\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\nimport { Device, SecretStorage } from \"matrix-js-sdk/src/matrix\";\n\nimport { MatrixClientPeg } from \"../MatrixClientPeg\";\nimport { AccessCancelledError, accessSecretStorage } from \"../SecurityManager\";\nimport { SdkContextClass } from \"../contexts/SDKContext\";\nimport { asyncSome } from \"../utils/arrays\";\nimport { initialiseDehydration } from \"../utils/device/dehydration\";\n\nexport enum Phase {\n    Loading = 0,\n    Intro = 1,\n    Busy = 2,\n    Done = 3, // final done stage, but still showing UX\n    ConfirmSkip = 4,\n    Finished = 5, // UX can be closed\n    ConfirmReset = 6,\n}\n\nexport class SetupEncryptionStore extends EventEmitter {\n    private started?: boolean;\n    public phase?: Phase;\n    public verificationRequest: VerificationRequest | null = null;\n    public backupInfo: KeyBackupInfo | null = null;\n    // ID of the key that the secrets we want are encrypted with\n    public keyId: string | null = null;\n    // Descriptor of the key that the secrets we want are encrypted with\n    public keyInfo: SecretStorage.SecretStorageKeyDescription | null = null;\n    public hasDevicesToVerifyAgainst?: boolean;\n\n    public static sharedInstance(): SetupEncryptionStore {\n        if (!window.mxSetupEncryptionStore) window.mxSetupEncryptionStore = new SetupEncryptionStore();\n        return window.mxSetupEncryptionStore;\n    }\n\n    public start(): void {\n        if (this.started) {\n            return;\n        }\n        this.started = true;\n        this.phase = Phase.Loading;\n\n        const cli = MatrixClientPeg.safeGet();\n        cli.on(CryptoEvent.VerificationRequestReceived, this.onVerificationRequest);\n        cli.on(CryptoEvent.UserTrustStatusChanged, this.onUserTrustStatusChanged);\n\n        const requestsInProgress = cli.getCrypto()!.getVerificationRequestsToDeviceInProgress(cli.getUserId()!);\n        if (requestsInProgress.length) {\n            // If there are multiple, we take the most recent. Equally if the user sends another request from\n            // another device after this screen has been shown, we'll switch to the new one, so this\n            // generally doesn't support multiple requests.\n            this.setActiveVerificationRequest(requestsInProgress[requestsInProgress.length - 1]);\n        }\n\n        this.fetchKeyInfo();\n    }\n\n    public stop(): void {\n        if (!this.started) {\n            return;\n        }\n        this.started = false;\n        this.verificationRequest?.off(VerificationRequestEvent.Change, this.onVerificationRequestChange);\n\n        const cli = MatrixClientPeg.get();\n        if (!!cli) {\n            cli.removeListener(CryptoEvent.VerificationRequestReceived, this.onVerificationRequest);\n            cli.removeListener(CryptoEvent.UserTrustStatusChanged, this.onUserTrustStatusChanged);\n        }\n    }\n\n    public async fetchKeyInfo(): Promise<void> {\n        if (!this.started) return; // bail if we were stopped\n        const cli = MatrixClientPeg.safeGet();\n        const keys = await cli.secretStorage.isStored(\"m.cross_signing.master\");\n        if (keys === null || Object.keys(keys).length === 0) {\n            this.keyId = null;\n            this.keyInfo = null;\n        } else {\n            // If the secret is stored under more than one key, we just pick an arbitrary one\n            this.keyId = Object.keys(keys)[0];\n            this.keyInfo = keys[this.keyId];\n        }\n\n        const ownUserId = cli.getUserId()!;\n        const crypto = cli.getCrypto()!;\n        // do we have any other verified devices which are E2EE which we can verify against?\n        const userDevices: Iterable<Device> =\n            (await crypto.getUserDeviceInfo([ownUserId])).get(ownUserId)?.values() ?? [];\n        this.hasDevicesToVerifyAgainst = await asyncSome(userDevices, async (device) => {\n            // Ignore dehydrated devices. MSC3814 proposes that devices\n            // should set a `dehydrated` flag in the device key.\n            if (device.dehydrated) return false;\n\n            // ignore devices without an identity key\n            if (!device.getIdentityKey()) return false;\n\n            const verificationStatus = await crypto.getDeviceVerificationStatus(ownUserId, device.deviceId);\n            return !!verificationStatus?.signedByOwner;\n        });\n\n        this.phase = Phase.Intro;\n        this.emit(\"update\");\n    }\n\n    public async usePassPhrase(): Promise<void> {\n        logger.debug(\"SetupEncryptionStore.usePassphrase\");\n        this.phase = Phase.Busy;\n        this.emit(\"update\");\n        try {\n            const cli = MatrixClientPeg.safeGet();\n            const backupInfo = (await cli.getCrypto()?.getKeyBackupInfo()) ?? null;\n            this.backupInfo = backupInfo;\n            this.emit(\"update\");\n\n            await new Promise((resolve: (value?: unknown) => void, reject: (reason?: any) => void) => {\n                accessSecretStorage(async (): Promise<void> => {\n                    // `accessSecretStorage` will call `boostrapCrossSigning` and `bootstrapSecretStorage`, so that\n                    // should be enough to ensure that our device is correctly cross-signed.\n                    //\n                    // The remaining tasks (device dehydration and restoring key backup) may take some time due to\n                    // processing many to-device messages in the case of device dehydration, or having many keys to\n                    // restore in the case of key backups, so we allow the dialog to advance before this.\n                    //\n                    // However, we need to keep the 4S key cached, so we stay inside `accessSecretStorage`.\n                    logger.debug(\n                        \"SetupEncryptionStore.usePassphrase: cross-signing and secret storage set up; checking \" +\n                            \"dehydration and backup in the background\",\n                    );\n                    resolve();\n\n                    await initialiseDehydration();\n\n                    if (backupInfo) {\n                        await cli.getCrypto()?.loadSessionBackupPrivateKeyFromSecretStorage();\n                        await cli.getCrypto()?.restoreKeyBackup();\n                    }\n                }).catch(reject);\n            });\n\n            if (await cli.getCrypto()?.getCrossSigningKeyId()) {\n                logger.debug(\"SetupEncryptionStore.usePassphrase: done\");\n                this.phase = Phase.Done;\n                this.emit(\"update\");\n            }\n        } catch (e) {\n            if (e instanceof AccessCancelledError) {\n                logger.debug(\"SetupEncryptionStore.usePassphrase: user cancelled access to secret storage\");\n            } else {\n                logger.log(\"SetupEncryptionStore.usePassphrase: error\", e);\n            }\n\n            this.phase = Phase.Intro;\n            this.emit(\"update\");\n        }\n    }\n\n    private onUserTrustStatusChanged = async (userId: string): Promise<void> => {\n        if (userId !== MatrixClientPeg.safeGet().getSafeUserId()) return;\n        const publicKeysTrusted = await MatrixClientPeg.safeGet().getCrypto()?.getCrossSigningKeyId();\n        if (publicKeysTrusted) {\n            this.phase = Phase.Done;\n            this.emit(\"update\");\n        }\n    };\n\n    public onVerificationRequest = (request: VerificationRequest): void => {\n        this.setActiveVerificationRequest(request);\n    };\n\n    public onVerificationRequestChange = async (): Promise<void> => {\n        if (this.verificationRequest?.phase === VerificationPhase.Cancelled) {\n            this.verificationRequest.off(VerificationRequestEvent.Change, this.onVerificationRequestChange);\n            this.verificationRequest = null;\n            this.emit(\"update\");\n        } else if (this.verificationRequest?.phase === VerificationPhase.Done) {\n            this.verificationRequest.off(VerificationRequestEvent.Change, this.onVerificationRequestChange);\n            this.verificationRequest = null;\n            // At this point, the verification has finished, we just need to wait for\n            // cross signing to be ready to use, so wait for the user trust status to\n            // change (or change to DONE if it's already ready).\n            const publicKeysTrusted = await MatrixClientPeg.safeGet().getCrypto()?.getCrossSigningKeyId();\n            this.phase = publicKeysTrusted ? Phase.Done : Phase.Busy;\n            this.emit(\"update\");\n        }\n    };\n\n    public skip(): void {\n        this.phase = Phase.ConfirmSkip;\n        this.emit(\"update\");\n    }\n\n    public skipConfirm(): void {\n        this.phase = Phase.Finished;\n        this.emit(\"update\");\n    }\n\n    public returnAfterSkip(): void {\n        this.phase = Phase.Intro;\n        this.emit(\"update\");\n    }\n\n    public reset(): void {\n        this.phase = Phase.ConfirmReset;\n        this.emit(\"update\");\n    }\n\n    public async resetConfirm(): Promise<void> {\n        try {\n            // If we've gotten here, the user presumably lost their\n            // secret storage key if they had one. Start by resetting\n            // secret storage and setting up a new recovery key, then\n            // create new cross-signing keys once that succeeds.\n            await accessSecretStorage(\n                async (): Promise<void> => {\n                    this.phase = Phase.Finished;\n                },\n                {\n                    forceReset: true,\n                    resetCrossSigning: true,\n                    accountPassword: SdkContextClass.instance.accountPasswordStore.getPassword(),\n                },\n            );\n        } catch (e) {\n            logger.error(\"Error resetting cross-signing\", e);\n            this.phase = Phase.Intro;\n        }\n        this.emit(\"update\");\n    }\n\n    public returnAfterReset(): void {\n        this.phase = Phase.Intro;\n        this.emit(\"update\");\n    }\n\n    public done(): void {\n        this.phase = Phase.Finished;\n        this.emit(\"update\");\n    }\n\n    private async setActiveVerificationRequest(request: VerificationRequest): Promise<void> {\n        if (!this.started) return; // bail if we were stopped\n        if (request.otherUserId !== MatrixClientPeg.safeGet().getUserId()) return;\n\n        if (this.verificationRequest) {\n            this.verificationRequest.off(VerificationRequestEvent.Change, this.onVerificationRequestChange);\n        }\n        this.verificationRequest = request;\n        await request.accept();\n        request.on(VerificationRequestEvent.Change, this.onVerificationRequestChange);\n        this.emit(\"update\");\n    }\n\n    public lostKeys(): boolean {\n        return !this.hasDevicesToVerifyAgainst && !this.keyInfo;\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport EventEmitter from \"events\";\nimport { base32 } from \"rfc4648\";\nimport { RoomType } from \"matrix-js-sdk/src/matrix\";\n\n// Dev note: the interface is split in two so we don't have to disable the\n// linter across the whole project.\nexport interface IThreepidInviteWireFormat {\n    email: string;\n    signurl: string;\n    room_name: string; // eslint-disable-line camelcase\n    room_avatar_url: string; // eslint-disable-line camelcase\n    inviter_name: string; // eslint-disable-line camelcase\n\n    // TODO: Figure out if these are ever populated\n    guest_access_token?: string; // eslint-disable-line camelcase\n    guest_user_id?: string; // eslint-disable-line camelcase\n}\n\ninterface IPersistedThreepidInvite extends IThreepidInviteWireFormat {\n    roomId: string;\n}\n\nexport interface IThreepidInvite {\n    id: string; // generated by us\n    roomId: string;\n    toEmail: string;\n    signUrl: string;\n    roomName: string;\n    roomAvatarUrl: string;\n    inviterName: string;\n}\n\n// Any data about the room that would normally come from the homeserver\n// but has been passed out-of-band, eg. the room name and avatar URL\n// from an email invite (a workaround for the fact that we can't\n// get this information from the HS using an email invite).\nexport interface IOOBData {\n    name?: string; // The room's name\n    avatarUrl?: string; // The mxc:// avatar URL for the room\n    inviterName?: string; // The display name of the person who invited us to the room\n    // eslint-disable-next-line camelcase\n    room_name?: string; // The name of the room, to be used until we are told better by the server\n    roomType?: RoomType | string; // The type of the room, to be used until we are told better by the server\n}\n\nconst STORAGE_PREFIX = \"mx_threepid_invite_\";\n\nexport default class ThreepidInviteStore extends EventEmitter {\n    private static _instance: ThreepidInviteStore;\n\n    public static get instance(): ThreepidInviteStore {\n        if (!ThreepidInviteStore._instance) {\n            ThreepidInviteStore._instance = new ThreepidInviteStore();\n        }\n        return ThreepidInviteStore._instance;\n    }\n\n    public storeInvite(roomId: string, wireInvite: IThreepidInviteWireFormat): IThreepidInvite {\n        const invite = <IPersistedThreepidInvite>{ roomId, ...wireInvite };\n        const id = this.generateIdOf(invite);\n        localStorage.setItem(`${STORAGE_PREFIX}${id}`, JSON.stringify(invite));\n        return this.translateInvite(invite);\n    }\n\n    public getWireInvites(): IPersistedThreepidInvite[] {\n        const results: IPersistedThreepidInvite[] = [];\n        for (let i = 0; i < localStorage.length; i++) {\n            const keyName = localStorage.key(i);\n            if (!keyName?.startsWith(STORAGE_PREFIX)) continue;\n            try {\n                results.push(JSON.parse(localStorage.getItem(keyName)!) as IPersistedThreepidInvite);\n            } catch (e) {\n                console.warn(\"Failed to parse 3pid invite\", e);\n            }\n        }\n        return results;\n    }\n\n    public getInvites(): IThreepidInvite[] {\n        return this.getWireInvites().map((i) => this.translateInvite(i));\n    }\n\n    // Currently Element can only handle one invite at a time, so handle that\n    public pickBestInvite(): IThreepidInvite {\n        return this.getInvites()[0];\n    }\n\n    public resolveInvite(invite: IThreepidInvite): void {\n        localStorage.removeItem(`${STORAGE_PREFIX}${invite.id}`);\n    }\n\n    private generateIdOf(persisted: IPersistedThreepidInvite): string {\n        // Use a consistent \"hash\" to form an ID.\n        return base32.stringify(new TextEncoder().encode(JSON.stringify(persisted)));\n    }\n\n    private translateInvite(persisted: IPersistedThreepidInvite): IThreepidInvite {\n        return {\n            id: this.generateIdOf(persisted),\n            roomId: persisted.roomId,\n            toEmail: persisted.email,\n            signUrl: persisted.signurl,\n            roomName: persisted.room_name,\n            roomAvatarUrl: persisted.room_avatar_url,\n            inviterName: persisted.inviter_name,\n        };\n    }\n\n    public translateToWireFormat(invite: IThreepidInvite): IThreepidInviteWireFormat {\n        return {\n            email: invite.toEmail,\n            signurl: invite.signUrl,\n            room_name: invite.roomName,\n            room_avatar_url: invite.roomAvatarUrl,\n            inviter_name: invite.inviterName,\n        };\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport {\n    MatrixEvent,\n    IContent,\n    MatrixClient,\n    EventType,\n    MsgType,\n    M_POLL_END,\n    M_POLL_START,\n    M_BEACON_INFO,\n} from \"matrix-js-sdk/src/matrix\";\n\nimport SettingsStore from \"../settings/SettingsStore\";\nimport { haveRendererForEvent, JitsiEventFactory, JSONEventFactory, pickFactory } from \"../events/EventTileFactory\";\nimport { getMessageModerationState, isLocationEvent, MessageModerationState } from \"./EventUtils\";\nimport { ElementCall } from \"../models/Call\";\n\nconst calcIsInfoMessage = (\n    eventType: EventType | string,\n    content: IContent,\n    isBubbleMessage: boolean,\n    isLeftAlignedBubbleMessage: boolean,\n): boolean => {\n    return (\n        !isBubbleMessage &&\n        !isLeftAlignedBubbleMessage &&\n        eventType !== EventType.RoomMessage &&\n        eventType !== EventType.RoomMessageEncrypted &&\n        eventType !== EventType.Sticker &&\n        eventType !== EventType.RoomCreate &&\n        !M_POLL_START.matches(eventType) &&\n        !M_POLL_END.matches(eventType) &&\n        !M_BEACON_INFO.matches(eventType)\n    );\n};\n\nexport function getEventDisplayInfo(\n    matrixClient: MatrixClient,\n    mxEvent: MatrixEvent,\n    showHiddenEvents: boolean,\n    hideEvent?: boolean,\n): {\n    isInfoMessage: boolean;\n    hasRenderer: boolean;\n    isBubbleMessage: boolean;\n    isLeftAlignedBubbleMessage: boolean;\n    noBubbleEvent: boolean;\n    isSeeingThroughMessageHiddenForModeration: boolean;\n} {\n    const content = mxEvent.getContent();\n    const msgtype = content.msgtype;\n    const eventType = mxEvent.getType();\n\n    let isSeeingThroughMessageHiddenForModeration = false;\n    if (SettingsStore.getValue(\"feature_msc3531_hide_messages_pending_moderation\")) {\n        switch (getMessageModerationState(mxEvent, matrixClient)) {\n            case MessageModerationState.VISIBLE_FOR_ALL:\n            case MessageModerationState.HIDDEN_TO_CURRENT_USER:\n                // Nothing specific to do here\n                break;\n            case MessageModerationState.SEE_THROUGH_FOR_CURRENT_USER:\n                // Show message with a marker.\n                isSeeingThroughMessageHiddenForModeration = true;\n                break;\n        }\n    }\n\n    let factory = pickFactory(mxEvent, matrixClient, showHiddenEvents);\n\n    // Info messages are basically information about commands processed on a room\n    let isBubbleMessage =\n        eventType.startsWith(\"m.key.verification\") ||\n        (eventType === EventType.RoomMessage && msgtype?.startsWith(\"m.key.verification\")) ||\n        eventType === EventType.RoomCreate ||\n        eventType === EventType.RoomEncryption ||\n        factory === JitsiEventFactory;\n    const isLeftAlignedBubbleMessage =\n        !isBubbleMessage && (eventType === EventType.CallInvite || ElementCall.CALL_EVENT_TYPE.matches(eventType));\n    let isInfoMessage = calcIsInfoMessage(eventType, content, isBubbleMessage, isLeftAlignedBubbleMessage);\n    // Some non-info messages want to be rendered in the appropriate bubble column but without the bubble background\n    const noBubbleEvent =\n        (eventType === EventType.RoomMessage && msgtype === MsgType.Emote) ||\n        M_POLL_START.matches(eventType) ||\n        M_BEACON_INFO.matches(eventType) ||\n        isLocationEvent(mxEvent);\n\n    // If we're showing hidden events in the timeline, we should use the\n    // source tile when there's no regular tile for an event and also for\n    // replace relations (which otherwise would display as a confusing\n    // duplicate of the thing they are replacing).\n    if (hideEvent || !haveRendererForEvent(mxEvent, matrixClient, showHiddenEvents)) {\n        // forcefully ask for a factory for a hidden event (hidden event setting is checked internally)\n        factory = pickFactory(mxEvent, matrixClient, showHiddenEvents, true);\n        if (factory === JSONEventFactory) {\n            isBubbleMessage = false;\n            // Reuse info message avatar and sender profile styling\n            isInfoMessage = true;\n        }\n    }\n\n    return {\n        hasRenderer: !!factory,\n        isInfoMessage,\n        isBubbleMessage,\n        isLeftAlignedBubbleMessage,\n        noBubbleEvent,\n        isSeeingThroughMessageHiddenForModeration,\n    };\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { MatrixClient } from \"matrix-js-sdk/src/matrix\";\n\nimport BasePlatform from \"../../BasePlatform\";\nimport { IConfigOptions } from \"../../IConfigOptions\";\nimport { DeepReadonly } from \"../../@types/common\";\n\nexport type DeviceClientInformation = {\n    name?: string;\n    version?: string;\n    url?: string;\n};\n\nconst formatUrl = (): string | undefined => {\n    // don't record url for electron clients\n    if (window.electron) {\n        return undefined;\n    }\n\n    // strip query-string and fragment from uri\n    const url = new URL(window.location.href);\n\n    return [\n        url.host,\n        url.pathname.replace(/\\/$/, \"\"), // Remove trailing slash if present\n    ].join(\"\");\n};\n\nconst clientInformationEventPrefix = \"io.element.matrix_client_information.\";\nexport const getClientInformationEventType = (deviceId: string): string => `${clientInformationEventPrefix}${deviceId}`;\n\n/**\n * Record extra client information for the current device\n * https://github.com/vector-im/element-meta/blob/develop/spec/matrix_client_information.md\n */\nexport const recordClientInformation = async (\n    matrixClient: MatrixClient,\n    sdkConfig: DeepReadonly<IConfigOptions>,\n    platform?: BasePlatform,\n): Promise<void> => {\n    const deviceId = matrixClient.getDeviceId()!;\n    const { brand } = sdkConfig;\n    const version = await platform?.getAppVersion();\n    const type = getClientInformationEventType(deviceId);\n    const url = formatUrl();\n\n    await matrixClient.setAccountData(type, {\n        name: brand,\n        version,\n        url,\n    });\n};\n\n/**\n * Remove client information events for devices that no longer exist\n * @param validDeviceIds - ids of current devices,\n *                      client information for devices NOT in this list will be removed\n */\nexport const pruneClientInformation = (validDeviceIds: string[], matrixClient: MatrixClient): void => {\n    Array.from(matrixClient.store.accountData.values()).forEach((event) => {\n        if (!event.getType().startsWith(clientInformationEventPrefix)) {\n            return;\n        }\n        const [, deviceId] = event.getType().split(clientInformationEventPrefix);\n        if (deviceId && !validDeviceIds.includes(deviceId)) {\n            matrixClient.deleteAccountData(event.getType());\n        }\n    });\n};\n\n/**\n * Remove extra client information for current device\n */\nexport const removeClientInformation = async (matrixClient: MatrixClient): Promise<void> => {\n    const deviceId = matrixClient.getDeviceId()!;\n    const type = getClientInformationEventType(deviceId);\n    const clientInformation = getDeviceClientInformation(matrixClient, deviceId);\n\n    // if a non-empty client info event exists, remove it\n    if (clientInformation.name || clientInformation.version || clientInformation.url) {\n        await matrixClient.deleteAccountData(type);\n    }\n};\n\nconst sanitizeContentString = (value: unknown): string | undefined =>\n    value && typeof value === \"string\" ? value : undefined;\n\nexport const getDeviceClientInformation = (matrixClient: MatrixClient, deviceId: string): DeviceClientInformation => {\n    const event = matrixClient.getAccountData(getClientInformationEventType(deviceId));\n\n    if (!event) {\n        return {};\n    }\n\n    const { name, version, url } = event.getContent();\n\n    return {\n        name: sanitizeContentString(name),\n        version: sanitizeContentString(version),\n        url: sanitizeContentString(url),\n    };\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2024 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { logger } from \"matrix-js-sdk/src/logger\";\nimport { CryptoApi } from \"matrix-js-sdk/src/crypto-api\";\n\nimport { MatrixClientPeg } from \"../../MatrixClientPeg\";\n\n/**\n * Check if device dehydration is enabled.\n *\n * Note that this doesn't necessarily mean that device dehydration has been initialised\n * (yet) on this client; rather, it means that the server supports it, the crypto backend\n * supports it, and the application configuration suggests that it *should* be\n * initialised on this device.\n *\n * Dehydration can currently only be enabled by setting a flag in the .well-known file.\n */\nasync function deviceDehydrationEnabled(crypto: CryptoApi | undefined): Promise<boolean> {\n    if (!crypto) {\n        return false;\n    }\n    if (!(await crypto.isDehydrationSupported())) {\n        return false;\n    }\n    const wellknown = await MatrixClientPeg.safeGet().waitForClientWellKnown();\n    return !!wellknown?.[\"org.matrix.msc3814\"];\n}\n\n/**\n * If dehydration is enabled (i.e., it is supported by the server and enabled in\n * the configuration), rehydrate a device (if available) and create\n * a new dehydrated device.\n *\n * @param createNewKey: force a new dehydration key to be created, even if one\n *   already exists.  This is used when we reset secret storage.\n */\nexport async function initialiseDehydration(createNewKey: boolean = false): Promise<void> {\n    const crypto = MatrixClientPeg.safeGet().getCrypto();\n    if (await deviceDehydrationEnabled(crypto)) {\n        logger.log(\"Device dehydration enabled\");\n        await crypto!.startDehydration(createNewKey);\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { MatrixClient } from \"matrix-js-sdk/src/matrix\";\n\n/**\n * Check if one of our own devices is verified via cross signing\n *\n * @param client - reference to the MatrixClient\n * @param deviceId - ID of the device to be checked\n *\n * @returns `null` if the device is unknown or has not published encryption keys; otherwise a boolean\n *    indicating whether the device has been cross-signed by a cross-signing key we trust.\n */\nexport const isDeviceVerified = async (client: MatrixClient, deviceId: string): Promise<boolean | null> => {\n    const trustLevel = await client.getCrypto()?.getDeviceVerificationStatus(client.getSafeUserId(), deviceId);\n    if (!trustLevel) {\n        // either no crypto, or an unknown/no-e2e device\n        return null;\n    }\n    return trustLevel.crossSigningVerified;\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { completeAuthorizationCodeGrant, generateOidcAuthorizationUrl } from \"matrix-js-sdk/src/oidc/authorize\";\nimport { QueryDict } from \"matrix-js-sdk/src/utils\";\nimport { OidcClientConfig } from \"matrix-js-sdk/src/matrix\";\nimport { randomString } from \"matrix-js-sdk/src/randomstring\";\nimport { IdTokenClaims } from \"oidc-client-ts\";\n\nimport { OidcClientError } from \"./error\";\nimport PlatformPeg from \"../../PlatformPeg\";\n\n/**\n * Start OIDC authorization code flow\n * Generates auth params, stores them in session storage and\n * Navigates to configured authorization endpoint\n * @param delegatedAuthConfig from discovery\n * @param clientId this client's id as registered with configured issuer\n * @param homeserverUrl target homeserver\n * @param identityServerUrl OPTIONAL target identity server\n * @returns Promise that resolves after we have navigated to auth endpoint\n */\nexport const startOidcLogin = async (\n    delegatedAuthConfig: OidcClientConfig,\n    clientId: string,\n    homeserverUrl: string,\n    identityServerUrl?: string,\n    isRegistration?: boolean,\n): Promise<void> => {\n    const redirectUri = PlatformPeg.get()!.getOidcCallbackUrl().href;\n\n    const nonce = randomString(10);\n\n    const prompt = isRegistration ? \"create\" : undefined;\n\n    const authorizationUrl = await generateOidcAuthorizationUrl({\n        metadata: delegatedAuthConfig.metadata,\n        redirectUri,\n        clientId,\n        homeserverUrl,\n        identityServerUrl,\n        nonce,\n        prompt,\n        urlState: PlatformPeg.get()?.getOidcClientState(),\n    });\n\n    window.location.href = authorizationUrl;\n};\n\n/**\n * Gets `code` and `state` query params\n *\n * @param queryParams\n * @returns code and state\n * @throws when code and state are not valid strings\n */\nconst getCodeAndStateFromQueryParams = (queryParams: QueryDict): { code: string; state: string } => {\n    const code = queryParams[\"code\"];\n    const state = queryParams[\"state\"];\n\n    if (!code || typeof code !== \"string\" || !state || typeof state !== \"string\") {\n        throw new Error(OidcClientError.InvalidQueryParameters);\n    }\n    return { code, state };\n};\n\ntype CompleteOidcLoginResponse = {\n    // url of the homeserver selected during login\n    homeserverUrl: string;\n    // identity server url as discovered during login\n    identityServerUrl?: string;\n    // accessToken gained from OIDC token issuer\n    accessToken: string;\n    // refreshToken gained from OIDC token issuer, when falsy token cannot be refreshed\n    refreshToken?: string;\n    // idToken gained from OIDC token issuer\n    idToken: string;\n    // this client's id as registered with the OIDC issuer\n    clientId: string;\n    // issuer used during authentication\n    issuer: string;\n    // claims of the given access token; used during token refresh to validate new tokens\n    idTokenClaims: IdTokenClaims;\n};\n/**\n * Attempt to complete authorization code flow to get an access token\n * @param queryParams the query-parameters extracted from the real query-string of the starting URI.\n * @returns Promise that resolves with a CompleteOidcLoginResponse when login was successful\n * @throws When we failed to get a valid access token\n */\nexport const completeOidcLogin = async (queryParams: QueryDict): Promise<CompleteOidcLoginResponse> => {\n    const { code, state } = getCodeAndStateFromQueryParams(queryParams);\n    const { homeserverUrl, tokenResponse, idTokenClaims, identityServerUrl, oidcClientSettings } =\n        await completeAuthorizationCodeGrant(code, state);\n\n    return {\n        homeserverUrl,\n        identityServerUrl,\n        accessToken: tokenResponse.access_token,\n        refreshToken: tokenResponse.refresh_token,\n        idToken: tokenResponse.id_token,\n        clientId: oidcClientSettings.clientId,\n        issuer: oidcClientSettings.issuer,\n        idTokenClaims,\n    };\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { ReactNode } from \"react\";\nimport { OidcError } from \"matrix-js-sdk/src/oidc/error\";\n\nimport { _t } from \"../../languageHandler\";\n\n/**\n * Errors thrown by EW during OIDC native flow authentication.\n * Intended to be logged, not read by users.\n */\nexport enum OidcClientError {\n    InvalidQueryParameters = \"Invalid query parameters for OIDC native login. `code` and `state` are required.\",\n}\n\n/**\n * Get a friendly translated error message for user consumption\n * based on error encountered during authentication\n * @param error\n * @returns a friendly translated error message for user consumption\n */\nexport const getOidcErrorMessage = (error: Error): string | ReactNode => {\n    switch (error.message) {\n        case OidcError.MissingOrInvalidStoredState:\n            return _t(\"auth|oidc|missing_or_invalid_stored_state\");\n        case OidcClientError.InvalidQueryParameters:\n        case OidcError.CodeExchangeFailed:\n        case OidcError.InvalidBearerTokenResponse:\n        case OidcError.InvalidIdToken:\n        default:\n            return _t(\"auth|oidc|generic_auth_error\");\n    }\n};\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\n\nexport const encode = (arraybuffer: ArrayBuffer): string => {\n    let bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = '';\n\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    } else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n\n    return base64;\n};\n\nexport const decode = (base64: string): ArrayBuffer => {\n    let bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    const arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n};\n","exports.UINT32 = require('./lib/uint32')\nexports.UINT64 = require('./lib/uint64')","/**\n\tC-like unsigned 32 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t36: UINT32( Math.pow(36, 5) )\n\t,\t16: UINT32( Math.pow(16, 7) )\n\t,\t10: UINT32( Math.pow(10, 9) )\n\t,\t2:  UINT32( Math.pow(2, 30) )\n\t}\n\tvar radixCache = {\n\t\t36: UINT32(36)\n\t,\t16: UINT32(16)\n\t,\t10: UINT32(10)\n\t,\t2:  UINT32(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 32 bits integer\n\t * @constructor\n\t * @param {Number|String|Number} low bits     | integer as a string \t\t | integer as a number\n\t * @param {Number|Number|Undefined} high bits | radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT32 (l, h) {\n\t\tif ( !(this instanceof UINT32) )\n\t\t\treturn new UINT32(l, h)\n\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tthis.remainder = null\n\t\tif (typeof h == 'undefined')\n\t\t\treturn fromNumber.call(this, l)\n\n\t\tif (typeof l == 'string')\n\t\t\treturn fromString.call(this, l, h)\n\n\t\tfromBits.call(this, l, h)\n\t}\n\n\t/**\n\t * Set the current _UINT32_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} low bits\n\t * @param {Number} high bits\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (l, h) {\n\t\tthis._low = l | 0\n\t\tthis._high = h | 0\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT32_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT32_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tvar value = parseInt(s, radix || 10)\n\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT32_ to a number\n\t * @method toNumber\n\t * @return {Number} the converted UINT32\n\t */\n\tUINT32.prototype.toNumber = function () {\n\t\treturn (this._high * 65536) + this._low\n\t}\n\n\t/**\n\t * Convert this _UINT32_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT32\n\t */\n\tUINT32.prototype.toString = function (radix) {\n\t\treturn this.toNumber().toString(radix || 10)\n\t}\n\n\t/**\n\t * Add two _UINT32_. The current _UINT32_ stores the result\n\t * @method add\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.add = function (other) {\n\t\tvar a00 = this._low + other._low\n\t\tvar a16 = a00 >>> 16\n\n\t\ta16 += this._high + other._high\n\n\t\tthis._low = a00 & 0xFFFF\n\t\tthis._high = a16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT32_. The current _UINT32_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.subtract = function (other) {\n\t\t//TODO inline\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT32_. The current _UINT32_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16\n\t\t\tb = b00 + b16\n\t\t\ta*b = (a00 + a16)(b00 + b16)\n\t\t\t\t= a00b00 + a00b16 + a16b00 + a16b16\n\n\t\t\ta16b16 overflows the 32bits\n\t\t */\n\t\tvar a16 = this._high\n\t\tvar a00 = this._low\n\t\tvar b16 = other._high\n\t\tvar b00 = other._low\n\n/* Removed to increase speed under normal circumstances (i.e. not multiplying by 0 or 1)\n\t\t// this == 0 or other == 1: nothing to do\n\t\tif ((a00 == 0 && a16 == 0) || (b00 == 1 && b16 == 0)) return this\n\n\t\t// other == 0 or this == 1: this = other\n\t\tif ((b00 == 0 && b16 == 0) || (a00 == 1 && a16 == 0)) {\n\t\t\tthis._low = other._low\n\t\t\tthis._high = other._high\n\t\t\treturn this\n\t\t}\n*/\n\n\t\tvar c16, c00\n\t\tc00 = a00 * b00\n\t\tc16 = c00 >>> 16\n\n\t\tc16 += a16 * b00\n\t\tc16 &= 0xFFFF\t\t// Not required but improves performance\n\t\tc16 += a00 * b16\n\n\t\tthis._low = c00 & 0xFFFF\n\t\tthis._high = c16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT32_. The current _UINT32_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT32_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.div = function (other) {\n\t\tif ( (other._low == 0) && (other._high == 0) ) throw Error('division by zero')\n\n\t\t// other == 1\n\t\tif (other._high == 0 && other._low == 1) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\treturn this\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._low = 0\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\tthis._low = 1\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 16) {\n\t\t\t\t\tthis._high |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._low |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT32_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.negate = function () {\n\t\tvar v = ( ~this._low & 0xFFFF ) + 1\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = (~this._high + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Equals\n\t * @method eq\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.equals = UINT32.prototype.eq = function (other) {\n\t\treturn (this._low == other._low) && (this._high == other._high)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.greaterThan = UINT32.prototype.gt = function (other) {\n\t\tif (this._high > other._high) return true\n\t\tif (this._high < other._high) return false\n\t\treturn this._low > other._low\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.lessThan = UINT32.prototype.lt = function (other) {\n\t\tif (this._high < other._high) return true\n\t\tif (this._high > other._high) return false\n\t\treturn this._low < other._low\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.or = function (other) {\n\t\tthis._low |= other._low\n\t\tthis._high |= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.and = function (other) {\n\t\tthis._low &= other._low\n\t\tthis._high &= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.not = function() {\n\t\tthis._low = ~this._low & 0xFFFF\n\t\tthis._high = ~this._high & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.xor = function (other) {\n\t\tthis._low ^= other._low\n\t\tthis._high ^= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftRight = UINT32.prototype.shiftr = function (n) {\n\t\tif (n > 16) {\n\t\t\tthis._low = this._high >> (n - 16)\n\t\t\tthis._high = 0\n\t\t} else if (n == 16) {\n\t\t\tthis._low = this._high\n\t\t\tthis._high = 0\n\t\t} else {\n\t\t\tthis._low = (this._low >> n) | ( (this._high << (16-n)) & 0xFFFF )\n\t\t\tthis._high >>= n\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftLeft = UINT32.prototype.shiftl = function (n, allowOverflow) {\n\t\tif (n > 16) {\n\t\t\tthis._high = this._low << (n - 16)\n\t\t\tthis._low = 0\n\t\t\tif (!allowOverflow) {\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t} else if (n == 16) {\n\t\t\tthis._high = this._low\n\t\t\tthis._low = 0\n\t\t} else {\n\t\t\tthis._high = (this._high << n) | (this._low >> (16-n))\n\t\t\tthis._low = (this._low << n) & 0xFFFF\n\t\t\tif (!allowOverflow) {\n\t\t\t\t// Overflow only allowed on the high bits...\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateLeft = UINT32.prototype.rotl = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v << n) | (v >>> (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateRight = UINT32.prototype.rotr = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v >>> n) | (v << (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT32_\n\t * @method clone\n\t * @return {Object} cloned UINT32\n\t */\n\tUINT32.prototype.clone = function () {\n\t\treturn new UINT32(this._low, this._high)\n\t}\n\n\tif (typeof define != 'undefined' && define.amd) {\n\t\t// AMD / RequireJS\n\t\tdefine([], function () {\n\t\t\treturn UINT32\n\t\t})\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT32\n\t} else {\n\t\t// Browser\n\t\troot['UINT32'] = UINT32\n\t}\n\n})(this)\n","/**\n\tC-like unsigned 64 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t16: UINT64( Math.pow(16, 5) )\n\t,\t10: UINT64( Math.pow(10, 5) )\n\t,\t2:  UINT64( Math.pow(2, 5) )\n\t}\n\tvar radixCache = {\n\t\t16: UINT64(16)\n\t,\t10: UINT64(10)\n\t,\t2:  UINT64(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 64 bits integer\n\t * @constructor\n\t * @param {Number} first low bits (8)\n\t * @param {Number} second low bits (8)\n\t * @param {Number} first high bits (8)\n\t * @param {Number} second high bits (8)\n\t * or\n\t * @param {Number} low bits (32)\n\t * @param {Number} high bits (32)\n\t * or\n\t * @param {String|Number} integer as a string \t\t | integer as a number\n\t * @param {Number|Undefined} radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT64 (a00, a16, a32, a48) {\n\t\tif ( !(this instanceof UINT64) )\n\t\t\treturn new UINT64(a00, a16, a32, a48)\n\n\t\tthis.remainder = null\n\t\tif (typeof a00 == 'string')\n\t\t\treturn fromString.call(this, a00, a16)\n\n\t\tif (typeof a16 == 'undefined')\n\t\t\treturn fromNumber.call(this, a00)\n\n\t\tfromBits.apply(this, arguments)\n\t}\n\n\t/**\n\t * Set the current _UINT64_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} first low bits (8)\n\t * @param {Number} second low bits (8)\n\t * @param {Number} first high bits (8)\n\t * @param {Number} second high bits (8)\n\t * or\n\t * @param {Number} low bits (32)\n\t * @param {Number} high bits (32)\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (a00, a16, a32, a48) {\n\t\tif (typeof a32 == 'undefined') {\n\t\t\tthis._a00 = a00 & 0xFFFF\n\t\t\tthis._a16 = a00 >>> 16\n\t\t\tthis._a32 = a16 & 0xFFFF\n\t\t\tthis._a48 = a16 >>> 16\n\t\t\treturn this\n\t\t}\n\n\t\tthis._a00 = a00 | 0\n\t\tthis._a16 = a16 | 0\n\t\tthis._a32 = a32 | 0\n\t\tthis._a48 = a48 | 0\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT64_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._a00 = value & 0xFFFF\n\t\tthis._a16 = value >>> 16\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT64_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tradix = radix || 10\n\n\t\tthis._a00 = 0\n\t\tthis._a16 = 0\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\n\t\t/*\n\t\t\tIn Javascript, bitwise operators only operate on the first 32 bits \n\t\t\tof a number, even though parseInt() encodes numbers with a 53 bits \n\t\t\tmantissa.\n\t\t\tTherefore UINT64(<Number>) can only work on 32 bits.\n\t\t\tThe radix maximum value is 36 (as per ECMA specs) (26 letters + 10 digits)\n\t\t\tmaximum input value is m = 32bits as 1 = 2^32 - 1\n\t\t\tSo the maximum substring length n is:\n\t\t\t36^(n+1) - 1 = 2^32 - 1\n\t\t\t36^(n+1) = 2^32\n\t\t\t(n+1)ln(36) = 32ln(2)\n\t\t\tn = 32ln(2)/ln(36) - 1\n\t\t\tn = 5.189644915687692\n\t\t\tn = 5\n\t\t */\n\t\tvar radixUint = radixPowerCache[radix] || new UINT64( Math.pow(radix, 5) )\n\n\t\tfor (var i = 0, len = s.length; i < len; i += 5) {\n\t\t\tvar size = Math.min(5, len - i)\n\t\t\tvar value = parseInt( s.slice(i, i + size), radix )\n\t\t\tthis.multiply(\n\t\t\t\t\tsize < 5\n\t\t\t\t\t\t? new UINT64( Math.pow(radix, size) )\n\t\t\t\t\t\t: radixUint\n\t\t\t\t)\n\t\t\t\t.add( new UINT64(value) )\n\t\t}\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT64_ to a number (last 32 bits are dropped)\n\t * @method toNumber\n\t * @return {Number} the converted UINT64\n\t */\n\tUINT64.prototype.toNumber = function () {\n\t\treturn (this._a16 * 65536) + this._a00\n\t}\n\n\t/**\n\t * Convert this _UINT64_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT64\n\t */\n\tUINT64.prototype.toString = function (radix) {\n\t\tradix = radix || 10\n\t\tvar radixUint = radixCache[radix] || new UINT64(radix)\n\n\t\tif ( !this.gt(radixUint) ) return this.toNumber().toString(radix)\n\n\t\tvar self = this.clone()\n\t\tvar res = new Array(64)\n\t\tfor (var i = 63; i >= 0; i--) {\n\t\t\tself.div(radixUint)\n\t\t\tres[i] = self.remainder.toNumber().toString(radix)\n\t\t\tif ( !self.gt(radixUint) ) break\n\t\t}\n\t\tres[i-1] = self.toNumber().toString(radix)\n\n\t\treturn res.join('')\n\t}\n\n\t/**\n\t * Add two _UINT64_. The current _UINT64_ stores the result\n\t * @method add\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.add = function (other) {\n\t\tvar a00 = this._a00 + other._a00\n\n\t\tvar a16 = a00 >>> 16\n\t\ta16 += this._a16 + other._a16\n\n\t\tvar a32 = a16 >>> 16\n\t\ta32 += this._a32 + other._a32\n\n\t\tvar a48 = a32 >>> 16\n\t\ta48 += this._a48 + other._a48\n\n\t\tthis._a00 = a00 & 0xFFFF\n\t\tthis._a16 = a16 & 0xFFFF\n\t\tthis._a32 = a32 & 0xFFFF\n\t\tthis._a48 = a48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT64_. The current _UINT64_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.subtract = function (other) {\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT64_. The current _UINT64_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16 + a32 + a48\n\t\t\tb = b00 + b16 + b32 + b48\n\t\t\ta*b = (a00 + a16 + a32 + a48)(b00 + b16 + b32 + b48)\n\t\t\t\t= a00b00 + a00b16 + a00b32 + a00b48\n\t\t\t\t+ a16b00 + a16b16 + a16b32 + a16b48\n\t\t\t\t+ a32b00 + a32b16 + a32b32 + a32b48\n\t\t\t\t+ a48b00 + a48b16 + a48b32 + a48b48\n\n\t\t\ta16b48, a32b32, a48b16, a48b32 and a48b48 overflow the 64 bits\n\t\t\tso it comes down to:\n\t\t\ta*b\t= a00b00 + a00b16 + a00b32 + a00b48\n\t\t\t\t+ a16b00 + a16b16 + a16b32\n\t\t\t\t+ a32b00 + a32b16\n\t\t\t\t+ a48b00\n\t\t\t\t= a00b00\n\t\t\t\t+ a00b16 + a16b00\n\t\t\t\t+ a00b32 + a16b16 + a32b00\n\t\t\t\t+ a00b48 + a16b32 + a32b16 + a48b00\n\t\t */\n\t\tvar a00 = this._a00\n\t\tvar a16 = this._a16\n\t\tvar a32 = this._a32\n\t\tvar a48 = this._a48\n\t\tvar b00 = other._a00\n\t\tvar b16 = other._a16\n\t\tvar b32 = other._a32\n\t\tvar b48 = other._a48\n\n\t\tvar c00 = a00 * b00\n\n\t\tvar c16 = c00 >>> 16\n\t\tc16 += a00 * b16\n\t\tvar c32 = c16 >>> 16\n\t\tc16 &= 0xFFFF\n\t\tc16 += a16 * b00\n\n\t\tc32 += c16 >>> 16\n\t\tc32 += a00 * b32\n\t\tvar c48 = c32 >>> 16\n\t\tc32 &= 0xFFFF\n\t\tc32 += a16 * b16\n\t\tc48 += c32 >>> 16\n\t\tc32 &= 0xFFFF\n\t\tc32 += a32 * b00\n\n\t\tc48 += c32 >>> 16\n\t\tc48 += a00 * b48\n\t\tc48 &= 0xFFFF\n\t\tc48 += a16 * b32\n\t\tc48 &= 0xFFFF\n\t\tc48 += a32 * b16\n\t\tc48 &= 0xFFFF\n\t\tc48 += a48 * b00\n\n\t\tthis._a00 = c00 & 0xFFFF\n\t\tthis._a16 = c16 & 0xFFFF\n\t\tthis._a32 = c32 & 0xFFFF\n\t\tthis._a48 = c48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT64_. The current _UINT64_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT64_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.div = function (other) {\n\t\tif ( (other._a16 == 0) && (other._a32 == 0) && (other._a48 == 0) ) {\n\t\t\tif (other._a00 == 0) throw Error('division by zero')\n\n\t\t\t// other == 1: this\n\t\t\tif (other._a00 == 1) {\n\t\t\t\tthis.remainder = new UINT64(0)\n\t\t\t\treturn this\n\t\t\t}\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._a00 = 0\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT64(0)\n\t\t\tthis._a00 = 1\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._a00 = 0\n\t\tthis._a16 = 0\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 48) {\n\t\t\t\t\tthis._a48 |= 1 << (i - 48)\n\t\t\t\t} else if (i >= 32) {\n\t\t\t\t\tthis._a32 |= 1 << (i - 32)\n\t\t\t\t} else if (i >= 16) {\n\t\t\t\t\tthis._a16 |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._a00 |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT64_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.negate = function () {\n\t\tvar v = ( ~this._a00 & 0xFFFF ) + 1\n\t\tthis._a00 = v & 0xFFFF\n\t\tv = (~this._a16 & 0xFFFF) + (v >>> 16)\n\t\tthis._a16 = v & 0xFFFF\n\t\tv = (~this._a32 & 0xFFFF) + (v >>> 16)\n\t\tthis._a32 = v & 0xFFFF\n\t\tthis._a48 = (~this._a48 + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\n\t * @method eq\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.equals = UINT64.prototype.eq = function (other) {\n\t\treturn (this._a48 == other._a48) && (this._a00 == other._a00)\n\t\t\t && (this._a32 == other._a32) && (this._a16 == other._a16)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.greaterThan = UINT64.prototype.gt = function (other) {\n\t\tif (this._a48 > other._a48) return true\n\t\tif (this._a48 < other._a48) return false\n\t\tif (this._a32 > other._a32) return true\n\t\tif (this._a32 < other._a32) return false\n\t\tif (this._a16 > other._a16) return true\n\t\tif (this._a16 < other._a16) return false\n\t\treturn this._a00 > other._a00\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.lessThan = UINT64.prototype.lt = function (other) {\n\t\tif (this._a48 < other._a48) return true\n\t\tif (this._a48 > other._a48) return false\n\t\tif (this._a32 < other._a32) return true\n\t\tif (this._a32 > other._a32) return false\n\t\tif (this._a16 < other._a16) return true\n\t\tif (this._a16 > other._a16) return false\n\t\treturn this._a00 < other._a00\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.or = function (other) {\n\t\tthis._a00 |= other._a00\n\t\tthis._a16 |= other._a16\n\t\tthis._a32 |= other._a32\n\t\tthis._a48 |= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.and = function (other) {\n\t\tthis._a00 &= other._a00\n\t\tthis._a16 &= other._a16\n\t\tthis._a32 &= other._a32\n\t\tthis._a48 &= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.xor = function (other) {\n\t\tthis._a00 ^= other._a00\n\t\tthis._a16 ^= other._a16\n\t\tthis._a32 ^= other._a32\n\t\tthis._a48 ^= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.not = function() {\n\t\tthis._a00 = ~this._a00 & 0xFFFF\n\t\tthis._a16 = ~this._a16 & 0xFFFF\n\t\tthis._a32 = ~this._a32 & 0xFFFF\n\t\tthis._a48 = ~this._a48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.shiftRight = UINT64.prototype.shiftr = function (n) {\n\t\tn %= 64\n\t\tif (n >= 48) {\n\t\t\tthis._a00 = this._a48 >> (n - 48)\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t} else if (n >= 32) {\n\t\t\tn -= 32\n\t\t\tthis._a00 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = (this._a48 >> n) & 0xFFFF\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t} else if (n >= 16) {\n\t\t\tn -= 16\n\t\t\tthis._a00 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a32 = (this._a48 >> n) & 0xFFFF\n\t\t\tthis._a48 = 0\n\t\t} else {\n\t\t\tthis._a00 = ( (this._a00 >> n) | (this._a16 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a32 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a48 = (this._a48 >> n) & 0xFFFF\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.shiftLeft = UINT64.prototype.shiftl = function (n, allowOverflow) {\n\t\tn %= 64\n\t\tif (n >= 48) {\n\t\t\tthis._a48 = this._a00 << (n - 48)\n\t\t\tthis._a32 = 0\n\t\t\tthis._a16 = 0\n\t\t\tthis._a00 = 0\n\t\t} else if (n >= 32) {\n\t\t\tn -= 32\n\t\t\tthis._a48 = (this._a16 << n) | (this._a00 >> (16-n))\n\t\t\tthis._a32 = (this._a00 << n) & 0xFFFF\n\t\t\tthis._a16 = 0\n\t\t\tthis._a00 = 0\n\t\t} else if (n >= 16) {\n\t\t\tn -= 16\n\t\t\tthis._a48 = (this._a32 << n) | (this._a16 >> (16-n))\n\t\t\tthis._a32 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = (this._a00 << n) & 0xFFFF\n\t\t\tthis._a00 = 0\n\t\t} else {\n\t\t\tthis._a48 = (this._a48 << n) | (this._a32 >> (16-n))\n\t\t\tthis._a32 = ( (this._a32 << n) | (this._a16 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a00 = (this._a00 << n) & 0xFFFF\n\t\t}\n\t\tif (!allowOverflow) {\n\t\t\tthis._a48 &= 0xFFFF\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.rotateLeft = UINT64.prototype.rotl = function (n) {\n\t\tn %= 64\n\t\tif (n == 0) return this\n\t\tif (n >= 32) {\n\t\t\t// A.B.C.D\n\t\t\t// B.C.D.A rotl(16)\n\t\t\t// C.D.A.B rotl(32)\n\t\t\tvar v = this._a00\n\t\t\tthis._a00 = this._a32\n\t\t\tthis._a32 = v\n\t\t\tv = this._a48\n\t\t\tthis._a48 = this._a16\n\t\t\tthis._a16 = v\n\t\t\tif (n == 32) return this\n\t\t\tn -= 32\n\t\t}\n\n\t\tvar high = (this._a48 << 16) | this._a32\n\t\tvar low = (this._a16 << 16) | this._a00\n\n\t\tvar _high = (high << n) | (low >>> (32 - n))\n\t\tvar _low = (low << n) | (high >>> (32 - n))\n\n\t\tthis._a00 = _low & 0xFFFF\n\t\tthis._a16 = _low >>> 16\n\t\tthis._a32 = _high & 0xFFFF\n\t\tthis._a48 = _high >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.rotateRight = UINT64.prototype.rotr = function (n) {\n\t\tn %= 64\n\t\tif (n == 0) return this\n\t\tif (n >= 32) {\n\t\t\t// A.B.C.D\n\t\t\t// D.A.B.C rotr(16)\n\t\t\t// C.D.A.B rotr(32)\n\t\t\tvar v = this._a00\n\t\t\tthis._a00 = this._a32\n\t\t\tthis._a32 = v\n\t\t\tv = this._a48\n\t\t\tthis._a48 = this._a16\n\t\t\tthis._a16 = v\n\t\t\tif (n == 32) return this\n\t\t\tn -= 32\n\t\t}\n\n\t\tvar high = (this._a48 << 16) | this._a32\n\t\tvar low = (this._a16 << 16) | this._a00\n\n\t\tvar _high = (high >>> n) | (low << (32 - n))\n\t\tvar _low = (low >>> n) | (high << (32 - n))\n\n\t\tthis._a00 = _low & 0xFFFF\n\t\tthis._a16 = _low >>> 16\n\t\tthis._a32 = _high & 0xFFFF\n\t\tthis._a48 = _high >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT64_\n\t * @method clone\n\t * @return {Object} cloned UINT64\n\t */\n\tUINT64.prototype.clone = function () {\n\t\treturn new UINT64(this._a00, this._a16, this._a32, this._a48)\n\t}\n\n\tif (typeof define != 'undefined' && define.amd) {\n\t\t// AMD / RequireJS\n\t\tdefine([], function () {\n\t\t\treturn UINT64\n\t\t})\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT64\n\t} else {\n\t\t// Browser\n\t\troot['UINT64'] = UINT64\n\t}\n\n})(this)\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process[\"env\" + \"\"] && process[\"env\" + \"\"][\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","module.exports = {\n\th32: require(\"./xxhash\")\n,\th64: require(\"./xxhash64\")\n}\n","/**\nxxHash implementation in pure Javascript\n\nCopyright (C) 2013, Pierre Curto\nMIT license\n*/\nvar UINT32 = require('cuint').UINT32\n\n/*\n\tMerged this sequence of method calls as it speeds up\n\tthe calculations by a factor of 2\n */\n// this.v1.add( other.multiply(PRIME32_2) ).rotl(13).multiply(PRIME32_1);\nUINT32.prototype.xxh_update = function (low, high) {\n\tvar b00 = PRIME32_2._low\n\tvar b16 = PRIME32_2._high\n\n\tvar c16, c00\n\tc00 = low * b00\n\tc16 = c00 >>> 16\n\n\tc16 += high * b00\n\tc16 &= 0xFFFF\t\t// Not required but improves performance\n\tc16 += low * b16\n\n\tvar a00 = this._low + (c00 & 0xFFFF)\n\tvar a16 = a00 >>> 16\n\n\ta16 += this._high + (c16 & 0xFFFF)\n\n\tvar v = (a16 << 16) | (a00 & 0xFFFF)\n\tv = (v << 13) | (v >>> 19)\n\n\ta00 = v & 0xFFFF\n\ta16 = v >>> 16\n\n\tb00 = PRIME32_1._low\n\tb16 = PRIME32_1._high\n\n\tc00 = a00 * b00\n\tc16 = c00 >>> 16\n\n\tc16 += a16 * b00\n\tc16 &= 0xFFFF\t\t// Not required but improves performance\n\tc16 += a00 * b16\n\n\tthis._low = c00 & 0xFFFF\n\tthis._high = c16 & 0xFFFF\n}\n\n/*\n * Constants\n */\nvar PRIME32_1 = UINT32( '2654435761' )\nvar PRIME32_2 = UINT32( '2246822519' )\nvar PRIME32_3 = UINT32( '3266489917' )\nvar PRIME32_4 = UINT32(  '668265263' )\nvar PRIME32_5 = UINT32(  '374761393' )\n\n/**\n* Convert string to proper UTF-8 array\n* @param str Input string\n* @returns {Uint8Array} UTF8 array is returned as uint8 array\n*/\nfunction toUTF8Array (str) {\n\tvar utf8 = []\n\tfor (var i=0, n=str.length; i < n; i++) {\n\t\tvar charcode = str.charCodeAt(i)\n\t\tif (charcode < 0x80) utf8.push(charcode)\n\t\telse if (charcode < 0x800) {\n\t\t\tutf8.push(0xc0 | (charcode >> 6),\n\t\t\t0x80 | (charcode & 0x3f))\n\t\t}\n\t\telse if (charcode < 0xd800 || charcode >= 0xe000) {\n\t\t\tutf8.push(0xe0 | (charcode >> 12),\n\t\t\t0x80 | ((charcode>>6) & 0x3f),\n\t\t\t0x80 | (charcode & 0x3f))\n\t\t}\n\t\t// surrogate pair\n\t\telse {\n\t\t\ti++;\n\t\t\t// UTF-16 encodes 0x10000-0x10FFFF by\n\t\t\t// subtracting 0x10000 and splitting the\n\t\t\t// 20 bits of 0x0-0xFFFFF into two halves\n\t\t\tcharcode = 0x10000 + (((charcode & 0x3ff)<<10)\n\t\t\t| (str.charCodeAt(i) & 0x3ff))\n\t\t\tutf8.push(0xf0 | (charcode >>18),\n\t\t\t0x80 | ((charcode>>12) & 0x3f),\n\t\t\t0x80 | ((charcode>>6) & 0x3f),\n\t\t\t0x80 | (charcode & 0x3f))\n\t\t}\n\t}\n\n\treturn new Uint8Array(utf8)\n}\n\n/**\n * XXH object used as a constructor or a function\n * @constructor\n * or\n * @param {Object|String} input data\n * @param {Number|UINT32} seed\n * @return ThisExpression\n * or\n * @return {UINT32} xxHash\n */\nfunction XXH () {\n\tif (arguments.length == 2)\n\t\treturn new XXH( arguments[1] ).update( arguments[0] ).digest()\n\n\tif (!(this instanceof XXH))\n\t\treturn new XXH( arguments[0] )\n\n\tinit.call(this, arguments[0])\n}\n\n/**\n * Initialize the XXH instance with the given seed\n * @method init\n * @param {Number|Object} seed as a number or an unsigned 32 bits integer\n * @return ThisExpression\n */\n function init (seed) {\n\tthis.seed = seed instanceof UINT32 ? seed.clone() : UINT32(seed)\n\tthis.v1 = this.seed.clone().add(PRIME32_1).add(PRIME32_2)\n\tthis.v2 = this.seed.clone().add(PRIME32_2)\n\tthis.v3 = this.seed.clone()\n\tthis.v4 = this.seed.clone().subtract(PRIME32_1)\n\tthis.total_len = 0\n\tthis.memsize = 0\n\tthis.memory = null\n\n\treturn this\n}\nXXH.prototype.init = init\n\n/**\n * Add data to be computed for the XXH hash\n * @method update\n * @param {String|Buffer|ArrayBuffer} input as a string or nodejs Buffer or ArrayBuffer\n * @return ThisExpression\n */\nXXH.prototype.update = function (input) {\n\tvar isString = typeof input == 'string'\n\tvar isArrayBuffer\n\n\t// Convert all strings to utf-8 first (issue #5)\n\tif (isString) {\n\t\tinput = toUTF8Array(input)\n\t\tisString = false\n\t\tisArrayBuffer = true\n\t}\n\n\tif (typeof ArrayBuffer !== \"undefined\" && input instanceof ArrayBuffer)\n\t{\n\t\tisArrayBuffer = true\n\t\tinput = new Uint8Array(input);\n\t}\n\n\tvar p = 0\n\tvar len = input.length\n\tvar bEnd = p + len\n\n\tif (len == 0) return this\n\n\tthis.total_len += len\n\n\tif (this.memsize == 0)\n\t{\n\t\tif (isString) {\n\t\t\tthis.memory = ''\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory = new Uint8Array(16)\n\t\t} else {\n\t\t\tthis.memory = new Buffer(16)\n\t\t}\n\t}\n\n\tif (this.memsize + len < 16)   // fill in tmp buffer\n\t{\n\t\t// XXH_memcpy(this.memory + this.memsize, input, len)\n\t\tif (isString) {\n\t\t\tthis.memory += input\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory.set( input.subarray(0, len), this.memsize )\n\t\t} else {\n\t\t\tinput.copy( this.memory, this.memsize, 0, len )\n\t\t}\n\n\t\tthis.memsize += len\n\t\treturn this\n\t}\n\n\tif (this.memsize > 0)   // some data left from previous update\n\t{\n\t\t// XXH_memcpy(this.memory + this.memsize, input, 16-this.memsize);\n\t\tif (isString) {\n\t\t\tthis.memory += input.slice(0, 16 - this.memsize)\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory.set( input.subarray(0, 16 - this.memsize), this.memsize )\n\t\t} else {\n\t\t\tinput.copy( this.memory, this.memsize, 0, 16 - this.memsize )\n\t\t}\n\n\t\tvar p32 = 0\n\t\tif (isString) {\n\t\t\tthis.v1.xxh_update(\n\t\t\t\t(this.memory.charCodeAt(p32+1) << 8) | this.memory.charCodeAt(p32)\n\t\t\t,\t(this.memory.charCodeAt(p32+3) << 8) | this.memory.charCodeAt(p32+2)\n\t\t\t)\n\t\t\tp32 += 4\n\t\t\tthis.v2.xxh_update(\n\t\t\t\t(this.memory.charCodeAt(p32+1) << 8) | this.memory.charCodeAt(p32)\n\t\t\t,\t(this.memory.charCodeAt(p32+3) << 8) | this.memory.charCodeAt(p32+2)\n\t\t\t)\n\t\t\tp32 += 4\n\t\t\tthis.v3.xxh_update(\n\t\t\t\t(this.memory.charCodeAt(p32+1) << 8) | this.memory.charCodeAt(p32)\n\t\t\t,\t(this.memory.charCodeAt(p32+3) << 8) | this.memory.charCodeAt(p32+2)\n\t\t\t)\n\t\t\tp32 += 4\n\t\t\tthis.v4.xxh_update(\n\t\t\t\t(this.memory.charCodeAt(p32+1) << 8) | this.memory.charCodeAt(p32)\n\t\t\t,\t(this.memory.charCodeAt(p32+3) << 8) | this.memory.charCodeAt(p32+2)\n\t\t\t)\n\t\t} else {\n\t\t\tthis.v1.xxh_update(\n\t\t\t\t(this.memory[p32+1] << 8) | this.memory[p32]\n\t\t\t,\t(this.memory[p32+3] << 8) | this.memory[p32+2]\n\t\t\t)\n\t\t\tp32 += 4\n\t\t\tthis.v2.xxh_update(\n\t\t\t\t(this.memory[p32+1] << 8) | this.memory[p32]\n\t\t\t,\t(this.memory[p32+3] << 8) | this.memory[p32+2]\n\t\t\t)\n\t\t\tp32 += 4\n\t\t\tthis.v3.xxh_update(\n\t\t\t\t(this.memory[p32+1] << 8) | this.memory[p32]\n\t\t\t,\t(this.memory[p32+3] << 8) | this.memory[p32+2]\n\t\t\t)\n\t\t\tp32 += 4\n\t\t\tthis.v4.xxh_update(\n\t\t\t\t(this.memory[p32+1] << 8) | this.memory[p32]\n\t\t\t,\t(this.memory[p32+3] << 8) | this.memory[p32+2]\n\t\t\t)\n\t\t}\n\n\t\tp += 16 - this.memsize\n\t\tthis.memsize = 0\n\t\tif (isString) this.memory = ''\n\t}\n\n\tif (p <= bEnd - 16)\n\t{\n\t\tvar limit = bEnd - 16\n\n\t\tdo\n\t\t{\n\t\t\tif (isString) {\n\t\t\t\tthis.v1.xxh_update(\n\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t)\n\t\t\t\tp += 4\n\t\t\t\tthis.v2.xxh_update(\n\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t)\n\t\t\t\tp += 4\n\t\t\t\tthis.v3.xxh_update(\n\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t)\n\t\t\t\tp += 4\n\t\t\t\tthis.v4.xxh_update(\n\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tthis.v1.xxh_update(\n\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t)\n\t\t\t\tp += 4\n\t\t\t\tthis.v2.xxh_update(\n\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t)\n\t\t\t\tp += 4\n\t\t\t\tthis.v3.xxh_update(\n\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t)\n\t\t\t\tp += 4\n\t\t\t\tthis.v4.xxh_update(\n\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t)\n\t\t\t}\n\t\t\tp += 4\n\t\t} while (p <= limit)\n\t}\n\n\tif (p < bEnd)\n\t{\n\t\t// XXH_memcpy(this.memory, p, bEnd-p);\n\t\tif (isString) {\n\t\t\tthis.memory += input.slice(p)\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory.set( input.subarray(p, bEnd), this.memsize )\n\t\t} else {\n\t\t\tinput.copy( this.memory, this.memsize, p, bEnd )\n\t\t}\n\n\t\tthis.memsize = bEnd - p\n\t}\n\n\treturn this\n}\n\n/**\n * Finalize the XXH computation. The XXH instance is ready for reuse for the given seed\n * @method digest\n * @return {UINT32} xxHash\n */\nXXH.prototype.digest = function () {\n\tvar input = this.memory\n\tvar isString = typeof input == 'string'\n\tvar p = 0\n\tvar bEnd = this.memsize\n\tvar h32, h\n\tvar u = new UINT32\n\n\tif (this.total_len >= 16)\n\t{\n\t\th32 = this.v1.rotl(1).add( this.v2.rotl(7).add( this.v3.rotl(12).add( this.v4.rotl(18) ) ) )\n\t}\n\telse\n\t{\n\t\th32  = this.seed.clone().add( PRIME32_5 )\n\t}\n\n\th32.add( u.fromNumber(this.total_len) )\n\n\twhile (p <= bEnd - 4)\n\t{\n\t\tif (isString) {\n\t\t\tu.fromBits(\n\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t)\n\t\t} else {\n\t\t\tu.fromBits(\n\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t)\n\t\t}\n\t\th32\n\t\t\t.add( u.multiply(PRIME32_3) )\n\t\t\t.rotl(17)\n\t\t\t.multiply( PRIME32_4 )\n\t\tp += 4\n\t}\n\n\twhile (p < bEnd)\n\t{\n\t\tu.fromBits( isString ? input.charCodeAt(p++) : input[p++], 0 )\n\t\th32\n\t\t\t.add( u.multiply(PRIME32_5) )\n\t\t\t.rotl(11)\n\t\t\t.multiply(PRIME32_1)\n\t}\n\n\th = h32.clone().shiftRight(15)\n\th32.xor(h).multiply(PRIME32_2)\n\n\th = h32.clone().shiftRight(13)\n\th32.xor(h).multiply(PRIME32_3)\n\n\th = h32.clone().shiftRight(16)\n\th32.xor(h)\n\n\t// Reset the state\n\tthis.init( this.seed )\n\n\treturn h32\n}\n\nmodule.exports = XXH\n","/**\nxxHash64 implementation in pure Javascript\n\nCopyright (C) 2016, Pierre Curto\nMIT license\n*/\nvar UINT64 = require('cuint').UINT64\n\n/*\n * Constants\n */\nvar PRIME64_1 = UINT64( '11400714785074694791' )\nvar PRIME64_2 = UINT64( '14029467366897019727' )\nvar PRIME64_3 = UINT64(  '1609587929392839161' )\nvar PRIME64_4 = UINT64(  '9650029242287828579' )\nvar PRIME64_5 = UINT64(  '2870177450012600261' )\n\n/**\n* Convert string to proper UTF-8 array\n* @param str Input string\n* @returns {Uint8Array} UTF8 array is returned as uint8 array\n*/\nfunction toUTF8Array (str) {\n\tvar utf8 = []\n\tfor (var i=0, n=str.length; i < n; i++) {\n\t\tvar charcode = str.charCodeAt(i)\n\t\tif (charcode < 0x80) utf8.push(charcode)\n\t\telse if (charcode < 0x800) {\n\t\t\tutf8.push(0xc0 | (charcode >> 6),\n\t\t\t0x80 | (charcode & 0x3f))\n\t\t}\n\t\telse if (charcode < 0xd800 || charcode >= 0xe000) {\n\t\t\tutf8.push(0xe0 | (charcode >> 12),\n\t\t\t0x80 | ((charcode>>6) & 0x3f),\n\t\t\t0x80 | (charcode & 0x3f))\n\t\t}\n\t\t// surrogate pair\n\t\telse {\n\t\t\ti++;\n\t\t\t// UTF-16 encodes 0x10000-0x10FFFF by\n\t\t\t// subtracting 0x10000 and splitting the\n\t\t\t// 20 bits of 0x0-0xFFFFF into two halves\n\t\t\tcharcode = 0x10000 + (((charcode & 0x3ff)<<10)\n\t\t\t| (str.charCodeAt(i) & 0x3ff))\n\t\t\tutf8.push(0xf0 | (charcode >>18),\n\t\t\t0x80 | ((charcode>>12) & 0x3f),\n\t\t\t0x80 | ((charcode>>6) & 0x3f),\n\t\t\t0x80 | (charcode & 0x3f))\n\t\t}\n\t}\n\n\treturn new Uint8Array(utf8)\n}\n\n/**\n * XXH64 object used as a constructor or a function\n * @constructor\n * or\n * @param {Object|String} input data\n * @param {Number|UINT64} seed\n * @return ThisExpression\n * or\n * @return {UINT64} xxHash\n */\nfunction XXH64 () {\n\tif (arguments.length == 2)\n\t\treturn new XXH64( arguments[1] ).update( arguments[0] ).digest()\n\n\tif (!(this instanceof XXH64))\n\t\treturn new XXH64( arguments[0] )\n\n\tinit.call(this, arguments[0])\n}\n\n/**\n * Initialize the XXH64 instance with the given seed\n * @method init\n * @param {Number|Object} seed as a number or an unsigned 32 bits integer\n * @return ThisExpression\n */\n function init (seed) {\n\tthis.seed = seed instanceof UINT64 ? seed.clone() : UINT64(seed)\n\tthis.v1 = this.seed.clone().add(PRIME64_1).add(PRIME64_2)\n\tthis.v2 = this.seed.clone().add(PRIME64_2)\n\tthis.v3 = this.seed.clone()\n\tthis.v4 = this.seed.clone().subtract(PRIME64_1)\n\tthis.total_len = 0\n\tthis.memsize = 0\n\tthis.memory = null\n\n\treturn this\n}\nXXH64.prototype.init = init\n\n/**\n * Add data to be computed for the XXH64 hash\n * @method update\n * @param {String|Buffer|ArrayBuffer} input as a string or nodejs Buffer or ArrayBuffer\n * @return ThisExpression\n */\nXXH64.prototype.update = function (input) {\n\tvar isString = typeof input == 'string'\n\tvar isArrayBuffer\n\n\t// Convert all strings to utf-8 first (issue #5)\n\tif (isString) {\n\t\tinput = toUTF8Array(input)\n\t\tisString = false\n\t\tisArrayBuffer = true\n\t}\n\n\tif (typeof ArrayBuffer !== \"undefined\" && input instanceof ArrayBuffer)\n\t{\n\t\tisArrayBuffer = true\n\t\tinput = new Uint8Array(input);\n\t}\n\n\tvar p = 0\n\tvar len = input.length\n\tvar bEnd = p + len\n\n\tif (len == 0) return this\n\n\tthis.total_len += len\n\n\tif (this.memsize == 0)\n\t{\n\t\tif (isString) {\n\t\t\tthis.memory = ''\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory = new Uint8Array(32)\n\t\t} else {\n\t\t\tthis.memory = new Buffer(32)\n\t\t}\n\t}\n\n\tif (this.memsize + len < 32)   // fill in tmp buffer\n\t{\n\t\t// XXH64_memcpy(this.memory + this.memsize, input, len)\n\t\tif (isString) {\n\t\t\tthis.memory += input\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory.set( input.subarray(0, len), this.memsize )\n\t\t} else {\n\t\t\tinput.copy( this.memory, this.memsize, 0, len )\n\t\t}\n\n\t\tthis.memsize += len\n\t\treturn this\n\t}\n\n\tif (this.memsize > 0)   // some data left from previous update\n\t{\n\t\t// XXH64_memcpy(this.memory + this.memsize, input, 16-this.memsize);\n\t\tif (isString) {\n\t\t\tthis.memory += input.slice(0, 32 - this.memsize)\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory.set( input.subarray(0, 32 - this.memsize), this.memsize )\n\t\t} else {\n\t\t\tinput.copy( this.memory, this.memsize, 0, 32 - this.memsize )\n\t\t}\n\n\t\tvar p64 = 0\n\t\tif (isString) {\n\t\t\tvar other\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory.charCodeAt(p64+1) << 8) | this.memory.charCodeAt(p64)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+3) << 8) | this.memory.charCodeAt(p64+2)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+5) << 8) | this.memory.charCodeAt(p64+4)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+7) << 8) | this.memory.charCodeAt(p64+6)\n\t\t\t\t)\n\t\t\tthis.v1.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\tp64 += 8\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory.charCodeAt(p64+1) << 8) | this.memory.charCodeAt(p64)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+3) << 8) | this.memory.charCodeAt(p64+2)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+5) << 8) | this.memory.charCodeAt(p64+4)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+7) << 8) | this.memory.charCodeAt(p64+6)\n\t\t\t\t)\n\t\t\tthis.v2.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\tp64 += 8\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory.charCodeAt(p64+1) << 8) | this.memory.charCodeAt(p64)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+3) << 8) | this.memory.charCodeAt(p64+2)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+5) << 8) | this.memory.charCodeAt(p64+4)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+7) << 8) | this.memory.charCodeAt(p64+6)\n\t\t\t\t)\n\t\t\tthis.v3.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\tp64 += 8\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory.charCodeAt(p64+1) << 8) | this.memory.charCodeAt(p64)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+3) << 8) | this.memory.charCodeAt(p64+2)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+5) << 8) | this.memory.charCodeAt(p64+4)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+7) << 8) | this.memory.charCodeAt(p64+6)\n\t\t\t\t)\n\t\t\tthis.v4.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t} else {\n\t\t\tvar other\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory[p64+1] << 8) | this.memory[p64]\n\t\t\t\t,\t(this.memory[p64+3] << 8) | this.memory[p64+2]\n\t\t\t\t,\t(this.memory[p64+5] << 8) | this.memory[p64+4]\n\t\t\t\t,\t(this.memory[p64+7] << 8) | this.memory[p64+6]\n\t\t\t\t)\n\t\t\tthis.v1.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\tp64 += 8\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory[p64+1] << 8) | this.memory[p64]\n\t\t\t\t,\t(this.memory[p64+3] << 8) | this.memory[p64+2]\n\t\t\t\t,\t(this.memory[p64+5] << 8) | this.memory[p64+4]\n\t\t\t\t,\t(this.memory[p64+7] << 8) | this.memory[p64+6]\n\t\t\t\t)\n\t\t\tthis.v2.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\tp64 += 8\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory[p64+1] << 8) | this.memory[p64]\n\t\t\t\t,\t(this.memory[p64+3] << 8) | this.memory[p64+2]\n\t\t\t\t,\t(this.memory[p64+5] << 8) | this.memory[p64+4]\n\t\t\t\t,\t(this.memory[p64+7] << 8) | this.memory[p64+6]\n\t\t\t\t)\n\t\t\tthis.v3.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\tp64 += 8\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory[p64+1] << 8) | this.memory[p64]\n\t\t\t\t,\t(this.memory[p64+3] << 8) | this.memory[p64+2]\n\t\t\t\t,\t(this.memory[p64+5] << 8) | this.memory[p64+4]\n\t\t\t\t,\t(this.memory[p64+7] << 8) | this.memory[p64+6]\n\t\t\t\t)\n\t\t\tthis.v4.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t}\n\n\t\tp += 32 - this.memsize\n\t\tthis.memsize = 0\n\t\tif (isString) this.memory = ''\n\t}\n\n\tif (p <= bEnd - 32)\n\t{\n\t\tvar limit = bEnd - 32\n\n\t\tdo\n\t\t{\n\t\t\tif (isString) {\n\t\t\t\tvar other\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t\t,\t(input.charCodeAt(p+5) << 8) | input.charCodeAt(p+4)\n\t\t\t\t\t,\t(input.charCodeAt(p+7) << 8) | input.charCodeAt(p+6)\n\t\t\t\t\t)\n\t\t\t\tthis.v1.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t\t,\t(input.charCodeAt(p+5) << 8) | input.charCodeAt(p+4)\n\t\t\t\t\t,\t(input.charCodeAt(p+7) << 8) | input.charCodeAt(p+6)\n\t\t\t\t\t)\n\t\t\t\tthis.v2.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t\t,\t(input.charCodeAt(p+5) << 8) | input.charCodeAt(p+4)\n\t\t\t\t\t,\t(input.charCodeAt(p+7) << 8) | input.charCodeAt(p+6)\n\t\t\t\t\t)\n\t\t\t\tthis.v3.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t\t,\t(input.charCodeAt(p+5) << 8) | input.charCodeAt(p+4)\n\t\t\t\t\t,\t(input.charCodeAt(p+7) << 8) | input.charCodeAt(p+6)\n\t\t\t\t\t)\n\t\t\t\tthis.v4.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t} else {\n\t\t\t\tvar other\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t\t,\t(input[p+5] << 8) | input[p+4]\n\t\t\t\t\t,\t(input[p+7] << 8) | input[p+6]\n\t\t\t\t\t)\n\t\t\t\tthis.v1.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t\t,\t(input[p+5] << 8) | input[p+4]\n\t\t\t\t\t,\t(input[p+7] << 8) | input[p+6]\n\t\t\t\t\t)\n\t\t\t\tthis.v2.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t\t,\t(input[p+5] << 8) | input[p+4]\n\t\t\t\t\t,\t(input[p+7] << 8) | input[p+6]\n\t\t\t\t\t)\n\t\t\t\tthis.v3.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t\t,\t(input[p+5] << 8) | input[p+4]\n\t\t\t\t\t,\t(input[p+7] << 8) | input[p+6]\n\t\t\t\t\t)\n\t\t\t\tthis.v4.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t}\n\t\t\tp += 8\n\t\t} while (p <= limit)\n\t}\n\n\tif (p < bEnd)\n\t{\n\t\t// XXH64_memcpy(this.memory, p, bEnd-p);\n\t\tif (isString) {\n\t\t\tthis.memory += input.slice(p)\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory.set( input.subarray(p, bEnd), this.memsize )\n\t\t} else {\n\t\t\tinput.copy( this.memory, this.memsize, p, bEnd )\n\t\t}\n\n\t\tthis.memsize = bEnd - p\n\t}\n\n\treturn this\n}\n\n/**\n * Finalize the XXH64 computation. The XXH64 instance is ready for reuse for the given seed\n * @method digest\n * @return {UINT64} xxHash\n */\nXXH64.prototype.digest = function () {\n\tvar input = this.memory\n\tvar isString = typeof input == 'string'\n\tvar p = 0\n\tvar bEnd = this.memsize\n\tvar h64, h\n\tvar u = new UINT64\n\n\tif (this.total_len >= 32)\n\t{\n\t\th64 = this.v1.clone().rotl(1)\n\t\th64.add( this.v2.clone().rotl(7) )\n\t\th64.add( this.v3.clone().rotl(12) )\n\t\th64.add( this.v4.clone().rotl(18) )\n\n\t\th64.xor( this.v1.multiply(PRIME64_2).rotl(31).multiply(PRIME64_1) )\n\t\th64.multiply(PRIME64_1).add(PRIME64_4)\n\n\t\th64.xor( this.v2.multiply(PRIME64_2).rotl(31).multiply(PRIME64_1) )\n\t\th64.multiply(PRIME64_1).add(PRIME64_4)\n\n\t\th64.xor( this.v3.multiply(PRIME64_2).rotl(31).multiply(PRIME64_1) )\n\t\th64.multiply(PRIME64_1).add(PRIME64_4)\n\n\t\th64.xor( this.v4.multiply(PRIME64_2).rotl(31).multiply(PRIME64_1) )\n\t\th64.multiply(PRIME64_1).add(PRIME64_4)\n\t}\n\telse\n\t{\n\t\th64  = this.seed.clone().add( PRIME64_5 )\n\t}\n\n\th64.add( u.fromNumber(this.total_len) )\n\n\twhile (p <= bEnd - 8)\n\t{\n\t\tif (isString) {\n\t\t\tu.fromBits(\n\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t,\t(input.charCodeAt(p+5) << 8) | input.charCodeAt(p+4)\n\t\t\t,\t(input.charCodeAt(p+7) << 8) | input.charCodeAt(p+6)\n\t\t\t)\n\t\t} else {\n\t\t\tu.fromBits(\n\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t,\t(input[p+5] << 8) | input[p+4]\n\t\t\t,\t(input[p+7] << 8) | input[p+6]\n\t\t\t)\n\t\t}\n\t\tu.multiply(PRIME64_2).rotl(31).multiply(PRIME64_1)\n\t\th64\n\t\t\t.xor(u)\n\t\t\t.rotl(27)\n\t\t\t.multiply( PRIME64_1 )\n\t\t\t.add( PRIME64_4 )\n\t\tp += 8\n\t}\n\n\tif (p + 4 <= bEnd) {\n\t\tif (isString) {\n\t\t\tu.fromBits(\n\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t,\t0\n\t\t\t,\t0\n\t\t\t)\n\t\t} else {\n\t\t\tu.fromBits(\n\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t,\t0\n\t\t\t,\t0\n\t\t\t)\n\t\t}\n\t\th64\n\t\t\t.xor( u.multiply(PRIME64_1) )\n\t\t\t.rotl(23)\n\t\t\t.multiply( PRIME64_2 )\n\t\t\t.add( PRIME64_3 )\n\t\tp += 4\n\t}\n\n\twhile (p < bEnd)\n\t{\n\t\tu.fromBits( isString ? input.charCodeAt(p++) : input[p++], 0, 0, 0 )\n\t\th64\n\t\t\t.xor( u.multiply(PRIME64_5) )\n\t\t\t.rotl(11)\n\t\t\t.multiply(PRIME64_1)\n\t}\n\n\th = h64.clone().shiftRight(33)\n\th64.xor(h).multiply(PRIME64_2)\n\n\th = h64.clone().shiftRight(29)\n\th64.xor(h).multiply(PRIME64_3)\n\n\th = h64.clone().shiftRight(32)\n\th64.xor(h)\n\n\t// Reset the state\n\tthis.init( this.seed )\n\n\treturn h64\n}\n\nmodule.exports = XXH64\n","\"use strict\";\n/* file : base-filter.ts\nMIT License\n\nCopyright (c) 2017-2020 Thomas Minier & Arnaud Grall\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar seedrandom_1 = __importDefault(require(\"seedrandom\"));\nvar hashing_1 = __importDefault(require(\"./hashing/hashing\"));\nvar utils_1 = require(\"./utils\");\n/**\n * A base class for implementing probailistic filters\n * @author Thomas Minier\n * @author Arnaud Grall\n */\nvar BaseFilter = /** @class */ (function () {\n    function BaseFilter() {\n        this._seed = (0, utils_1.getDefaultSeed)();\n        this._rng = (0, seedrandom_1.default)(\"\".concat(this._seed));\n        this._hashing = new hashing_1.default();\n    }\n    Object.defineProperty(BaseFilter.prototype, \"seed\", {\n        /**\n         * Get the seed used in this structure\n         */\n        get: function () {\n            return this._seed;\n        },\n        /**\n         * Set the seed for this structure\n         * @param  seed the new seed that will be used in this structure\n         */\n        set: function (seed) {\n            this._seed = seed;\n            this._rng = (0, seedrandom_1.default)(\"\".concat(this._seed));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseFilter.prototype, \"random\", {\n        /**\n         * Get a function used to draw random number\n         * @return A factory function used to draw random integer\n         */\n        get: function () {\n            return this._rng;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Return a next random seeded int32 integer\n     * @returns\n     */\n    BaseFilter.prototype.nextInt32 = function () {\n        return this._rng.int32();\n    };\n    /**\n     * Save the current structure as a JSON\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    BaseFilter.prototype.saveAsJSON = function () {\n        throw new Error('not-implemented');\n    };\n    /**\n     * Load an Object from a provided JSON object\n     * @param json the JSON object to load\n     * @return Return the Object loaded from the provided JSON object\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n    BaseFilter.fromJSON = function (json) {\n        throw new Error(\"not-implemented\");\n    };\n    return BaseFilter;\n}());\nexports.default = BaseFilter;\n","\"use strict\";\n/* file : BitSet.ts\nMIT License\n\nCopyright (c) 2021 David Leppik\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base64_arraybuffer_1 = require(\"base64-arraybuffer\");\nvar bitsPerWord = 8;\n/**\n * A memory-efficient Boolean array. Contains just the minimal operations needed for our Bloom filter implementation.\n *\n * @author David Leppik\n */\nvar BitSet = /** @class */ (function () {\n    /**\n     * Constructor. All bits are initially set to false.\n     * @param size the number of bits that can be stored. (This is NOT required to be a multiple of 8.)\n     */\n    function BitSet(size) {\n        var diff = bitsPerWord - (size % bitsPerWord);\n        this.size = size + ([0, 8].includes(diff) ? 0 : diff);\n        this.array = new Uint8Array(Math.ceil(this.size / bitsPerWord));\n    }\n    /**\n     * Returns the value of the bit at the given index\n     * @param index position of the bit, zero-indexed\n     */\n    BitSet.prototype.has = function (index) {\n        var wordIndex = Math.floor(index / bitsPerWord);\n        var mask = 1 << index % bitsPerWord;\n        return (this.array[wordIndex] & mask) !== 0;\n    };\n    /**\n     * Set the bit to true\n     * @param index position of the bit, zero-indexed\n     */\n    BitSet.prototype.add = function (index) {\n        var wordIndex = Math.floor(index / bitsPerWord);\n        var mask = 1 << index % bitsPerWord;\n        this.array[wordIndex] = this.array[wordIndex] | mask;\n    };\n    /**\n     * Returns the maximum true bit.\n     */\n    BitSet.prototype.max = function () {\n        for (var i = this.array.length - 1; i >= 0; i--) {\n            var bits = this.array[i];\n            if (bits) {\n                return BitSet.highBit(bits) + i * bitsPerWord;\n            }\n        }\n        return 0;\n    };\n    /**\n     * Returns the number of true bits.\n     */\n    BitSet.prototype.bitCount = function () {\n        var result = 0;\n        for (var i = 0; i < this.array.length; i++) {\n            result += BitSet.countBits(this.array[i]); // Assumes we never have bits set beyond the end\n        }\n        return result;\n    };\n    /**\n     * Returns true if the size and contents are identical.\n     * @param other another BitSet\n     */\n    BitSet.prototype.equals = function (other) {\n        if (other.size !== this.size) {\n            return false;\n        }\n        for (var i = 0; i < this.array.length; i++) {\n            if (this.array[i] !== other.array[i]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Returns a JSON-encodable object readable by {@link import}.\n     */\n    BitSet.prototype.export = function () {\n        return {\n            size: this.size,\n            content: (0, base64_arraybuffer_1.encode)(this.array),\n        };\n    };\n    /**\n     * Returns an object written by {@link export}.\n     * @param data an object written by {@link export}\n     */\n    BitSet.import = function (data) {\n        if (typeof data.size !== 'number') {\n            throw Error('BitSet missing size');\n        }\n        if (typeof data.content !== 'string') {\n            throw Error('BitSet: missing content');\n        }\n        var result = new BitSet(data.size);\n        var buffer = (0, base64_arraybuffer_1.decode)(data.content);\n        result.array = new Uint8Array(buffer);\n        return result;\n    };\n    /**\n     * Returns the index of the maximum bit in the number, or -1 for 0\n     * @bits an unsigned 8-bit number\n     * ```js\n     * @example\n     * BitSet.highBit(0) // returns -1\n     * BitSet.highBit(5) // returns 2\n     * ```\n     */\n    BitSet.highBit = function (bits) {\n        var result = bitsPerWord - 1;\n        var mask = 1 << result;\n        while (result >= 0 && (mask & bits) !== mask) {\n            mask >>>= 1;\n            result--;\n        }\n        return result;\n    };\n    /**\n     * Returns the number of true bits in the number\n     * @bits an unsigned 8-bit number\n     * @example\n     * ```js\n     * BitSet.countBits(0) // returns 0\n     * BitSet.countBits(3) // returns 2\n     * ```\n     */\n    BitSet.countBits = function (bits) {\n        var result = bits & 1;\n        while (bits !== 0) {\n            bits = bits >>> 1;\n            result += bits & 1;\n        }\n        return result;\n    };\n    return BitSet;\n}());\nexports.default = BitSet;\n","\"use strict\";\n/* file : partitioned-bloom-filter.ts\nMIT License\n\nCopyright (c) 2017-2020 Thomas Minier & Arnaud Grall\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_filter_1 = __importDefault(require(\"../base-filter\"));\nvar exportable_1 = require(\"../exportable\");\nvar utils_1 = require(\"../utils\");\nvar bit_set_1 = __importDefault(require(\"./bit-set\"));\n/**\n * Return the optimal number of hashes needed for a given error rate and load factor\n * P = p^k <=> k = ln(P)/ln(p)\n * @param  errorRate - The provided error rate\n * @param  loadFactor - The load factor, ideally 0.5\n * @return The number of hash function to use\n */\nfunction computeOptimalNumberOfhashes(errorRate, loadFactor) {\n    // P = p^k <=> k = ln(P)/ln(p)\n    return Math.ceil(Math.log(errorRate) / Math.log(loadFactor));\n}\n/**\n * Return the total number of bits needed for this filter\n * n = M*(ln(p)ln(1-p))/(-ln(P)) <=> M = (n*-ln(P)/(ln(p)ln(1-p))\n * @param  size - The number of desired items\n * @param  rate - The error rate desired\n * @param  loadFactor - The load factor desired\n * @return The total number of cells this filter will have\n */\nfunction computeOptimalNumberOfCells(size, rate, loadFactor) {\n    // n=M*(ln(p)ln(1-p))/(-ln(P)) <=> M=(n*-ln(P)/(ln(p)ln(1-p))\n    return Math.ceil((size * -Math.log(rate)) / (Math.log(loadFactor) * Math.log(1 - loadFactor)));\n}\n/**\n * Return the maximum number of items this filter can store\n * @param  totalBits - The total number of cells in the filter\n * @param  loadFactor - The load factor desired\n * @param  nbHashes - The number of hash functions used\n * @return The maximum number of items this filter store\n */\nfunction computeNumberOfItems(totalBits, loadFactor, nbHashes) {\n    return Math.ceil((totalBits * (Math.log(loadFactor) * Math.log(1 - loadFactor))) /\n        -(nbHashes * Math.log(loadFactor)));\n}\n/**\n * A Partitioned Bloom Filter is a variation of a classic Bloom filter.\n *\n * This filter works by partitioning the M-sized bit array into k slices of size m = M/k bits, k = nb of hash functions in the filter.\n * Each hash function produces an index over m for its respective slice.\n * Thus, each element is described by exactly k bits, meaning the distribution of false positives is uniform across all elements.\n *\n * Be careful, as a Partitioned Bloom Filter have much higher collison risks that a classic Bloom Filter on small sets of data.\n *\n * Reference: Chang, F., Feng, W. C., & Li, K. (2004, March). Approximate caches for packet classification. In INFOCOM 2004. Twenty-third AnnualJoint Conference of the IEEE Computer and Communications Societies (Vol. 4, pp. 2196-2207). IEEE.\n * @see {@link https://pdfs.semanticscholar.org/0e18/e24b37a1f4196fddf8c9ff8e4368b74cfd88.pdf} for more details about Partitioned Bloom Filters\n * @author Thomas Minier & Arnaud Grall\n */\nvar PartitionedBloomFilter = /** @class */ (function (_super) {\n    __extends(PartitionedBloomFilter, _super);\n    /**\n     * Constructor\n     * @param size - The total number of cells\n     * @param nbHashes - The number of hash functions\n     * @param loadFactor - The load factor\n     * @param capacity - The filter capacity\n     */\n    function PartitionedBloomFilter(size, nbHashes, loadFactor, capacity) {\n        var _this = _super.call(this) || this;\n        _this._size = size;\n        _this._nbHashes = nbHashes;\n        _this._loadFactor = loadFactor;\n        _this._m = Math.ceil(_this._size / _this._nbHashes);\n        _this._filter = (0, utils_1.allocateArray)(_this._nbHashes, function () { return new bit_set_1.default(_this._m); });\n        _this._capacity =\n            capacity !== undefined\n                ? capacity\n                : computeNumberOfItems(_this._size, loadFactor, nbHashes);\n        return _this;\n    }\n    PartitionedBloomFilter_1 = PartitionedBloomFilter;\n    /**\n     * Return a PartitionedBloomFilter for a given number of elements and under a given error rate\n     * @param  size - The max allowable number of items to insert\n     * @param  errorRate - The desired error rate\n     * @return A new PartitionedBloomFilter optimal for the given parameters\n     */\n    PartitionedBloomFilter.create = function (size, errorRate, loadFactor) {\n        if (loadFactor === void 0) { loadFactor = 0.5; }\n        var capacity = computeOptimalNumberOfCells(size, errorRate, loadFactor);\n        var nbHashes = computeOptimalNumberOfhashes(errorRate, loadFactor);\n        return new PartitionedBloomFilter_1(capacity, nbHashes, loadFactor, size);\n    };\n    /**\n     * Build a new Partitioned Bloom Filter from an existing iterable with a fixed error rate\n     * @param items - The iterable used to populate the filter\n     * @param errorRate - The error rate, i.e. 'false positive' rate, targetted by the filter\n     * @param loadFactor - The filter's load factor\n     * @return A new Bloom Filter filled with the iterable's elements\n     * @example\n     * ```js\n     * // create a filter with a false positive rate of 0.1\n     * const filter = PartitionedBloomFilter.from(['alice', 'bob', 'carl'], 0.1);\n     * ```\n     */\n    PartitionedBloomFilter.from = function (items, errorRate, loadFactor) {\n        if (loadFactor === void 0) { loadFactor = 0.5; }\n        var array = Array.from(items);\n        var filter = PartitionedBloomFilter_1.create(array.length, errorRate, loadFactor);\n        array.forEach(function (element) { return filter.add(element); });\n        return filter;\n    };\n    Object.defineProperty(PartitionedBloomFilter.prototype, \"capacity\", {\n        /**\n         * Get the filter capacity, i.e. the maximum number of elements it will contains\n         */\n        get: function () {\n            return this._capacity;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PartitionedBloomFilter.prototype, \"size\", {\n        /**\n         * Get the size of the filter\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PartitionedBloomFilter.prototype, \"loadFactor\", {\n        /**\n         * Get the filter's load factor\n         */\n        get: function () {\n            return this._loadFactor;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Add an element to the filter\n     * @param element - The element to add\n     * @example\n     * ```js\n     * const filter = new PartitionedBloomFilter(15, 0.1);\n     * filter.add('foo');\n     * ```\n     */\n    PartitionedBloomFilter.prototype.add = function (element) {\n        var indexes = this._hashing.getIndexes(element, this._m, this._nbHashes, this.seed);\n        for (var i = 0; i < this._nbHashes; i++) {\n            this._filter[i].add(indexes[i]);\n        }\n    };\n    /**\n     * Test an element for membership\n     * @param element - The element to look for in the filter\n     * @return False if the element is definitively not in the filter, True is the element might be in the filter\n     * @example\n     * ```js\n     * const filter = new PartitionedBloomFilter(15, 0.1);\n     * filter.add('foo');\n     * console.log(filter.has('foo')); // output: true\n     * console.log(filter.has('bar')); // output: false\n     * ```\n     */\n    PartitionedBloomFilter.prototype.has = function (element) {\n        var indexes = this._hashing.getIndexes(element, this._m, this._nbHashes, this.seed);\n        for (var i = 0; i < this._nbHashes; i++) {\n            if (!this._filter[i].has(indexes[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Compute the current false positive rate (or error rate) of the filter\n     * @return The current false positive rate of the filter\n     * @example\n     * ```js\n     * const filter = PartitionedBloomFilter.create(15, 0.1);\n     * console.log(filter.rate()); // output: something around 0.1\n     * ```\n     */\n    PartitionedBloomFilter.prototype.rate = function () {\n        // get the error rate for the first bucket (1 - (1 - 1/m)^n), where m is the size of a slice and n is the number of inserted elements\n        var p = this._currentload();\n        // P = p^k\n        return Math.pow(p, this._nbHashes);\n    };\n    /**\n     * Check if another Partitioned Bloom Filter is equal to this one\n     * @param  filter - The filter to compare to this one\n     * @return True if they are equal, false otherwise\n     */\n    PartitionedBloomFilter.prototype.equals = function (other) {\n        if (this._size !== other._size ||\n            this._nbHashes !== other._nbHashes ||\n            this._loadFactor !== other._loadFactor) {\n            return false;\n        }\n        return this._filter.every(function (array, outerIndex) {\n            return other._filter[outerIndex].equals(array);\n        });\n    };\n    /**\n     * Return the current load of this filter, iterate on all buckets\n     * @return An integer between 0 and 1, where 0 = filter empty and 1 = filter full\n     */\n    PartitionedBloomFilter.prototype._currentload = function () {\n        var values = this._filter.map(function (bucket) {\n            return bucket.bitCount();\n        });\n        var used = values.reduce(function (a, b) { return a + b; }, 0);\n        return used / this._size;\n    };\n    var PartitionedBloomFilter_1;\n    __decorate([\n        (0, exportable_1.Field)(),\n        __metadata(\"design:type\", Number)\n    ], PartitionedBloomFilter.prototype, \"_size\", void 0);\n    __decorate([\n        (0, exportable_1.Field)(),\n        __metadata(\"design:type\", Number)\n    ], PartitionedBloomFilter.prototype, \"_nbHashes\", void 0);\n    __decorate([\n        (0, exportable_1.Field)(),\n        __metadata(\"design:type\", Number)\n    ], PartitionedBloomFilter.prototype, \"_loadFactor\", void 0);\n    __decorate([\n        (0, exportable_1.Field)(),\n        __metadata(\"design:type\", Number)\n    ], PartitionedBloomFilter.prototype, \"_m\", void 0);\n    __decorate([\n        (0, exportable_1.Field)(function (sets) { return sets.map(function (s) { return s.export(); }); }, function (array) {\n            return array.map(function (data) {\n                // create the bitset from new and old array-based exported structure\n                if (Array.isArray(data)) {\n                    var bs_1 = new bit_set_1.default(data.length);\n                    data.forEach(function (val, index) {\n                        if (val !== 0) {\n                            bs_1.add(index);\n                        }\n                    });\n                    return bs_1;\n                }\n                else {\n                    return bit_set_1.default.import(data);\n                }\n            });\n        }),\n        __metadata(\"design:type\", Array)\n    ], PartitionedBloomFilter.prototype, \"_filter\", void 0);\n    __decorate([\n        (0, exportable_1.Field)(),\n        __metadata(\"design:type\", Number)\n    ], PartitionedBloomFilter.prototype, \"_capacity\", void 0);\n    PartitionedBloomFilter = PartitionedBloomFilter_1 = __decorate([\n        (0, exportable_1.AutoExportable)('PartitionedBloomFilter', ['_seed']),\n        __param(0, (0, exportable_1.Parameter)('_size')),\n        __param(1, (0, exportable_1.Parameter)('_nbHashes')),\n        __param(2, (0, exportable_1.Parameter)('_loadFactor')),\n        __param(3, (0, exportable_1.Parameter)('_capacity')),\n        __metadata(\"design:paramtypes\", [Number, Number, Number, Number])\n    ], PartitionedBloomFilter);\n    return PartitionedBloomFilter;\n}(base_filter_1.default));\nexports.default = PartitionedBloomFilter;\n","\"use strict\";\n/* file : scalable-bloom-filter.ts\nMIT License\n\nCopyright (c) 2022 Thomas Minier & Arnaud Grall\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_filter_1 = __importDefault(require(\"../base-filter\"));\nvar exportable_1 = require(\"../exportable\");\nvar partitioned_bloom_filter_1 = __importDefault(require(\"./partitioned-bloom-filter\"));\nvar seedrandom_1 = __importDefault(require(\"seedrandom\"));\n/**\n * A Scalable Bloom Filter is a variant of Bloom Filters that can adapt dynamically to the\nnumber of elements stored, while assuring a maximum false positive probability\n *\n * Reference: ALMEIDA, Paulo Sérgio, BAQUERO, Carlos, PREGUIÇA, Nuno, et al. Scalable bloom filters. Information Processing Letters, 2007, vol. 101, no 6, p. 255-261.\n * @see {@link https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.725.390&rep=rep1&type=pdf}\n * @author Thomas Minier & Arnaud Grall\n */\nvar ScalableBloomFilter = /** @class */ (function (_super) {\n    __extends(ScalableBloomFilter, _super);\n    function ScalableBloomFilter(_initial_size, _error_rate, _ratio) {\n        if (_initial_size === void 0) { _initial_size = 8; }\n        if (_error_rate === void 0) { _error_rate = 0.01; }\n        if (_ratio === void 0) { _ratio = 0.5; }\n        var _this = _super.call(this) || this;\n        /**\n         * Internal Partition Bloom Filters\n         */\n        _this._filters = [];\n        _this._initial_size = _initial_size;\n        _this._error_rate = _error_rate;\n        _this._ratio = _ratio;\n        _this._filters.push(partitioned_bloom_filter_1.default.create(_this._initial_size, _this._error_rate, _this._ratio));\n        _this._filters[_this._filters.length - 1].seed = _this.seed;\n        return _this;\n    }\n    ScalableBloomFilter_1 = ScalableBloomFilter;\n    Object.defineProperty(ScalableBloomFilter.prototype, \"seed\", {\n        /**\n         * @override\n         * Return the current seed.\n         * For obscure reason we must code this function...\n         */\n        get: function () {\n            return this._seed;\n        },\n        /**\n         * @override\n         * Set the seed for this structure. If you override the seed after adding data,\n         * all the filters will be updated and you may get wrong indexes for already indexed data\n         * due to the seed change. So only change it once before adding data.\n         * @param  seed the new seed that will be used in this structure\n         */\n        set: function (seed) {\n            var _this = this;\n            this._seed = seed;\n            this._rng = (0, seedrandom_1.default)(\"\".concat(this._seed));\n            this._filters.forEach(function (filter) {\n                filter.seed = _this.seed;\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Add a new element to the filter\n     * @param element\n     */\n    ScalableBloomFilter.prototype.add = function (element) {\n        // determine if we need to create a new filter\n        var currentFilter = this._filters[this._filters.length - 1];\n        if (currentFilter._currentload() > currentFilter._loadFactor) {\n            // create a new filter\n            var newSize = this._initial_size *\n                Math.pow(ScalableBloomFilter_1._s, this._filters.length + 1) *\n                Math.LN2;\n            var newErrorRate = this._error_rate * Math.pow(this._ratio, this._filters.length);\n            this._filters.push(partitioned_bloom_filter_1.default.create(newSize, newErrorRate, this._ratio));\n            this._filters[this._filters.length - 1].seed = this.seed;\n        }\n        // get the newly created filter\n        this._filters[this._filters.length - 1].add(element);\n    };\n    /**\n     * Return True if the element has been found, false otherwise.\n     * Check until we found the value in a filter otherwise stop on the first value found.\n     * @param element\n     * @returns\n     */\n    ScalableBloomFilter.prototype.has = function (element) {\n        return this._filters.some(function (filter) { return filter.has(element); });\n    };\n    /**\n     * Return the current capacity (number of elements) of this filter\n     * @returns\n     */\n    ScalableBloomFilter.prototype.capacity = function () {\n        return this._filters.map(function (f) { return f._capacity; }).reduce(function (p, c) { return p + c; }, 0);\n    };\n    /**\n     * Return the current false positive rate of this structure\n     * @returns\n     */\n    ScalableBloomFilter.prototype.rate = function () {\n        return this._filters[this._filters.length - 1].rate();\n    };\n    /**\n     * Check if two ScalableBloomFilter are equal\n     * @param filter\n     * @returns\n     */\n    ScalableBloomFilter.prototype.equals = function (filter) {\n        // assert the seed, the ratio and the capacity are equals\n        if (this.seed !== filter.seed ||\n            this._ratio !== filter._ratio ||\n            this.capacity() !== filter.capacity()) {\n            return false;\n        }\n        return this._filters.every(function (currentFilter, index) {\n            return filter._filters[index].equals(currentFilter);\n        });\n    };\n    /**\n     * Create a Scalable Bloom Filter based on Partitionned Bloom Filter.\n     * @param _size the starting size of the filter\n     * @param _error_rate ther error rate desired of the filter\n     * @param _ratio the load factor desired\n     * @returns\n     */\n    ScalableBloomFilter.create = function (_size, _error_rate, _ratio) {\n        if (_ratio === void 0) { _ratio = 0.5; }\n        return new ScalableBloomFilter_1(_size, _error_rate, _ratio);\n    };\n    var ScalableBloomFilter_1;\n    /**\n     * Static value, will power the size of the new set, by default we will follow a power of 2.\n     */\n    ScalableBloomFilter._s = 2;\n    __decorate([\n        (0, exportable_1.Field)(),\n        __metadata(\"design:type\", Number)\n    ], ScalableBloomFilter.prototype, \"_initial_size\", void 0);\n    __decorate([\n        (0, exportable_1.Field)(),\n        __metadata(\"design:type\", Number)\n    ], ScalableBloomFilter.prototype, \"_error_rate\", void 0);\n    __decorate([\n        (0, exportable_1.Field)(),\n        __metadata(\"design:type\", Number)\n    ], ScalableBloomFilter.prototype, \"_ratio\", void 0);\n    __decorate([\n        (0, exportable_1.Field)(function (filters) {\n            return filters.map(function (filter) { return filter.saveAsJSON(); });\n        }, // eslint-disable-line @typescript-eslint/no-unsafe-return\n        function (array) {\n            return array.map(function (data) { return partitioned_bloom_filter_1.default.fromJSON(data); });\n        }),\n        __metadata(\"design:type\", Array)\n    ], ScalableBloomFilter.prototype, \"_filters\", void 0);\n    ScalableBloomFilter = ScalableBloomFilter_1 = __decorate([\n        (0, exportable_1.AutoExportable)('ScalableBloomFilter', ['_seed']),\n        __param(0, (0, exportable_1.Parameter)('_initial_size')),\n        __param(1, (0, exportable_1.Parameter)('_error_rate')),\n        __param(2, (0, exportable_1.Parameter)('_ratio')),\n        __metadata(\"design:paramtypes\", [Object, Object, Object])\n    ], ScalableBloomFilter);\n    return ScalableBloomFilter;\n}(base_filter_1.default));\nexports.default = ScalableBloomFilter;\n","\"use strict\";\n/* file : exportable.ts\nMIT License\n\nCopyright (c) 2017-2020 Thomas Minier & Arnaud Grall\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n// !disable all rules referring to `any` for exportable because we are dealing with all types so any is allowed\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoExportable = exports.Parameter = exports.Field = exports.Exportable = exports.cloneObject = exports.cloneField = void 0;\nrequire(\"reflect-metadata\");\n/**\n * Clone a field of a filter (array, object or any primary type)\n * @param  {*} v - Value to clone\n * @return {*} Cloned value\n */\nfunction cloneField(v) {\n    if (v === null || v === undefined) {\n        return v;\n    }\n    if (Array.isArray(v)) {\n        return v.map(cloneField);\n    }\n    else if (typeof v === 'object') {\n        if ('saveAsJSON' in v) {\n            return v.saveAsJSON();\n        }\n        return Object.assign({}, v);\n    }\n    return v;\n}\nexports.cloneField = cloneField;\n/**\n * Get a function used to clone an object\n * @param type - Object type\n * @param fields - Object's fields to clone\n * @return A function that clones the given fields of an input object\n */\nfunction cloneObject(type) {\n    var fields = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        fields[_i - 1] = arguments[_i];\n    }\n    return function (obj) {\n        var json = { type: type };\n        fields.forEach(function (field) {\n            json[field] = cloneField(obj[field]);\n        });\n        return json;\n    };\n}\nexports.cloneObject = cloneObject;\n/**\n * Turn a datastructure into an exportable one, so it can be serialized from/to JSON objects.\n * @param specs - An object that describes how the datastructure should be exported/imported\n * @author Thomas Minier\n */\nfunction Exportable(specs) {\n    return function (target) {\n        target.prototype.saveAsJSON = function () {\n            return specs.export(this);\n        };\n        target.fromJSON = function (json) {\n            return specs.import(json);\n        };\n        return target;\n    };\n}\nexports.Exportable = Exportable;\nvar METADATA_CLASSNAME = Symbol('bloom-filters:exportable:class-name');\nvar METADATA_FIELDS = Symbol('bloom-filters:exportable:fields');\nvar METADATA_PARAMETERS = Symbol('bloom-filters:exportable:constructor-parameters');\n/**\n * Register a field to be exportable/importable\n * @param importer - Function invoked on the JSON field to convert it into JavaScript\n */\nfunction Field(exporter, importer) {\n    if (exporter === undefined) {\n        exporter = cloneField;\n    }\n    if (importer === undefined) {\n        importer = function (v) { return v; };\n    }\n    return function (target, propertyKey) {\n        var fields = [];\n        if (Reflect.hasMetadata(METADATA_FIELDS, target)) {\n            fields = Reflect.getMetadata(METADATA_FIELDS, target);\n        }\n        fields.push({\n            name: propertyKey,\n            exporter: exporter,\n            importer: importer, // eslint-disable-line @typescript-eslint/no-non-null-assertion\n        });\n        Reflect.defineMetadata(METADATA_FIELDS, fields, target);\n    };\n}\nexports.Field = Field;\nfunction Parameter(fieldName) {\n    return function (target, propertyKey, parameterIndex) {\n        var parameters = new Map();\n        if (Reflect.hasMetadata(METADATA_PARAMETERS, target)) {\n            parameters = Reflect.getMetadata(METADATA_PARAMETERS, target);\n        }\n        parameters.set(fieldName, parameterIndex);\n        Reflect.defineMetadata(METADATA_PARAMETERS, parameters, target);\n    };\n}\nexports.Parameter = Parameter;\n/**\n * Augment a TypeScript class to make it exportable/importable, using @Field and @Parameter decorator\n * @param className - Name of the exportable/importable class\n */\nfunction AutoExportable(className, otherFields) {\n    if (otherFields === void 0) { otherFields = []; }\n    return function (target) {\n        Reflect.defineMetadata(METADATA_CLASSNAME, className, target.prototype);\n        if (!Reflect.hasMetadata(METADATA_FIELDS, target.prototype) ||\n            otherFields.length === 0) {\n            throw new SyntaxError('No exported fields declared when @AutoExportable is called');\n        }\n        // define empty parameters map, for object with a constructor without parameters\n        if (!Reflect.hasMetadata(METADATA_PARAMETERS, target)) {\n            Reflect.defineMetadata(METADATA_PARAMETERS, new Map(), target);\n        }\n        target.prototype.saveAsJSON = function () {\n            var _this = this;\n            var json = {\n                type: Reflect.getMetadata(METADATA_CLASSNAME, target.prototype),\n            };\n            // export fields defined using the @Field decorator\n            var fields = Reflect.getMetadata(METADATA_FIELDS, target.prototype);\n            fields.forEach(function (field) {\n                json[field.name] = field.exporter(_this[field.name]);\n            });\n            // export fields declared through the otherFields parameter\n            otherFields.forEach(function (field) {\n                json[field] = cloneField(_this[field]);\n            });\n            return json;\n        };\n        target.fromJSON = function (json) {\n            var className = Reflect.getMetadata(METADATA_CLASSNAME, target.prototype);\n            var parameters = Reflect.getMetadata(METADATA_PARAMETERS, target);\n            var fields = Reflect.getMetadata(METADATA_FIELDS, target.prototype);\n            // validate the input JSON\n            if (json.type !== className) {\n                throw new Error(\"Cannot create an object \".concat(className, \" from a JSON export with type \\\"\").concat(json.type, \"\\\"\") // eslint-disable-line @typescript-eslint/restrict-template-expressions\n                );\n            }\n            var constructorArgs = [];\n            var copyFields = [];\n            otherFields\n                .map(function (name) { return ({ name: name, importer: function (v) { return v; } }); })\n                .concat(fields)\n                .forEach(function (field) {\n                if (!(field.name in json)) {\n                    throw new Error(\"Invalid import: required field \\\"\".concat(field, \"\\\" not found in JSON export \\\"\").concat(json, \"\\\"\") // eslint-disable-line @typescript-eslint/restrict-template-expressions\n                    );\n                }\n                // build constructor/copy arguments\n                if (parameters.has(field.name)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    constructorArgs[parameters.get(field.name)] = field.importer(json[field.name]);\n                }\n                else {\n                    copyFields.push({\n                        name: field.name,\n                        value: field.importer(json[field.name]),\n                    });\n                }\n            });\n            // build new object\n            var obj = new (target.bind.apply(target, __spreadArray([void 0], __read(constructorArgs), false)))();\n            // write non-constructor exported fields\n            copyFields.forEach(function (arg) {\n                obj[arg.name] = arg.value;\n            });\n            return obj;\n        };\n    };\n}\nexports.AutoExportable = AutoExportable;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar xxhashjs_1 = __importDefault(require(\"xxhashjs\"));\nvar utils_1 = require(\"../utils\");\nvar Hashing = /** @class */ (function () {\n    function Hashing() {\n    }\n    /**\n     * Apply enhanced Double Hashing to produce a n-hash\n     * @see {@link http://peterd.org/pcd-diss.pdf} s6.5.4\n     * @param  n - The indice of the hash function we want to produce\n     * @param  hashA - The result of the first hash function applied to a value.\n     * @param  hashB - The result of the second hash function applied to a value.\n     * @param  size - The size of the datastructures associated to the hash context (ex: the size of a Bloom Filter)\n     * @return The result of hash_n applied to a value.\n     * @memberof Hashing\n     * @author Thomas Minier\n     * @author Arnaud Grall\n     */\n    Hashing.prototype.doubleHashing = function (n, hashA, hashB, size) {\n        return Math.abs((hashA + n * hashB + Math.floor((Math.pow(n, 3) - n) / 6)) % size);\n    };\n    /**\n     * Generate a set of distinct indexes on interval [0, size) using the double hashing technique\n     * For generating efficiently distinct indexes we re-hash after detecting a cycle by changing slightly the seed.\n     * It has the effect of generating faster distinct indexes without loosing entirely the utility of the double hashing.\n     * For small number of indexes it will work perfectly. For a number close to the size, and size very large\n     * Advise: do not generate `size` indexes for a large interval. In practice, size should be equal\n     * to the number of hash functions used and is often low.\n     *\n     * @param  element  - The element to hash\n     * @param  size     - the range on which we can generate an index [0, size) = size\n     * @param  number   - The number of indexes desired\n     * @param  seed     - The seed used\n     * @return Array<number>\n     * @author Arnaud Grall\n     * @author Simon Woolf (SimonWoolf)\n     */\n    Hashing.prototype.getDistinctIndexes = function (element, size, number, seed) {\n        if (seed === undefined) {\n            seed = (0, utils_1.getDefaultSeed)();\n        }\n        var n = 0;\n        var indexes = new Set();\n        var hashes = this.hashTwice(element, seed);\n        // let cycle = 0\n        while (indexes.size < number) {\n            var ind = hashes.first % size;\n            if (!indexes.has(ind)) {\n                indexes.add(ind);\n            }\n            hashes.first = (hashes.first + hashes.second) % size;\n            hashes.second = (hashes.second + n) % size;\n            n++;\n            if (n > size) {\n                // Enhanced double hashing stops cycles of length less than `size` in the case where\n                // size is coprime with the second hash. But you still get cycles of length `size`.\n                // So if we reach there and haven't finished, append a prime to the input and\n                // rehash.\n                seed++;\n                hashes = this.hashTwice(element, seed);\n            }\n        }\n        return __spreadArray([], __read(indexes.values()), false);\n    };\n    /**\n     * Generate N indexes on range [0, size)\n     * It uses the double hashing technique to generate the indexes.\n     * It hash twice the value only once before generating the indexes.\n     * Warning: you can have a lot of modulo collisions.\n     * @param  element    - The element to hash\n     * @param  size       - The range on which we can generate the index, exclusive\n     * @param  hashCount  - The number of indexes we want\n     * @return An array of indexes on range [0, size)\n     */\n    Hashing.prototype.getIndexes = function (element, size, hashCount, seed) {\n        if (seed === undefined) {\n            seed = (0, utils_1.getDefaultSeed)();\n        }\n        var arr = [];\n        var hashes = this.hashTwice(element, seed);\n        for (var i = 0; i < hashCount; i++) {\n            arr.push(this.doubleHashing(i, hashes.first, hashes.second, size));\n        }\n        return arr;\n    };\n    /**\n     * @internal\n     * Hash an element of type {@link HashableInput} into {@link Number}\n     * Can be overrided as long as you return a value of type {@link Number}\n     * Don't forget to use the seed when hashing, otherwise if some kind of randomness is in the process\n     * you may have inconsistent behaviors between 2 runs.\n     * @param element\n     * @param seed\n     * @returns A 64bits floating point {@link Number}\n     */\n    Hashing.prototype.serialize = function (element, seed) {\n        if (!seed) {\n            seed = (0, utils_1.getDefaultSeed)();\n        }\n        return Number(xxhashjs_1.default.h64(element, seed).toNumber());\n    };\n    /**\n     * (64-bits only) Hash a value into two values (in hex or integer format)\n     * @param  value - The value to hash\n     * @param  asInt - (optional) If True, the values will be returned as an integer. Otherwise, as hexadecimal values.\n     * @param seed the seed used for hashing\n     * @return The results of the hash functions applied to the value (in hex or integer)\n     * @author Arnaud Grall & Thomas Minier\n     */\n    Hashing.prototype.hashTwice = function (value, seed) {\n        if (seed === undefined) {\n            seed = (0, utils_1.getDefaultSeed)();\n        }\n        return {\n            first: this.serialize(value, seed + 1),\n            second: this.serialize(value, seed + 2),\n        };\n    };\n    /**\n     * Hash twice an element into their HEX string representations\n     * @param value\n     * @param seed\n     * @returns TwoHashesTemplated<string>\n     */\n    Hashing.prototype.hashTwiceAsString = function (value, seed) {\n        var _a = this.hashTwice(value, seed), first = _a.first, second = _a.second;\n        return {\n            first: (0, utils_1.numberToHex)(first),\n            second: (0, utils_1.numberToHex)(second),\n        };\n    };\n    /**\n     * (64-bits only) Same as hashTwice but return Numbers and String equivalent\n     * @param  val the value to hash\n     * @param  seed the seed to change when hashing\n     * @return TwoHashesIntAndString\n     * @author Arnaud Grall\n     */\n    Hashing.prototype.hashTwiceIntAndString = function (val, seed) {\n        if (seed === undefined) {\n            seed = (0, utils_1.getDefaultSeed)();\n        }\n        var one = this.hashIntAndString(val, seed + 1);\n        var two = this.hashIntAndString(val, seed + 2);\n        return {\n            int: {\n                first: one.int,\n                second: two.int,\n            },\n            string: {\n                first: one.string,\n                second: two.string,\n            },\n        };\n    };\n    /**\n     * Hash an item as an unsigned int\n     * @param  elem - Element to hash\n     * @param  seed - The hash seed. If its is UINT32 make sure to set the length to 32\n     * @param  length - The length of hashes (defaults to 32 bits)\n     * @return The hash value as an unsigned int\n     * @author Arnaud Grall\n     */\n    Hashing.prototype.hashAsInt = function (elem, seed) {\n        if (seed === undefined) {\n            seed = (0, utils_1.getDefaultSeed)();\n        }\n        return this.serialize(elem, seed);\n    };\n    /**\n     * Hash an item and return its number and HEX string representation\n     * @param  elem - Element to hash\n     * @param  seed - The hash seed. If its is UINT32 make sure to set the length to 32\n     * @param  base - The base in which the string will be returned, default: 16\n     * @param  length - The length of hashes (defaults to 32 bits)\n     * @return The item hased as an int and a string\n     * @author Arnaud Grall\n     */\n    Hashing.prototype.hashIntAndString = function (elem, seed) {\n        var hash = this.hashAsInt(elem, seed);\n        return { int: hash, string: (0, utils_1.numberToHex)(hash) };\n    };\n    return Hashing;\n}());\nexports.default = Hashing;\n","\"use strict\";\n/* file : utils.ts\nMIT License\n\nCopyright (c) 2017-2020 Thomas Minier & Arnaud Grall\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultSeed = exports.isEmptyBuffer = exports.xorBuffer = exports.randomInt = exports.numberToHex = exports.allocateArray = exports.BufferError = void 0;\n/**\n * BufferError\n */\nexports.BufferError = 'The buffer class must be available, if you are a browser user use the buffer package (https://www.npmjs.com/package/buffer)';\n/**\n * Create a new array fill with a base value\n * @param size - The size of the array\n * @param defaultValue - The default value used to fill the array. If it's a function, it will be invoked to get the default value.\n * @return A newly allocated array\n * @memberof Utils\n */\nfunction allocateArray(size, defaultValue) {\n    var array = new Array(size);\n    var getDefault = typeof defaultValue === 'function'\n        ? defaultValue\n        : function () { return defaultValue; };\n    for (var ind = 0; ind < size; ind++) {\n        array[ind] = getDefault();\n    }\n    return array;\n}\nexports.allocateArray = allocateArray;\n/**\n * Return a number to its Hex format by padding zeroes if length mod 4 != 0\n * @param elem the element to transform in HEX\n * @returns the HEX number padded of zeroes\n */\nfunction numberToHex(elem) {\n    var e = Number(elem).toString(16);\n    if (e.length % 4 !== 0) {\n        e = '0'.repeat(4 - (e.length % 4)) + e;\n    }\n    return e;\n}\nexports.numberToHex = numberToHex;\n/**\n * Generate a random int between two bounds (included)\n * @param min - The lower bound\n * @param max - The upper bound\n * @param random - Function used to generate random floats\n * @return A random int bewteen lower and upper bound (included)\n * @memberof Utils\n * @author Thomas Minier\n */\nfunction randomInt(min, max, random) {\n    if (random === undefined) {\n        random = Math.random;\n    }\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    var rn = random();\n    return Math.floor(rn * (max - min + 1)) + min;\n}\nexports.randomInt = randomInt;\n/**\n * Return the non-destructive XOR of two buffers\n * @param a - The buffer to copy, then to xor with b\n * @param b - The buffer to xor with\n * @return The results of the XOR between the two buffers\n * @author Arnaud Grall\n */\nfunction xorBuffer(a, b) {\n    var length = Math.max(a.length, b.length);\n    var buffer = Buffer.allocUnsafe(length).fill(0);\n    for (var i = 0; i < length; ++i) {\n        if (i < a.length && i < b.length) {\n            buffer[length - i - 1] = a[a.length - i - 1] ^ b[b.length - i - 1];\n        }\n        else if (i < a.length && i >= b.length) {\n            buffer[length - i - 1] ^= a[a.length - i - 1];\n        }\n        else if (i < b.length && i >= a.length) {\n            buffer[length - i - 1] ^= b[b.length - i - 1];\n        }\n    }\n    // now need to remove leading zeros in the buffer if any\n    var start = 0;\n    var it = buffer.values();\n    var value = it.next();\n    while (!value.done && value.value === 0) {\n        start++;\n        value = it.next();\n    }\n    return buffer.slice(start);\n}\nexports.xorBuffer = xorBuffer;\n/**\n * Return true if the buffer is empty, i.e., all value are equals to 0.\n * @param  buffer - The buffer to inspect\n * @return True if the buffer only contains zero, False otherwise\n * @author Arnaud Grall\n */\nfunction isEmptyBuffer(buffer) {\n    var e_1, _a;\n    if (buffer === null || !buffer)\n        return true;\n    try {\n        for (var buffer_1 = __values(buffer), buffer_1_1 = buffer_1.next(); !buffer_1_1.done; buffer_1_1 = buffer_1.next()) {\n            var value = buffer_1_1.value;\n            if (value !== 0) {\n                return false;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (buffer_1_1 && !buffer_1_1.done && (_a = buffer_1.return)) _a.call(buffer_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return true;\n}\nexports.isEmptyBuffer = isEmptyBuffer;\n/**\n * Return the default seed used in the package\n * @return A seed as a floating point number\n * @author Arnaud Grall\n */\nfunction getDefaultSeed() {\n    return 0x1234567890;\n}\nexports.getDefaultSeed = getDefaultSeed;\n","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction OverflowHorizontalIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M6 14c-.55 0-1.02-.196-1.412-.588A1.926 1.926 0 0 1 4 12c0-.55.196-1.02.588-1.412A1.926 1.926 0 0 1 6 10c.55 0 1.02.196 1.412.588.392.391.588.862.588 1.412 0 .55-.196 1.02-.588 1.412A1.926 1.926 0 0 1 6 14Zm6 0c-.55 0-1.02-.196-1.412-.588A1.926 1.926 0 0 1 10 12c0-.55.196-1.02.588-1.412A1.926 1.926 0 0 1 12 10c.55 0 1.02.196 1.412.588.392.391.588.862.588 1.412 0 .55-.196 1.02-.588 1.412A1.926 1.926 0 0 1 12 14Zm6 0c-.55 0-1.02-.196-1.413-.588A1.926 1.926 0 0 1 16 12c0-.55.196-1.02.587-1.412A1.926 1.926 0 0 1 18 10c.55 0 1.02.196 1.413.588.391.391.587.862.587 1.412 0 .55-.196 1.02-.587 1.412A1.926 1.926 0 0 1 18 14Z\"\n    })\n  });\n}\n;\nOverflowHorizontalIcon.displayName = \"OverflowHorizontalIcon\";\nexport default forwardRef(OverflowHorizontalIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction PinSolidIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M5.769 2.857A.5.5 0 0 1 6.119 2h11.762a.5.5 0 0 1 .35.857L16.15 4.9a.5.5 0 0 0-.15.357v4.487a.5.5 0 0 0 .15.356l3.7 3.644a.5.5 0 0 1 .15.356v1.4a.5.5 0 0 1-.5.5H13v6a1 1 0 1 1-2 0v-6H4.5a.5.5 0 0 1-.5-.5v-1.4a.5.5 0 0 1 .15-.356l3.7-3.644A.5.5 0 0 0 8 9.744V5.257a.5.5 0 0 0-.15-.357L5.77 2.857Z\"\n    })\n  });\n}\n;\nPinSolidIcon.displayName = \"PinSolidIcon\";\nexport default forwardRef(PinSolidIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction PinIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M6.119 2a.5.5 0 0 0-.35.857L7.85 4.9a.5.5 0 0 1 .15.357v4.487a.5.5 0 0 1-.15.356l-3.7 3.644A.5.5 0 0 0 4 14.1v1.4a.5.5 0 0 0 .5.5H11v6a1 1 0 1 0 2 0v-6h6.5a.5.5 0 0 0 .5-.5v-1.4a.5.5 0 0 0-.15-.356l-3.7-3.644a.5.5 0 0 1-.15-.356V5.257a.5.5 0 0 1 .15-.357l2.081-2.043a.5.5 0 0 0-.35-.857H6.119ZM10 4h4v5.744a2.5 2.5 0 0 0 .746 1.781L17.26 14H6.74l2.514-2.475A2.5 2.5 0 0 0 10 9.744V4Z\",\n      clipRule: \"evenodd\"\n    })\n  });\n}\n;\nPinIcon.displayName = \"PinIcon\";\nexport default forwardRef(PinIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction RestartIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M18.93 8A8 8 0 1 1 4 12a1 1 0 1 0-2 0c0 5.523 4.477 10 10 10s10-4.477 10-10a9.966 9.966 0 0 0-.832-4A10.002 10.002 0 0 0 12 2a9.985 9.985 0 0 0-8 3.999V4a1 1 0 0 0-2 0v4a1 1 0 0 0 1 1h4a1 1 0 0 0 0-2H5.755A7.985 7.985 0 0 1 12 4a7.997 7.997 0 0 1 6.93 4Z\"\n    })\n  });\n}\n;\nRestartIcon.displayName = \"RestartIcon\";\nexport default forwardRef(RestartIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ThreadsSolidIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M4 3h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H6l-2.293 2.293c-.63.63-1.707.184-1.707-.707V5a2 2 0 0 1 2-2Zm3 7h10a.97.97 0 0 0 .712-.287A.967.967 0 0 0 18 9a.967.967 0 0 0-.288-.713A.968.968 0 0 0 17 8H7a.968.968 0 0 0-.713.287A.968.968 0 0 0 6 9c0 .283.096.52.287.713.192.191.43.287.713.287Zm0 4h6c.283 0 .52-.096.713-.287A.968.968 0 0 0 14 13a.968.968 0 0 0-.287-.713A.968.968 0 0 0 13 12H7a.967.967 0 0 0-.713.287A.968.968 0 0 0 6 13c0 .283.096.52.287.713.192.191.43.287.713.287Z\"\n    })\n  });\n}\n;\nThreadsSolidIcon.displayName = \"ThreadsSolidIcon\";\nexport default forwardRef(ThreadsSolidIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction UnpinIcon(props, ref) {\n  return /*#__PURE__*/_jsxs(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M5.457 2.083a1 1 0 0 0-1.414 1.414L8.04 7.494v2.25a.5.5 0 0 1-.15.356l-3.7 3.644a.5.5 0 0 0-.15.356v1.4a.5.5 0 0 0 .5.5h6.5v6a1 1 0 0 0 2 0v-6h3.506l4.497 4.497a1 1 0 0 0 1.414-1.414l-17-17ZM14.546 14 10.04 9.494v.25a2.5 2.5 0 0 1-.746 1.781L6.78 14h7.766Z\",\n      clipRule: \"evenodd\"\n    }), /*#__PURE__*/_jsx(\"path\", {\n      d: \"M14.04 4v3.85l2.015 2.015a.5.5 0 0 1-.015-.12V5.257a.5.5 0 0 1 .15-.357l2.081-2.043a.5.5 0 0 0-.35-.857h-9.73l2 2h3.849Z\"\n    })]\n  });\n}\n;\nUnpinIcon.displayName = \"UnpinIcon\";\nexport default forwardRef(UnpinIcon);"],"names":["_path","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgInactive","props","ref","xmlns","fill","viewBox","role","d","ForwardRef","forwardRef","DECRYPTION_FAILURE_STORAGE_KEY","DecryptionFailure","constructor","failedEventId","errorCode","ts","isFederated","wasVisibleToUser","userTrustsOwnIdentity","_defineProperty","DecryptionFailureTracker","fn","errorCodeMapFn","checkReportedEvents","Map","Set","ScalableBloomFilter","undefined","Error","instance","internalInstance","loadReportedEvents","storedFailures","localStorage","getItem","this","reportedEvents","JSON","parse","saveReportedEvents","setItem","stringify","saveAsJSON","eventDecrypted","nowTs","getWireContent","algorithm","MEGOLM_ENCRYPTION_ALGORITHM","errCode","decryptionFailureReason","removeDecryptionFailuresForEvent","eventId","getId","has","failure","failures","get","sender","getSender","senderDomain","replace","userDomain","visibleEvents","set","addVisibleEvent","add","delete","timeToDecryptMillis","GRACE_PERIOD_MS","MAXIMUM_LATE_DECRYPTION_PERIOD","reportFailure","handleKeysChanged","client","checkingVerificationStatus","retryVerificationStatus","getCrypto","getUserVerificationStatus","getUserId","isCrossSigningVerified","start","calculateClientProperties","registerHandlers","checkInterval","window","setInterval","checkFailures","Date","now","CHECK_INTERVAL_MS","_client$getDomain","baseProperties","getDomain","isMatrixDotOrg","crypto","getVersion","startsWith","cryptoSDK","decryptedHandler","keysChangedHandler","catch","console","log","loggedOutHandler","removeListener","MatrixEventEvent","Decrypted","CryptoEvent","KeysChanged","HttpApiEvent","SessionLoggedOut","stop","on","clearInterval","trackInterval","failuresNotReady","_failure$timeToDecryp","trackedErrorCode","properties","_DecryptionFailureTracker","rawError","event","_objectSpread","eventName","domain","name","context","PosthogAnalytics","trackEvent","DecryptionFailureCode","MEGOLM_UNKNOWN_INBOUND_SESSION_ID","MEGOLM_KEY_WITHHELD","MEGOLM_KEY_WITHHELD_FOR_UNVERIFIED_DEVICE","OLM_UNKNOWN_MESSAGE_INDEX","HISTORICAL_MESSAGE_NO_KEY_BACKUP","HISTORICAL_MESSAGE_BACKUP_UNCONFIGURED","HISTORICAL_MESSAGE_WORKING_BACKUP","HISTORICAL_MESSAGE_USER_NOT_JOINED","SENDER_IDENTITY_PREVIOUSLY_VERIFIED","UNSIGNED_SENDER_DEVICE","payload","_this$unavailableTime","action","setState","SetPresence","Online","unavailableTimer","restart","Timer","dispatcherRef","dis","register","onAction","finished","Unavailable","_this$unavailableTime2","unregister","abort","getState","_this$state","state","newState","oldState","MatrixClientPeg","safeGet","isGuest","setSyncPresence","logger","debug","err","error","SNOOZE_KEY","TOAST_KEY","showToast","deviceIds","ToastStore","sharedInstance","addOrReplaceToast","key","title","_t","icon","description","primaryLabel","onPrimaryClick","onAccept","DeviceListener","dismissUnverifiedSessions","dispatch","Action","ViewUserDeviceSettings","secondaryLabel","onSecondaryClick","onReject","snoozeBulkUnverifiedDeviceReminder","String","component","GenericToast","priority","getTitle","kind","Kind","SET_UP_ENCRYPTION","VERIFY_THIS_SESSION","getIcon","getSetupCaption","getDescription","dismissEncryptionSetup","ModuleRunner","extensions","cryptoSetup","setupEncryptionNeeded","storeProvider","getInstance","SetupEncryptionStore","async","Modal","createDialog","SetupEncryptionDialog","modal","Spinner","accessSecretStorage","close","destructive","hideToast","dismissToast","toastKey","deviceId","cli","device","getDevice","extendedDevice","isVerified","isDeviceVerified","deviceType","DeviceType","Unknown","display_name","detail","React","DeviceMetaData","users","initialFetch","myUserId","getSafeUserId","includes","ensureDeviceIdsAtStartPopulated","recheck","userId","ev","getType","prevState","EventType","RoomEncryption","OnLoggedIn","updateClientInformation","_this$client$getCrypt","keyBackupStatusChecked","activeKeyBackupVersion","getActiveSessionBackupVersion","ReportKeyBackupNotEnabled","_originalSettingName","_roomId","_level","_newLevel","newValue","prevValue","shouldRecordClientInformation","_PlatformPeg$get","recordClientInformation","SdkConfig","PlatformPeg","removeClientInformation","mxDeviceListener","matrixClient","running","DevicesUpdated","onDevicesUpdated","UserTrustStatusChanged","onUserTrustStatusChanged","onCrossSingingKeysChanged","ClientEvent","AccountData","onAccountData","Sync","onSync","RoomStateEvent","Events","onRoomStateEvents","SettingsStore","getValue","enableBulkUnverifiedSessionsReminder","UIFeature","BulkUnverifiedSessionsReminder","deviceClientInformationSettingWatcherRef","watchSetting","onRecordClientInformationSettingChange","unwatchSetting","dismissed","clear","dismissedThisDeviceToast","keyBackupInfo","keyBackupFetchedAt","ourDeviceIdsAtStart","displayingToastsForDeviceIds","Array","from","join","getDeviceIds","getUserDeviceIds","getKeyBackupInfo","getTime","shouldShowSetupEncryptionToast","isSecretStorageBeingAccessed","cryptoApi","asyncSomeParallel","getRooms","roomId","isEncryptionEnabledInRoom","doRecheck","ClientStoppedError","_await$crypto$getDevi","isVersionSupported","isInitialSyncComplete","crossSigningReady","isCrossSigningReady","secretStorageReady","isSecretStorageReady","allSystemsReady","_window$matrixChat","reportCryptoSessionStateToAnalytics","hideSetupEncryptionToast","checkKeyBackupStatus","getUserDeviceInfo","getCrossSigningKeyId","userHasCrossSigningKeys","showSetupEncryptionToast","SetupKind","waitForClientWellKnown","isSecureBackupRequired","matrixChat","view","Views","LOGGED_IN","oldUnverifiedDeviceIds","newUnverifiedDeviceIds","isCurrentDeviceTrusted","Boolean","getDeviceVerificationStatus","crossSigningVerified","devices","deviceTrust","_this$ourDeviceIdsAtS","isBulkUnverifiedSessionsReminderSnoozed","isBulkUnverifiedDeviceReminderSnoozed","snoozedTimestamp","parsedTimestamp","Number","parseInt","isInteger","size","showBulkUnverifiedSessionsToast","showUnverifiedSessionsToast","hideUnverifiedSessionsToast","crossSigningStatus","getCrossSigningStatus","backupInfo","is4SEnabled","secretStorage","getDefaultKeyId","deviceVerificationStatus","getDeviceId","verificationState","signedByOwner","recoveryState","allCrossSigningSecretsCached","privateKeysCachedLocally","masterKey","selfSigningKey","userSigningKey","backupPrivateKeyIsInCache","getSessionBackupPrivateKey","analyticsVerificationState","analyticsRecoveryState","setProperty","SessionRestoreErrorDialog","args","BugReportDialog","QuestionDialog","button","danger","onFinished","location","reload","render","brand","clearStorageButton","onClick","onClearStorageClick","className","dialogButtons","bug_report_endpoint_url","DialogButtons","primaryButton","onPrimaryButtonClick","sendBugReport","focus","hasCancel","onRefreshClick","BaseDialog","contentId","id","StorageEvictedDialog","preventDefault","logRequest","a","text","AccessibleButton","onSignOutClick","SendState","Entry","room","type","content","sendState","setSendState","useState","CanSend","onFocus","isActive","useRovingTabIndex","disabled","maySendMessage","Sending","Sent","NotificationBadge","notification","StaticNotificationState","RED_EXCLAMATION","classnames","mx_ForwardList_entry_active","ViewRoom","room_id","metricsTrigger","metricsViaKeyboard","placement","tabIndex","DecoratedRoomAvatar","tooltipProps","RoomContextDetails","Failed","sendEvent","ForwardDialog","permalinkCreator","profileInfo","setProfileInfo","useEffect","getProfileInfo","then","info","_event$getContent","getContent","_","_objectWithoutProperties","_excluded","M_BEACON","matches","RoomMessage","isLocationEvent","isSelfLocation","timestamp","M_TIMESTAMP","findIn","geoUri","locationEventGeoUri","ContentHelpers","LocationAssetType","Pin","transformEvent","mockEvent","MatrixEvent","unsigned","age","event_id","getRoomId","origin_server_ts","getTs","displayname","rawDisplayName","getAvatarUrl","avatarUrlForUser","avatarUrl","avatar_url","getMxcAvatarUrl","query","setQuery","lcQuery","toLowerCase","previewLayout","useSettingValue","msc3946DynamicRoomPredecessors","rooms","useMemo","sortRooms","getVisibleRooms","filter","getMyMembership","KnownMembership","Join","isSpaceRoom","QueryMatcher","keys","funcs","filterBoolean","getCanonicalAlias","getAltAliases","shouldMatchWordsOnly","match","truncateAt","setTruncateAt","overflowTile","overflowCount","totalCount","count","EntityTile","avatarJsx","BaseAvatar","url","OverflowHorizontalSvg","showPresence","fixedWidth","mx_IRCLayout","Layout","IRC","EventTile","mxEvent","layout","as","inhibitInteraction","RovingTabIndexProvider","handleUpDown","handleInputFields","onKeyDown","handled","_state$activeNode","getKeyBindingsManager","getAccessibilityAction","KeyBindingAction","Enter","activeNode","querySelector","click","stopPropagation","scrollIntoView","block","onKeyDownHandler","RovingTabIndexContext","Consumer","_context$state$active","SearchBox","placeholder","onSearch","setTimeout","node","nodes","_node$scrollIntoView","Type","SetFocus","autoFocus","AutoHideScrollbar","TruncatedList","createOverflowElement","getChildren","end","slice","map","getChildCount","MODERATED_BY_STATE_EVENT_TYPE","Nature","NonStandardValue","ReportEventDialog","super","isRoomEncrypted","newVal","ignoreUserToo","target","value","reason","nature","currentTarget","trim","moderation","Other","Admin","busy","dmRoomId","ensureDMExists","moderationBotUserId","UserFriendlyError","moderated_by_id","moderationRoomId","reporter","comment","reportEvent","setIgnoredUsers","getIgnoredUsers","message","moderatedByRoomId","moderatedByUserId","getRoom","stateEventType","stateEvent","currentState","getStateEvents","isArray","TypeError","_SdkConfig$getObject","progress","ignoreUserCheckbox","LabelledCheckbox","label","byline","onChange","onIgnoreUserTooChanged","adminMessageMD","getObject","adminMessage","html","Markdown","toHTML","externalLinks","dangerouslySetInnerHTML","__html","homeServerName","hsName","subtitle","Disagreement","Toxic","Illegal","Spam","homeserver","StyledRadioButton","checked","onNatureChosen","Field","element","rows","onReasonChange","onSubmit","onCancel","SpacePreferenceTab","SpacePreferencesAppearanceTab","space","showPeople","SettingsTab","SettingsSection","heading","SettingsSubsection","StyledCheckbox","setValue","SettingLevel","ROOM_ACCOUNT","SettingsSubsectionText","spaceName","SpacePreferencesDialog","tabs","Tab","Appearance","_td","RoomName","TabbedView","activeTabId","SpaceSettingsGeneralTab","_getTopic$text","_getTopic","_avatarUrlForRoom","setBusy","setError","newAvatar","setNewAvatar","canSetAvatar","maySendStateEvent","RoomAvatar","avatarChanged","setName","canSetName","nameChanged","currentTopic","getTopic","topic","setTopic","canSetTopic","RoomTopic","topicChanged","SpaceBasicSettings","avatarUrlForRoom","avatarDisabled","setAvatar","nameDisabled","topicDisabled","promises","push","content_uri","uploadContent","sendStateEvent","setRoomName","htmlTopic","htmlSerializeFromMdIfNeeded","forceHTML","setRoomTopic","results","Promise","allSettled","status","leaveSpace","EditableItem","verifyRemove","onRemove","index","onActuallyRemove","onDontRemove","EditableItemList","_this$props$onItemAdd","_this$props","onItemAdded","newItem","_this$props$onItemRem","_this$props2","onItemRemoved","_this$props$onNewItem","_this$props3","onNewItemChanged","renderNewItemField","autoComplete","noValidate","list","suggestionsListId","editableItems","items","item","canRemove","editableItemsSection","itemsLabel","noItemsLabel","canEdit","RoomPublishSetting","valueBefore","isRoomPublished","setRoomDirectoryVisibility","Visibility","Public","Private","showError","ErrorDialog","componentDidMount","getRoomDirectoryVisibility","result","visibility","_DirectoryCustomisati","isRoomPublishable","getJoinRule","JoinRule","Invite","enabled","DirectoryCustomisations","requireCanonicalAliasAccessToPublish","canSetCanonicalAlias","LabelledToggleSwitch","onRoomPublishChange","EditableAliasesList","createRef","aliasField","current","validate","allowEmpty","isValid","focused","onAliasAdded","RoomAliasField","alias","AliasSettings","newAlias","localDomain","createAlias","localAliases","concat","canonicalAlias","changeCanonicalAlias","deleteAlias","errcode","open","loadLocalAliases","detailsOpen","newAltAlias","altAliases","some","changeAltAliases","splice","updatingCanonicalAlias","localAliasesLoading","canonicalAliasEvent","alt_aliases","mxClient","response","getLocalAliases","aliases","oldAlias","eventContent","RoomCanonicalAlias","finally","getAliases","getLocalNonAltAliases","_mxClient$getRoom","found","canonicalValue","canonicalAliasSection","onCanonicalAliasChange","i","localAliasesList","onNewAliasChanged","canSetAliases","onLocalAliasAdded","onLocalAliasDeleted","SettingsFieldset","legend","hidePublishSetting","onNewAltAliasChanged","onAltAliasAdded","onAltAliasDeleted","onToggle","onLocalAliasesToggled","MatrixClientContext","SpaceSettingsVisibilityTab","closeSettingsFn","serverSupportsExploringSpaces","useAsyncMemo","supported","doesServerSupportUnstableFeature","joinRule","useRoomState","guestAccessEnabled","setGuestAccessEnabled","useLocalEcho","_space$currentState$g","RoomGuestAccess","guest_access","GuestAccess","CanJoin","Forbidden","historyVisibility","setHistoryVisibility","_space$currentState$g2","RoomHistoryVisibility","history_visibility","HistoryVisibility","Shared","showAdvancedSection","toggleAdvancedSection","useStateToggle","canSetGuestAccess","canSetHistoryVisibility","canSetCanonical","mayClientSendStateEvent","canonicalAliasEv","advancedSection","addressesSection","JoinRuleSettings","onError","WorldReadable","SpaceSettingsTab","SpaceSettingsDialog","useDispatcher","defaultDispatcher","AfterLeaveRoom","General","Roles","RolesRoomSettingsTab","AdvancedSettings","Advanced","AdvancedRoomSettingsTab","setActiveTabId","DialogOpener","RoomSettingsDialog","SdkContextClass","roomViewStore","initialTabId","initial_tab_id","OpenForwardDialog","OpenReportEventDialog","OpenSpacePreferences","OpenSpaceSettings","OpenInviteDialog","InviteDialog","_payload$onFinishedCa","onFinishedCallback","OpenAddToExistingSpaceDialog","AddExistingToSpaceDialog","onCreateRoomClick","showCreateNewRoom","PosthogTrackers","trackInteraction","onAddSubspaceClick","showAddExistingSubspace","added","fire","UpdateSpaceHierarchy","prepare","isRegistered","onDispatch","_DialogOpener","ACCESS_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","ACCESS_TOKEN_IV","REFRESH_TOKEN_IV","HAS_ACCESS_TOKEN_STORAGE_KEY","HAS_REFRESH_TOKEN_STORAGE_KEY","pickleKeyToAesKey","pickleKey","pickleKeyBuffer","Uint8Array","charCodeAt","hkdfKey","subtle","importKey","deriveBits","hash","salt","tryDecryptToken","token","tokenName","encrKey","decryptedToken","decryptAESSecretStorageItem","persistTokenInStorage","storageKey","hasTokenStorageKey","removeItem","encryptedToken","encryptAESSecretStorageItem","warn","StorageAccess","persistAccessTokenInStorage","persistRefreshTokenInStorage","TokenRefresher","OidcTokenRefresher","issuer","clientId","redirectUri","idTokenClaims","persistTokens","accessToken","refreshToken","_await$PlatformPeg$ge","getPickleKey","HOMESERVER_URL_KEY","ID_SERVER_URL_KEY","TriggerLogout","onLoggedOut","OverwriteLogin","typed","stopMatrixClient","doSetLoggedIn","credentials","sessionLockStolen","onSessionLockStolen","checkSessionLock","SessionLockStolenError","loadSession","opts","enableGuest","guestHsUrl","guestIsUrl","fragmentQueryParams","defaultDeviceDisplayName","guest_user_id","guest_access_token","homeserverUrl","identityServerUrl","guest","restoreSessionFromStorage","ignoreGuest","hsUrl","isUrl","createClient","baseUrl","registerGuest","body","initial_device_display_name","creds","user_id","device_id","access_token","registerAsGuest","AbortLoginAndRebuildStorage","success","clearStorage","handleLoadSessionFailure","getStoredSessionOwner","hasAccessToken","getStoredSessionVars","attemptDelegatedAuthLogin","queryParams","fragmentAfterLogin","code","idToken","completeOidcLogin","is_guest","idBaseUrl","whoami","getUserIdFromAccessToken","onSuccessfulDelegatedAuthLogin","persistOidcAuthenticatedSettings","onFailedDelegatedAuthLogin","getOidcErrorMessage","attemptOidcNativeLogin","_localStorage$getItem","loginToken","resolve","SSO_HOMESERVER_URL_KEY","identityServer","SSO_ID_SERVER_URL_KEY","sendLoginRequest","tryAgainCallback","idpId","SSO_IDP_ID_KEY","startSingleSignOn","SSOAction","LOGIN","messageForLoginError","attemptTokenLogin","persistCredentials","sessionStorage","tryAgain","shouldTryAgain","getStoredToken","_localStorage$getItem2","_localStorage$getItem3","_localStorage$getItem4","_localStorage$getItem5","_localStorage$getItem6","hasRefreshToken","abortLogin","ok","showStorageEvictedDialog","_PlatformPeg$get2","decryptedAccessToken","decryptedRefreshToken","freshLogin","setLoggedIn","_PlatformPeg$get3","createPickleKey","clearStorageEnabled","isFreshLogin","softLogout","isSoftLogout","StorageManager","dataInLocalStorage","cryptoInited","dataInCryptoStore","tokenRefresher","tokenIssuer","getStoredOidcTokenIssuer","getStoredOidcClientId","getStoredOidcIdTokenClaims","getOidcCallbackUrl","href","oidcClientReady","createOidcTokenRefresher","replaceUsingCreds","doRefreshAccessToken","setSentryUser","isEnabled","startListeningToSettingsChanges","clientPegOpts","rustCryptoStoreKey","decodeBase64","rustCryptoStorePassword","startMatrixClient","_clientPegOpts$rustCr","runMigrations","_ModuleRunner$instanc","_isLoggingOut","logout","oidcClientStore","_PlatformPeg$get4","_client$getDeviceId","destroyPickleKey","isUserAuthenticatedWithOidc","_client$getAccessToke","_client$getRefreshTok","getAccessToken","getRefreshToken","revokeTokens","doLogout","isLoggingOut","startSyncing","typingStore","reset","Notifier","UserActivity","DMRoomMap","makeShared","IntegrationManagers","startWatching","ActiveWidgetStore","LegacyCallHandler","checkBrowserSupport","Mjolnir","EventIndexPeg","init","Presence","Jitsi","_LifecycleCustomisati","_PlatformPeg$get5","OnLoggedOut","deleteEverything","LifecycleCustomisations","onLoggedOutAndStorageCleared","logout_redirect_url","_window$sessionStorag","language","getValueAt","DEVICE","pendingInvites","ThreepidInviteStore","getWireInvites","registrationTime","forEach","_ref","invite","storeInvite","createMatrixClient","deleteEventIndex","clearStores","unsetClient","_DMRoomMap$shared","stopWatching","shared","stopClient","removeAllListeners","unset","store","destroy","mxLoginWithAccessToken","tempClient","Login","fallbackHsUrl","delegatedAuthentication","getHomeserverUrl","getIdentityServerUrl","setHomeserverUrl","setIdentityServerUrl","setDelegatedAuthentication","createTemporaryClient","getFlows","isRegistration","tryInitOidcNativeFlow","oidc_static_clients","flows","loginFlows","oidcCompatibilityFlow","find","f","DELEGATED_OIDC_COMPATIBILITY","loginViaPassword","username","phoneCountry","phoneNumber","password","isEmail","indexOf","identifier","country","phone","number","medium","address","user","loginParams","tryFallbackHs","originalError","fallbackError","originalLoginError","httpStatus","delegatedAuthConfig","staticOidcClientIds","supportedPrompts","metadata","isUserRegistrationSupported","staticOidcClients","staticClientId","getStaticOidcClientId","_staticOidcClients$is","issuerWithTrailingSlash","endsWith","client_id","registerOidcClient","getOidcClientMetadata","getOidcClientId","loginType","data","login","wellknown","well_known","_wellknown$mHomeserv","_wellknown$mIdentity","examineLoginResponse","SetupEncryptionBody","phase","Phase","Finished","verificationRequest","lostKeys","usePassPhrase","_cli$getUser","requestPromise","requestOwnUserVerification","VerificationRequestDialog","verificationRequestPromise","member","getUser","cancel","skipConfirm","returnAfterSkip","resetConfirm","returnAfterReset","done","onStoreUpdate","componentWillUnmount","off","otherUserId","EncryptionPanel","onClose","onEncryptionPanelClose","Intro","sub","onResetConfirmClick","recoveryKeyPrompt","useRecoveryKeyButton","verifyButton","keyInfo","passphrase","iterations","onUsePassphraseClick","hasDevicesToVerifyAgainst","onVerifyClick","translationHelpLink","TchapUrls","helpVerifyDevicesPage","tchapHelpButton","onResetClick","Done","onDoneClick","ConfirmSkip","onSkipConfirmClick","onSkipBackClick","ConfirmReset","onResetBackClick","Busy","Loading","UNSIGNED_KEY","getLateEventInfo","getUnsigned","_this$props$verificat","request","iconFromPhase","require","headerImage","children","useTypedEventEmitter","RoomEvent","Name","DisambiguatedProfile","fallbackName","colored","emphasizeDisplayName","withTooltip","mxid","colorClass","mxidElement","getUserNameColorClass","_UserIdentifier$getDi","_UserIdentifier$getDi2","UserIdentifier","getDisplayUserIdentifier","withDisplayName","disambiguate","displayName","matrixId","displayNameClasses","classNames","mx_DisambiguatedProfile_displayName","dir","SenderProfile","_mxEvent$getSender","useRoomMemberProfile","msgtype","MsgType","Emote","PowerStatus","PowerLabel","Moderator","PRESENCE_CLASS","hover","getPresenceLabel","activeAgo","presenceLastActiveAgo","presenceLastTs","PresenceLabel","currentlyActive","presenceCurrentlyActive","presenceState","mainClassNames","mx_EntityTile","lastActiveAgo","nameJSX","nameAndPresence","powerLabel","powerStatus","powerText","e2eIcon","e2eStatus","E2EIcon","isUser","bordered","av","showInviteButton","EventPreview","preview","useEventPreview","EventPreviewTile","_ref2","prefix","_excluded2","classes","bold","useContext","setContent","Replaced","awaitDecryption","shouldAttemptDecryption","isBeingDecrypted","isRedacted","isDecryptionFailure","decryptEventIfNeeded","MessagePreviewStore","generatePreviewForEvent","getPreviewPrefix","msgType","M_POLL_START","Audio","Image","Video","File","ReplyChain","events","initialize","loadedEv","getNextEvent","FocusSendMessageComposer","loading","parentEv","unmounted","trySetExpandableQuotes","componentDidUpdate","_this$props$onHeightC","onHeightChanged","isQuoteExpanded","blockquoteRef","el","isCodeEllipsisShown","offsetHeight","setQuoteExpanded","getEvent","getParentEventId","inReplyToEventId","_this$room$findEventB","findEventById","getEventTimeline","getUnfilteredTimelineSet","getReplyChainColorClass","header","shouldDisplayReply","onQuoteClick","pill","Pill","PillType","UserMention","makeUserPermalink","shouldShowPillAvatar","forExport","w","h","evTiles","classname","ReplyTile","toggleExpandedQuote","getRelationsForEvent","RoomContext","ReplyIcon","width","height","SvgEdit","stroke","strokeLinecap","strokeLinejoin","strokeWidth","SvgEmoji","fillRule","clipRule","SvgExpandMessage","SvgCollapseMessage","DownloadState","ContentScanningDownloadActionButton","FileDownloader","downloadState","Scanning","blob","doDownload","media","mediaEventHelperGet","all","scanSource","scanThumbnail","ok1","ok2","isSafe","Safe","Untrusted","sourceBlob","Pristine","downloader","download","fileName","tooltip","hasSpinner","DownloadIcon","renderSpinner","renderBlockedIcon","mx_MessageActionBar_iconButton","mx_MessageActionBar_downloadButton","mx_MessageActionBar_downloadSpinnerButton","RovingAccessibleButton","onDownloadClick","BlockedIcon","OptionsButton","getTile","getReplyChain","onFocusChange","menuDisplayed","openMenu","closeMenu","useContextMenu","onOptionsClick","useCallback","contextMenu","tile","replyChain","buttonRect","getBoundingClientRect","MessageContextMenu","aboveLeftOf","eventTileOps","getEventTileOps","collapseReplyChain","canCollapse","collapse","ContextMenuTooltipButton","onContextMenu","isExpanded","OverflowHorizontalIcon","ReactButton","reactions","ContextMenu","managed","ReactionPicker","EmojiIcon","ReplyInThreadButton","_mxEvent$getRelation","CardContext","relationType","getRelation","rel_type","hasARelation","RelationType","Thread","thread","getThread","rootEvent","isThreadRoot","ShowThread","initialEvent","scroll_into_view","highlighted","isCard","ThreadsIcon","MessageActionBar","forceUpdate","RoomPinnedEvents","_this$props$onFocusCh","timelineRenderingType","editEvent","KeyVerificationRequest","runActionOnFailedEv","tarEv","Resend","resend","removeFromQueue","testEv","canCancel","isPinned","PinningUtils","pinOrUnpinEvent","trackPinUnpinMessage","_this$context$room","EventStatus","SENT","Status","onSent","once","onDecrypted","BeforeRedaction","onBeforeRedaction","getLiveTimeline","EventTimeline","FORWARDS","onRoomEvent","_this$context$room2","showReplyInThreadAction","inNotThreadTimeline","TimelineRenderingType","isAllowedMessageType","forbiddenThreadHeadMsgType","M_BEACON_INFO","TchapUIFeature","isFeatureActiveForHomeserver","checkFn","replacingEvent","tryOrder","localRedactionEvent","_mxEvent$replacingEve","_mxEvent$localRedacti","toolbarOpts","canEditContent","onEditClick","EditIcon","canPin","canUnpin","onPinClick","UnpinIcon","PinIcon","cancelSendingButton","onCancelClick","DeleteIcon","threadTooltipButton","editStatus","redactStatus","allowCancel","isFailed","NOT_SENT","onResendClick","RestartIcon","isContentActionable","canSendMessages","onReplyClick","canReact","search","MediaEventHelper","isEligible","DownloadActionButton","_this$props$getTile","_this$props$getTile$g","getMediaHelper","Room","unshift","expandClassName","mx_MessageActionBar_expandCollapseMessageButton","caption","ALTERNATE_KEY_NAME","Key","SHIFT","toggleThreadExpanded","CollapseMessageIcon","ExpandMessageIcon","Toolbar","ReactionsRowButtonTooltip","reactionEvents","senders","customReactionName","reactionEvent","_member$name","getMember","customReactionImagesEnabled","REACTION_SHORTCODE_KEY","shortName","unicodeToShortcode","formattedSenders","formatList","Tooltip","ReactionsRowButton","myReactionEvent","redactEvent","Reaction","Annotation","mx_ReactionsRowButton","mx_ReactionsRowButton_selected","reactors","reactionContent","imageSrc","mediaFromMxc","srcHttp","alt","src","UnstableValue","mx_ReactionsRow_addReactionButton_active","ReactionsRow","myReactions","getMyReactions","showAll","RelationsEvent","Add","onReactionsChange","Remove","Redaction","prevProps","_reactions$getAnnotat","getAnnotationsBySender","values","_reactions$getSortedA","_items","showAllButton","addReactionButton","getSortedAnnotationsByKey","deduplicatedEvents","uniqBy","canSelfRedact","MAX_ITEMS_WHEN_LIMITED","onShowAllClick","TileErrorBoundary","ViewSource","getDerivedStateFromError","mx_EventTile","mx_EventTile_info","mx_EventTile_content","mx_EventTile_tileError","submitLogsButton","viewSourceButton","onBugReport","onViewSource","ThreadMessagePreview","showDisplayname","_useTypedEventEmitter","_lastReply$sender$nam","_lastReply$sender","lastReply","useTypedEventEmitterState","ThreadEvent","Update","replyToEvent","MemberAvatar","fallbackUserId","ExternalLink","lockedMessagesPage","roomContext","useScopedRoomContext","cardContext","level","useUnreadNotifications","countSection","narrow","IndicatorIcon","indicator","notificationLevelToIndicator","ThreadIconSolid","NodeAnimator","updateChildren","applyStyles","styles","entries","property","style","newChildren","oldChildren","toArray","c","isReactElement","old","oldNode","left","newProps","restingStyle","startStyles","startStyle","collectNode","k","domNode","innerRef","ReadReceiptMarker","suppressDisplay","suppressAnimation","rrInfo","readReceiptPosition","checkUnmounting","buildReadReceiptInfo","animateMarker","differentOffset","offset","visibilityChanged","hidden","avatar","horizontalContainer","offsetParent","top","right","elementRect","_newInfo$top","oldInfo","newPosition","oldPosition","READ_AVATAR_SIZE","_this$props$member","toPx","hideTitle","ReadReceiptGroup","readReceipts","readReceiptMap","isTwelveHour","maxAvatars","MAX_READ_AVATARS_PLUS_N","tooltipText","members","readReceiptTooltip","it","_it$roomMember$name","_it$roomMember","roomMember","avatars","receipt","position","max","determineAvatarPosition","showTwelveHour","reverse","remText","remainder","menuClassName","SectionHeader","ReadReceiptPerson","onAfterClick","Math","min","_roomMember$rawDispla","_roomMember$name","MenuItem","ViewUser","resizeMethod","formatDate","UnreadNotificationBadge","threadId","forceDot","symbol","StatelessNotificationBadge","SvgViewInRoom","EventTileThreadToolbar","viewInRoom","copyLinkToThread","ViewInRoomIcon","LinkIcon","PinnedMessageBadge","isEligibleForSpecialReceipt","isMessageEvent","RoomMessageEncrypted","UnwrappedEventTile","updateThread","New","onNewThread","evt","matrixToUrl","forEvent","copyPlaintext","shouldShowSentReceipt","shouldShowSendingReceipt","isListeningForReceipts","Receipt","onRoomReceipt","verifyEvent","_trustStatus","ComposerInsert","Search","actionBarFocused","_this$props$getRelati","showReactions","eventType","getReactions","showContextMenu","_this$props$permalink","expanded","shieldColour","EventShieldColour","NONE","shieldReason","suppressReadReceiptAnimation","lastSuccessful","eventSendStatus","receipts","onUserVerificationChanged","onReplaced","RelationsCreated","onReactionsCreated","shouldComponentUpdate","nextProps","nextState","objectHasDiff","propsEqual","_room$findThreadForEv","findThreadForEvent","renderThreadPanelSummary","renderThreadInfo","ThreadSummary","threadRootId","highlightLink","doVerifyEvent","_this$props$mxEvent$r","_await$MatrixClientPe","_MatrixClientPeg$safe","isEncrypted","encryptionInfo","getEncryptionInfoForEvent","objA","objB","keysA","keysB","rA","rB","j","shouldHighlight","Notification","ThreadsList","actions","getPushActionsForEvent","previousActions","tweaks","highlight","renderE2EPadlock","_this$props$mxEvent$r2","isLocalRoom","E2ePadlockDecryptionFailure","shieldReasonMessage","EventShieldReason","UNKNOWN","UNVERIFIED_IDENTITY","UNSIGNED_DEVICE","UNKNOWN_DEVICE","AUTHENTICITY_NOT_GUARANTEED","MISMATCHED_SENDER_KEY","SENT_IN_CLEAR","VERIFICATION_VIOLATION","GREY","E2ePadlock","E2ePadlockIcon","Normal","Warning","ENCRYPTING","isState","E2ePadlockUnencrypted","permalink","clickTarget","anchorElement","HTMLAnchorElement","closest","HTMLImageElement","allowOverridingNativeContextMenus","getSelectedText","editState","clientX","clientY","bottom","link","shouldHideEvent","_this$props$callEvent","callEventGrouper","hangupReason","CallErrorCode","renderContextMenu","aboveRightOf","onCloseMenu","rightClick","_this$state$thread","_getLateEventInfo","_this$props$mxEvent","hasRenderer","isBubbleMessage","isInfoMessage","isLeftAlignedBubbleMessage","noBubbleEvent","isSeeingThroughMessageHiddenForModeration","getEventDisplayInfo","showHiddenEvents","isProbablyMedia","lineClasses","mx_EventTile_mediaLine","mx_EventTile_image","mx_EventTile_sticker","Sticker","mx_EventTile_emote","isSending","isEncryptionFailure","isContinuation","continuation","Bubble","isRenderingNotification","isEditing","mx_EventTile_bubbleContainer","mx_EventTile_leftAlignedBubble","mx_EventTile_isEditing","mx_EventTile_12hr","mx_EventTile_sending","mx_EventTile_highlight","mx_EventTile_selected","isSelectedEvent","mx_EventTile_continuation","CallInvite","ElementCall","CALL_EVENT_TYPE","mx_EventTile_last","last","mx_EventTile_lastInSection","lastInSection","mx_EventTile_contextual","contextual","mx_EventTile_actionBarFocused","mx_EventTile_bad","mx_EventTile_noSender","hideSender","mx_EventTile_clamp","mx_EventTile_noBubble","ariaLive","scrollToken","avatarSize","needsSenderProfile","RoomCreate","third_party_invite","viewUserOnClick","forceHistorical","RoomMember","Pinned","onSenderProfileClick","actionBar","onActionBarFocusChange","showTimestamp","hideTimestamp","alwaysShowTimestamps","messageTimestamp","MessageTimestamp","showRelative","receivedTs","received_ts","pinnedMessageBadge","reactionsRow","hasFooter","linkedTimestamp","onPermalinkClicked","formatTime","onTimestampContextMenu","useIRCLayout","groupTimestamp","ircTimestamp","bubbleTimestamp","groupPadlock","ircPadlock","msgOption","SentReceipt","messageState","getAssociatedStatus","showReadReceipts","_this$props$readRecei","_this$props$readRecei2","haveRendererForEvent","isOwnEvent","onMouseEnter","onMouseLeave","renderTile","highlights","Group","parentElement","strong","RedactedBody","DecryptionFailureBody","_props$layout","isTriggerInteractive","isSent","receiptClasses","mx_EventTile_receiptSent","mx_EventTile_receiptSending","nonCssBadge","MImageReplyBody","MImageBody","wrapImage","contentUrl","thumbnail","messageContent","thumbUrl","ContentScanningImageReplyBody","isScanning","hasError","ContentScanningStatus","renderOriginal","OriginalImageReplyBody","mediaEventHelper","presentableTextForFile","tagName","shiftKey","onEventRequiresUpdate","evType","mx_ReplyTile_inline","mx_ReplyTile_info","mx_ReplyTile_audio","mx_ReplyTile_video","msgtypeOverrides","isVoiceMessage","MVoiceMessageBody","MFileBody","evOverrides","renderReplyTile","showUrlPreview","overrideBodyTypes","overrideEventTypes","maxImageHeight","other","contextDetails","dmPartner","getUserIdForRoomId","isGroupDm","getMembers","details","parent","secondParent","otherParents","SpaceStore","getKnownParents","_room$client$getRoom","_room$client$getRoom2","space1Name","space2Name","ariaLabel","_room$client$getRoom$","_room$client$getRoom3","roomContextDetails","formatLastActivity","date","formatRelativeTime","DeviceMetaDatum","inactive","isDeviceInactive","last_seen_ts","InactiveIcon","inactiveAgeDays","INACTIVE_DEVICE_AGE_DAYS","getInactiveMetadata","lastActivity","verificationStatus","last_seen_ip","Fragment","INACTIVE_DEVICE_AGE_MS","filters","DeviceSecurityVariation","Verified","Unverified","Inactive","filterDevicesBySecurityRecommendation","securityVariations","activeFilters","variation","every","_room$currentState","useTopic","EventIndex","EventEmitter","indexManager","getEventIndexingManager","isEventIndexEmpty","addInitialCheckpoints","startCrawler","commitLiveEvents","toStartOfTimeline","removed","isRedaction","liveEvent","addLiveEventToIndex","isRoomIndexed","addRoomCheckpoint","associatedId","getAssociatedId","deleteEvent","crawlerCheckpoints","loadCheckpoints","registerListeners","Timeline","onRoomTimeline","TimelineReset","onTimelineReset","onRoomStateEvent","removeListeners","encryptedRooms","asyncFilter","_client$getCrypto","getPaginationToken","Direction","Backward","backCheckpoint","direction","fullCrawl","forwardCheckpoint","Forward","addCrawlerCheckpoint","isValidEvent","validEventType","validMsgType","hasContentValue","eventToJson","getEffectiveEvent","curve25519Key","getSenderKey","ed25519Key","getClaimedEd25519Key","forwardingCurve25519KeyChain","getForwardingCurve25519KeyChain","_ev$sender","_ev$sender2","profile","addEventToIndex","emitNewCheckpoint","emit","currentRoom","addEventsFromLiveTimeline","timeline","getEvents","_PlatformPeg$get6","checkpoint","crawlerFunc","_PlatformPeg$get7","cancelled","crawler","idle","sleepTime","currentCheckpoint","sleep","shift","eventMapper","getEventMapper","preventReEmit","res","createMessagesRequest","HTTPError","removeCrawlerCheckpoint","chunk","matrixEvents","stateEvents","profiles","membership","decryptionPromises","filteredEvents","redactionEvents","newCheckpoint","eventsAlreadyAdded","addHistoricEvents","stopCrawler","_PlatformPeg$get8","closeEventIndex","searchArgs","_PlatformPeg$get9","searchEventIndex","loadFileEvents","limit","fromEvent","BACKWARDS","_PlatformPeg$get10","loadArgs","matrixEvent","memberEvent","state_key","populateFileTimeline","timelineSet","eventIdToTimeline","addEventToTimeline","fromCache","addToState","ret","paginationToken","setPaginationToken","paginateTimelineWindow","timelineWindow","tl","getTimelineIndex","pendingPaginate","extend","paginationPromise","timelineIndex","_timeline$getPaginati","getTimelineSet","paginationMethod","getStats","_PlatformPeg$get11","_PlatformPeg$get12","crawlingRooms","totalRooms","_supportIsInstalled","supportsEventIndexing","supportIsInstalled","initEventIndex","userVersion","getUserVersion","eventIndexIsEmpty","setUserVersion","platformHasSupport","mxEventIndexPeg","setActiveVerificationRequest","_this$verificationReq","_this$verificationReq2","VerificationPhase","Cancelled","VerificationRequestEvent","Change","onVerificationRequestChange","_MatrixClientPeg$safe2","publicKeysTrusted","mxSetupEncryptionStore","started","VerificationRequestReceived","onVerificationRequest","requestsInProgress","getVerificationRequestsToDeviceInProgress","fetchKeyInfo","_this$verificationReq3","_await$crypto$getUser","_await$crypto$getUser2","isStored","keyId","ownUserId","userDevices","asyncSome","dehydrated","getIdentityKey","_await$cli$getCrypto$","_cli$getCrypto","_cli$getCrypto4","reject","_cli$getCrypto2","_cli$getCrypto3","initialiseDehydration","loadSessionBackupPrivateKeyFromSecretStorage","restoreKeyBackup","AccessCancelledError","skip","forceReset","resetCrossSigning","accountPassword","accountPasswordStore","getPassword","accept","STORAGE_PREFIX","_instance","wireInvite","generateIdOf","translateInvite","keyName","getInvites","pickBestInvite","resolveInvite","persisted","base32","TextEncoder","encode","toEmail","email","signUrl","signurl","roomName","room_name","roomAvatarUrl","room_avatar_url","inviterName","inviter_name","translateToWireFormat","calcIsInfoMessage","M_POLL_END","hideEvent","getMessageModerationState","MessageModerationState","VISIBLE_FOR_ALL","HIDDEN_TO_CURRENT_USER","SEE_THROUGH_FOR_CURRENT_USER","factory","pickFactory","JitsiEventFactory","JSONEventFactory","clientInformationEventPrefix","getClientInformationEventType","sdkConfig","platform","version","getAppVersion","formatUrl","electron","URL","host","pathname","setAccountData","pruneClientInformation","validDeviceIds","accountData","split","deleteAccountData","clientInformation","getDeviceClientInformation","sanitizeContentString","getAccountData","createNewKey","isDehydrationSupported","deviceDehydrationEnabled","startDehydration","trustLevel","startOidcLogin","nonce","randomString","prompt","authorizationUrl","generateOidcAuthorizationUrl","urlState","getOidcClientState","OidcClientError","InvalidQueryParameters","getCodeAndStateFromQueryParams","tokenResponse","oidcClientSettings","completeAuthorizationCodeGrant","refresh_token","id_token","OidcError","MissingOrInvalidStoredState","CodeExchangeFailed","InvalidBearerTokenResponse","InvalidIdToken","chars","lookup","arraybuffer","bytes","len","base64","substring","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","p","ArrayBuffer","exports","UINT32","UINT64","pow","l","_low","_high","fromNumber","fromString","fromBits","s","radix","prototype","toNumber","toString","a00","a16","subtract","clone","negate","multiply","c16","c00","b16","b00","div","gt","eq","_other","lt","shiftLeft","shiftRight","v","equals","greaterThan","lessThan","or","and","not","xor","shiftr","shiftl","allowOverflow","rotateLeft","rotl","rotateRight","rotr","radixPowerCache","radixCache","a32","a48","_a00","_a16","_a32","_a48","radixUint","self","b32","c32","c48","high","low","Reflect","root","g","Function","exporter","makeExporter","previous","defineProperty","configurable","writable","hasOwn","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","create","supportsProto","__proto__","downLevel","HashMap","MakeDictionary","functionPrototype","getPrototypeOf","usePolyfill","process","_Map","CreateMapPolyfill","_Set","CreateSetPolyfill","Metadata","WeakMap","CreateWeakMapPolyfill","decorate","decorators","propertyKey","attributes","IsUndefined","IsArray","IsConstructor","DecorateConstructor","IsObject","IsNull","DecorateProperty","ToPropertyKey","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","metadataMap","GetOrCreateMetadataMap","targetMetadata","decorated","descriptor","O","P","Create","MetadataKey","OrdinaryGetPrototypeOf","ToBoolean","MetadataValue","ownKeys","parentKeys","_i","ownKeys_1","_a","parentKeys_1","GetIterator","next","IteratorStep","nextValue","IteratorValue","IteratorClose","x","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","OrdinaryToPrimitive","toString_1","IsCallable","valueOf","toString_2","argument","ToString","V","func","obj","method","iterResult","proto","prototypeProto","cacheSentinel","arraySentinel","MapIterator","selector","_index","_keys","_values","_selector","throw","return","_cacheKey","_cacheIndex","enumerable","_find","getKey","getEntry","insert","_map","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","random","GenRandomBytes","getRandomValues","msCrypto","byte","__","alea","xor128","xorwow","xorshift7","xor4096","tychei","sr","module","global","Alea","seed","me","mash","Mash","s0","s1","s2","copy","impl","xg","prng","int32","double","quick","XorGen","strseed","b","floor","y","z","X","pool","math","nodecrypto","startdenom","significance","overflow","mask","seedrandom","options","callback","shortseed","mixkey","flatten","entropy","tostring","out","randomBytes","browser","navigator","plugins","screen","autoseed","arc4","ARC4","S","pass","is_math_call","keylen","depth","prop","typ","smear","stringseed","fromCharCode","ex","h32","h64","xxh_update","PRIME32_2","PRIME32_1","PRIME32_3","PRIME32_4","PRIME32_5","XXH","update","digest","v1","v2","v3","v4","total_len","memsize","memory","isArrayBuffer","isString","str","utf8","charcode","toUTF8Array","bEnd","Buffer","subarray","p32","u","PRIME64_1","PRIME64_2","PRIME64_3","PRIME64_4","PRIME64_5","XXH64","p64","__importDefault","mod","__esModule","seedrandom_1","hashing_1","utils_1","BaseFilter","_seed","getDefaultSeed","_rng","default","_hashing","nextInt32","fromJSON","json","base64_arraybuffer_1","BitSet","diff","array","ceil","wordIndex","bits","highBit","bitCount","countBits","export","import","bitsPerWord","extendStatics","__extends","setPrototypeOf","__decorate","desc","getOwnPropertyDescriptor","__metadata","__param","paramIndex","base_filter_1","exportable_1","bit_set_1","PartitionedBloomFilter","_super","nbHashes","loadFactor","capacity","_this","_size","_nbHashes","_loadFactor","_m","_filter","allocateArray","_capacity","totalBits","computeNumberOfItems","PartitionedBloomFilter_1","errorRate","rate","computeOptimalNumberOfCells","computeOptimalNumberOfhashes","indexes","getIndexes","_currentload","outerIndex","bucket","reduce","sets","bs_1","val","AutoExportable","Parameter","partitioned_bloom_filter_1","_initial_size","_error_rate","_ratio","_filters","ScalableBloomFilter_1","currentFilter","newSize","_s","LN2","newErrorRate","__read","o","m","ar","__spreadArray","to","pack","cloneField","Exportable","cloneObject","fields","field","specs","METADATA_CLASSNAME","METADATA_FIELDS","METADATA_PARAMETERS","importer","fieldName","parameterIndex","parameters","otherFields","SyntaxError","constructorArgs","copyFields","arg","xxhashjs_1","Hashing","doubleHashing","hashA","hashB","abs","getDistinctIndexes","hashes","hashTwice","ind","first","second","hashCount","arr","serialize","hashTwiceAsString","numberToHex","hashTwiceIntAndString","one","hashIntAndString","two","int","string","hashAsInt","elem","__values","isEmptyBuffer","xorBuffer","randomInt","BufferError","defaultValue","getDefault","repeat","rn","allocUnsafe","e_1","buffer_1","buffer_1_1","e_1_1","PinSolidIcon","ThreadsSolidIcon"],"sourceRoot":""}