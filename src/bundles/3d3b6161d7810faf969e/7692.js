"use strict";(self.webpackChunkelement_web=self.webpackChunkelement_web||[]).push([[7692],{"./src/async-components/views/dialogs/security/ExportE2eKeysDialog.tsx":(e,t,s)=>{s.r(t),s.d(t,{default:()=>u});var r=s("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),n=s("./node_modules/file-saver/dist/FileSaver.min.js"),a=s.n(n),o=s("./node_modules/react/index.js"),i=s("./src/components/views/dialogs/BaseDialog.tsx"),l=s("./src/languageHandler.tsx"),c=s("./src/components/views/elements/Field.tsx"),p=s("./src/Modal.tsx"),h=s("./src/utils/MegolmExportEncryption.ts"),d=s("./node_modules/matrix-js-sdk/src/logger.ts"),m=function(e){return e.Edit="edit",e.Exporting="exporting",e}(m||{});class u extends o.Component{constructor(e){super(e),(0,r.A)(this,"unmounted",!1),(0,r.A)(this,"onPassphraseChange",((e,t)=>{this.setState({[t]:e.target.value})})),(0,r.A)(this,"onPassphraseFormSubmit",(e=>{e.preventDefault();const t=this.state.passphrase1;return t.length<8?(this.setState({errStr:(0,l._t)("Passphrase must be at least 8 character long")}),!1):t!==this.state.passphrase2?(this.setState({errStr:(0,l._t)("settings|key_export_import|phrase_must_match")}),!1):t?(this.startExport(t),!1):(this.setState({errStr:(0,l._t)("settings|key_export_import|phrase_cannot_be_empty")}),!1)})),(0,r.A)(this,"onCancelClick",(e=>(e.preventDefault(),this.props.onFinished(!1),!1))),this.state={phase:m.Edit,errStr:null,passphrase1:"",passphrase2:""},this.startExport=this.startExport.bind(this),this.onPassphraseFormSubmit=this.onPassphraseFormSubmit.bind(this),this.onCancelClick=this.onCancelClick.bind(this)}componentWillUnmount(){this.unmounted=!0}startExport(e){Promise.resolve().then((()=>this.props.matrixClient.exportRoomKeys())).then((t=>h.L(JSON.stringify(t),e))).then((e=>{const t=new Blob([e],{type:"text/plain;charset=us-ascii"});a().saveAs(t,"tchap-keys.txt")})).then((()=>{p.Ay.createDialogAsync(s.e(948).then(s.bind(s,"./src/tchap/async-components/views/dialogs/security/TchapExportE2eKeysSuccessDialog.tsx")),{allowLogout:this.props.allowLogout,onFinished:e=>{this.props.onFinished(e)}})})).catch((e=>{if(d.v.error("Error exporting e2e keys:",e),this.unmounted)return;const t=e.friendlyText||(0,l._t)("error|unknown");this.setState({errStr:t,phase:m.Edit})})),this.setState({errStr:null,phase:m.Exporting})}render(){const e=this.state.phase===m.Exporting;return o.createElement(i.A,{className:"tc_exportE2eKeysDialog",onFinished:this.props.onFinished,title:(0,l._t)("Save your Tchap Keys (encryption keys)")},o.createElement("form",{onSubmit:this.onPassphraseFormSubmit},o.createElement("div",{className:"mx_Dialog_content"},o.createElement("p",{className:"tc_modalParagraph"},(0,l._t)("If you do not have another connected device, <b>we advise you to save your keys in a file on your device</b>.",{},{b:e=>o.createElement("b",null,e)})),o.createElement("p",{className:"tc_modalParagraph"},(0,l._t)("This file will be protected by a password, which will be asked next time you log in, when you will import the keys to unlock your messages.")),o.createElement("p",{className:"tc_modalParagraph tc_withMarginBottom tc_withMarginTop"},(0,l._t)("Create your Tchap Key password (minimum 8 characters)")),o.createElement("div",{className:"error"},this.state.errStr),o.createElement("div",{className:"mx_E2eKeysDialog_inputTable"},o.createElement("div",{className:"mx_E2eKeysDialog_inputRow"},o.createElement("div",{className:"mx_E2eKeysDialog_inputCell"},o.createElement(c.A,{autoFocus:!0,disabled:e,label:(0,l._t)("Your Tchap Key password"),onChange:e=>this.onPassphraseChange(e,"passphrase1"),size:64,type:"password",value:this.state.passphrase1}))),o.createElement("div",{className:"mx_E2eKeysDialog_inputRow"},o.createElement("div",{className:"mx_E2eKeysDialog_inputCell"},o.createElement(c.A,{disabled:e,label:(0,l._t)("Confirm your Tchap Key password"),onChange:e=>this.onPassphraseChange(e,"passphrase2"),size:64,type:"password",value:this.state.passphrase2}))))),o.createElement("div",{className:"mx_Dialog_buttons"},o.createElement("button",{onClick:this.onCancelClick,disabled:e},(0,l._t)("action|cancel")),o.createElement("input",{className:"mx_Dialog_primary",disabled:e,type:"submit",value:(0,l._t)("Save my keys")}))))}}},"./src/utils/MegolmExportEncryption.ts":(e,t,s)=>{s.d(t,{L:()=>p,c:()=>c});var r=s("./node_modules/matrix-js-sdk/src/logger.ts"),n=s("./src/languageHandler.tsx"),a=s("./src/SdkConfig.ts");const o=window.crypto.subtle;function i(e,t){return{message:e,friendlyText:t}}function l(){return(0,n._t)("encryption|export_unsupported")}async function c(e,t){const s=function(e){const t=(new TextDecoder).decode(new Uint8Array(e));let s=0;for(;;){const e=t.indexOf("\n",s);if(e<0)throw new Error("Header line not found");const r=t.slice(s,e).trim();if(s=e+1,r===d)break}const r=s;for(;;){const e=t.indexOf("\n",s);if(t.slice(s,e<0?void 0:e).trim()===m)break;if(e<0)throw new Error("Trailer line not found");s=e+1}const n=s;return function(e){const t=window.atob(e),s=new Uint8Array(t.length);for(let e=0;e<t.length;e++)s[e]=t.charCodeAt(e);return s}(t.slice(r,n))}(e),r=a.Ay.get().brand;if(s.length<1)throw i("Invalid file: too short",(0,n._t)("encryption|import_invalid_keyfile",{brand:r}));if(1!==s[0])throw i("Unsupported version",(0,n._t)("encryption|import_invalid_keyfile",{brand:r}));const c=s.length-69;if(c<0)throw i("Invalid file: too short",(0,n._t)("encryption|import_invalid_keyfile",{brand:r}));const p=s.subarray(1,17),u=s.subarray(17,33),y=s[33]<<24|s[34]<<16|s[35]<<8|s[36],w=s.subarray(37,37+c),g=s.subarray(-32),[f,_]=await h(p,y,t),b=s.subarray(0,-32);let E,x;try{E=await o.verify({name:"HMAC"},_,g,b)}catch(e){throw i("subtleCrypto.verify failed: "+e,l())}if(!E)throw i("hmac mismatch",(0,n._t)("encryption|import_invalid_passphrase"));try{x=await o.decrypt({name:"AES-CTR",counter:u,length:64},f,w)}catch(e){throw i("subtleCrypto.decrypt failed: "+e,l())}return(new TextDecoder).decode(new Uint8Array(x))}async function p(e,t,s){const r=(s=s||{}).kdf_rounds||5e5,n=new Uint8Array(16);window.crypto.getRandomValues(n);const a=new Uint8Array(16);window.crypto.getRandomValues(a),a[8]&=127;const[c,p]=await h(n,r,t),y=(new TextEncoder).encode(e);let w;try{w=await o.encrypt({name:"AES-CTR",counter:a,length:64},c,y)}catch(e){throw i("subtleCrypto.encrypt failed: "+e,l())}const g=new Uint8Array(w),f=1+n.length+a.length+4+g.length+32,_=new Uint8Array(f);let b=0;_[b++]=1,_.set(n,b),b+=n.length,_.set(a,b),b+=a.length,_[b++]=r>>24,_[b++]=r>>16&255,_[b++]=r>>8&255,_[b++]=255&r,_.set(g,b),b+=g.length;const E=_.subarray(0,b);let x;try{x=await o.sign({name:"HMAC"},p,E)}catch(e){throw i("subtleCrypto.sign failed: "+e,l())}const v=new Uint8Array(x);return _.set(v,b),function(e){const t=96,s=Math.ceil(e.length/t),r=new Array(s+3);r[0]=d;let n,a=0;for(n=1;n<=s;n++)r[n]=u(e.subarray(a,a+t)),a+=t;return r[n++]=m,r[n]="",(new TextEncoder).encode(r.join("\n")).buffer}(_)}async function h(e,t,s){const n=new Date;let a,c;try{a=await o.importKey("raw",(new TextEncoder).encode(s),{name:"PBKDF2"},!1,["deriveBits"])}catch(e){throw i("subtleCrypto.importKey failed: "+e,l())}try{c=await o.deriveBits({name:"PBKDF2",salt:e,iterations:t,hash:"SHA-512"},a,512)}catch(e){throw i("subtleCrypto.deriveBits failed: "+e,l())}const p=new Date;r.v.log("E2e import/export: deriveKeys took "+(p.getTime()-n.getTime())+"ms");const h=c.slice(0,32),d=c.slice(32),m=o.importKey("raw",h,{name:"AES-CTR"},!1,["encrypt","decrypt"]).catch((e=>{throw i("subtleCrypto.importKey failed for AES key: "+e,l())})),u=o.importKey("raw",d,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign","verify"]).catch((e=>{throw i("subtleCrypto.importKey failed for HMAC key: "+e,l())}));return Promise.all([m,u])}const d="-----BEGIN MEGOLM SESSION DATA-----",m="-----END MEGOLM SESSION DATA-----";function u(e){const t=String.fromCharCode.apply(null,Array.from(e));return window.btoa(t)}}}]);
//# sourceMappingURL=7692.js.map